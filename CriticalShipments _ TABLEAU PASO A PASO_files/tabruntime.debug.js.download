/*! BEGIN TableauRuntime */

(function() {
	'dont use strict';
	var $asm = {};
	global.tab = global.tab || {};
	ss.initAssembly($asm, 'tabruntime');
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.ObjectBuilder
	var $tab_$ObjectBuilder = function(marshaller) {
		this.$integerOffset = 0;
		this.$doubleOffset = 0;
		this.$opcodeOffset = 0;
		this.$inObject = new Array();
		this.$objects = new Array();
		this.$arrays = new Array();
		this.$marshaller = null;
		this.$baseObject = null;
		this.$marshaller = marshaller;
		this.$inObject.push(true);
		this.$baseObject = {};
		this.$objects.push(this.$baseObject);
		this.$arrays.push([]);
	};
	$tab_$ObjectBuilder.__typeName = 'tab.$ObjectBuilder';
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.RWAL.RuntimeWebHost.RuntimeWebHostArg
	var $tab_$RuntimeWebHost$RuntimeWebHostArg = function() {
	};
	$tab_$RuntimeWebHost$RuntimeWebHostArg.__typeName = 'tab.$RuntimeWebHost$RuntimeWebHostArg';
	$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor = function(type, value) {
		var $this = new Object();
		$this.type = null;
		$this.value = null;
		$this.type = type;
		$this.value = value;
		return $this;
	};
	$tab_$RuntimeWebHost$RuntimeWebHostArg.isInstanceOfType = function() {
		return true;
	};
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ActivePagesKeys
	var $tab_ActivePagesKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ActivePagesKeys.__typeName = 'tab.ActivePagesKeys';
	$tab_ActivePagesKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ActivePagesKeys = $tab_ActivePagesKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AdjustAxisRangeOutputTableKeys
	var $tab_AdjustAxisRangeOutputTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AdjustAxisRangeOutputTableKeys.__typeName = 'tab.AdjustAxisRangeOutputTableKeys';
	$tab_AdjustAxisRangeOutputTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AdjustAxisRangeOutputTableKeys = $tab_AdjustAxisRangeOutputTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AnnexedDataKeys
	var $tab_AnnexedDataKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AnnexedDataKeys.__typeName = 'tab.AnnexedDataKeys';
	$tab_AnnexedDataKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AnnexedDataKeys = $tab_AnnexedDataKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AxisDescriptorHeadersTableKeys
	var $tab_AxisDescriptorHeadersTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AxisDescriptorHeadersTableKeys.__typeName = 'tab.AxisDescriptorHeadersTableKeys';
	$tab_AxisDescriptorHeadersTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AxisDescriptorHeadersTableKeys = $tab_AxisDescriptorHeadersTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AxisDescriptorNodesTableKeys
	var $tab_AxisDescriptorNodesTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AxisDescriptorNodesTableKeys.__typeName = 'tab.AxisDescriptorNodesTableKeys';
	$tab_AxisDescriptorNodesTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AxisDescriptorNodesTableKeys = $tab_AxisDescriptorNodesTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AxisModelDataTableKeys
	var $tab_AxisModelDataTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AxisModelDataTableKeys.__typeName = 'tab.AxisModelDataTableKeys';
	$tab_AxisModelDataTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AxisModelDataTableKeys = $tab_AxisModelDataTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AxisProducerInputKeys
	var $tab_AxisProducerInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AxisProducerInputKeys.__typeName = 'tab.AxisProducerInputKeys';
	$tab_AxisProducerInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AxisProducerInputKeys = $tab_AxisProducerInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AxisProducerOutputKeys
	var $tab_AxisProducerOutputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AxisProducerOutputKeys.__typeName = 'tab.AxisProducerOutputKeys';
	$tab_AxisProducerOutputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AxisProducerOutputKeys = $tab_AxisProducerOutputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AxisRangeDataTableKeys
	var $tab_AxisRangeDataTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AxisRangeDataTableKeys.__typeName = 'tab.AxisRangeDataTableKeys';
	$tab_AxisRangeDataTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AxisRangeDataTableKeys = $tab_AxisRangeDataTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AxisRangeKeys
	var $tab_AxisRangeKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AxisRangeKeys.__typeName = 'tab.AxisRangeKeys';
	$tab_AxisRangeKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AxisRangeKeys = $tab_AxisRangeKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AxisRangeTableColumnsKeys
	var $tab_AxisRangeTableColumnsKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AxisRangeTableColumnsKeys.__typeName = 'tab.AxisRangeTableColumnsKeys';
	$tab_AxisRangeTableColumnsKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AxisRangeTableColumnsKeys = $tab_AxisRangeTableColumnsKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AxisRangeTableKeys
	var $tab_AxisRangeTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AxisRangeTableKeys.__typeName = 'tab.AxisRangeTableKeys';
	$tab_AxisRangeTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AxisRangeTableKeys = $tab_AxisRangeTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AxisSizeTableKeys
	var $tab_AxisSizeTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AxisSizeTableKeys.__typeName = 'tab.AxisSizeTableKeys';
	$tab_AxisSizeTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AxisSizeTableKeys = $tab_AxisSizeTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AxisTableColumnsKeys
	var $tab_AxisTableColumnsKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AxisTableColumnsKeys.__typeName = 'tab.AxisTableColumnsKeys';
	$tab_AxisTableColumnsKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AxisTableColumnsKeys = $tab_AxisTableColumnsKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.AxisTableKeys
	var $tab_AxisTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_AxisTableKeys.__typeName = 'tab.AxisTableKeys';
	$tab_AxisTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.AxisTableKeys = $tab_AxisTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.Base64HeapDecoder
	var $tab_Base64HeapDecoder = function() {
	};
	$tab_Base64HeapDecoder.__typeName = 'tab.Base64HeapDecoder';
	$tab_Base64HeapDecoder.$indexOfChar = function Base64HeapDecoder$IndexOfChar(base64CharCode) {
		if (ss.isNullOrUndefined($tab_Base64HeapDecoder.$charLookup)) {
			$tab_Base64HeapDecoder.$charLookup = new Array(4);
			for (var i = 0; i < $tab_Base64HeapDecoder.$supportedChars.length; ++i) {
				$tab_Base64HeapDecoder.$charLookup[$tab_Base64HeapDecoder.$supportedChars.charCodeAt(i)] = i;
			}
		}
		if (base64CharCode === 61) {
			return 0;
		}
		else {
			return $tab_Base64HeapDecoder.$charLookup[base64CharCode];
		}
	};
	$tab_Base64HeapDecoder.decodedLength = function Base64HeapDecoder$DecodedLength(base64) {
		var bitsToSubtract = 0;
		var base64Length = base64.length;
		var numEncodedChars = base64Length;
		if (base64.charCodeAt(base64Length - 2) === 61) {
			bitsToSubtract = 4;
			numEncodedChars -= 2;
			if (base64.charCodeAt(base64Length - 1) !== 61) {
				throw new ss.Exception('Received incorrectly formatted base64 string!');
			}
		}
		else if (base64.charCodeAt(base64Length - 1) === 61) {
			numEncodedChars -= 1;
			bitsToSubtract = 2;
		}
		return ss.Int32.div(numEncodedChars * 6 - bitsToSubtract, 8);
	};
	$tab_Base64HeapDecoder.run = function Base64HeapDecoder$Run(p, heap, base64) {
		var len = base64.length;
		var encoded1 = 0, encoded2 = 0, encoded3 = 0, encoded4 = 0;
		var numDecoded = 0;
		var decodedLen = $tab_Base64HeapDecoder.decodedLength(base64);
		for (var i = 0; i < len; i += 4) {
			encoded1 = $tab_Base64HeapDecoder.$indexOfChar(base64.charCodeAt(i));
			encoded2 = $tab_Base64HeapDecoder.$indexOfChar(base64.charCodeAt(i + 1));
			encoded3 = $tab_Base64HeapDecoder.$indexOfChar(base64.charCodeAt(i + 2));
			encoded4 = $tab_Base64HeapDecoder.$indexOfChar(base64.charCodeAt(i + 3));
			heap[p++] = encoded1 << 2 | encoded2 >>> 4;
			numDecoded++;
			if (numDecoded < decodedLen) {
				heap[p++] = (encoded2 & 15) << 4 | encoded3 >>> 2;
				numDecoded++;
			}
			if (numDecoded < decodedLen) {
				heap[p++] = (encoded3 & 3) << 6 | encoded4 & 63;
				numDecoded++;
			}
		}
	};
	global.tab.Base64HeapDecoder = $tab_Base64HeapDecoder;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.BorderStylesProducerInputKeys
	var $tab_BorderStylesProducerInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_BorderStylesProducerInputKeys.__typeName = 'tab.BorderStylesProducerInputKeys';
	$tab_BorderStylesProducerInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.BorderStylesProducerInputKeys = $tab_BorderStylesProducerInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.CommonEncodingsKeys
	var $tab_CommonEncodingsKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_CommonEncodingsKeys.__typeName = 'tab.CommonEncodingsKeys';
	$tab_CommonEncodingsKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.CommonEncodingsKeys = $tab_CommonEncodingsKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ComposedTextResultKeys
	var $tab_ComposedTextResultKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ComposedTextResultKeys.__typeName = 'tab.ComposedTextResultKeys';
	$tab_ComposedTextResultKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ComposedTextResultKeys = $tab_ComposedTextResultKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ComputeAxisExtentsOutputsKeys
	var $tab_ComputeAxisExtentsOutputsKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ComputeAxisExtentsOutputsKeys.__typeName = 'tab.ComputeAxisExtentsOutputsKeys';
	$tab_ComputeAxisExtentsOutputsKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ComputeAxisExtentsOutputsKeys = $tab_ComputeAxisExtentsOutputsKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ComputeTreemapLayoutOutputTableKeys
	var $tab_ComputeTreemapLayoutOutputTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ComputeTreemapLayoutOutputTableKeys.__typeName = 'tab.ComputeTreemapLayoutOutputTableKeys';
	$tab_ComputeTreemapLayoutOutputTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ComputeTreemapLayoutOutputTableKeys = $tab_ComputeTreemapLayoutOutputTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ConstraintSystemKeys
	var $tab_ConstraintSystemKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ConstraintSystemKeys.__typeName = 'tab.ConstraintSystemKeys';
	$tab_ConstraintSystemKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ConstraintSystemKeys = $tab_ConstraintSystemKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ConstraintTableKeys
	var $tab_ConstraintTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ConstraintTableKeys.__typeName = 'tab.ConstraintTableKeys';
	$tab_ConstraintTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ConstraintTableKeys = $tab_ConstraintTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.DatastoreHandle
	var $tab_DatastoreHandle = function(handleValue, disposeMethod) {
		$tab_OpaqueHandle.call(this, handleValue, disposeMethod);
	};
	$tab_DatastoreHandle.__typeName = 'tab.DatastoreHandle';
	global.tab.DatastoreHandle = $tab_DatastoreHandle;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.DateTimeTickPerHeaderInputTableKeys
	var $tab_DateTimeTickPerHeaderInputTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_DateTimeTickPerHeaderInputTableKeys.__typeName = 'tab.DateTimeTickPerHeaderInputTableKeys';
	$tab_DateTimeTickPerHeaderInputTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.DateTimeTickPerHeaderInputTableKeys = $tab_DateTimeTickPerHeaderInputTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.DomainLookupKeys
	var $tab_DomainLookupKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_DomainLookupKeys.__typeName = 'tab.DomainLookupKeys';
	$tab_DomainLookupKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.DomainLookupKeys = $tab_DomainLookupKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.EllipsisTableKeys
	var $tab_EllipsisTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_EllipsisTableKeys.__typeName = 'tab.EllipsisTableKeys';
	$tab_EllipsisTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.EllipsisTableKeys = $tab_EllipsisTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.EmscriptenSupport
	var $tab_EmscriptenSupport = function() {
	};
	$tab_EmscriptenSupport.__typeName = 'tab.EmscriptenSupport';
	$tab_EmscriptenSupport.getExceptionInformation = function EmscriptenSupport$GetExceptionInformation(e) {
		var parsed = e.get_message().split(' ', 1);
		if (parsed.length === 1) {
			var exceptionPtr = parseInt(parsed[0]);
			var functionPtr = RuntimeWebModule.HEAPU32[RuntimeWebModule.HEAPU32[exceptionPtr >> 2] + 8 >>> 2];
			if (functionPtr === 0) {
				return e;
			}
			var strPtr = RuntimeWebModule.dynCall_ii(functionPtr, exceptionPtr);
			if (strPtr === 0) {
				return e;
			}
			var endPtr = strPtr;
			for (; endPtr < RuntimeWebModule.HEAPU8.length; endPtr++) {
				if (RuntimeWebModule.HEAPU8[endPtr] === 0) {
					break;
				}
			}
			try {
				var cppException = $tab_Utf8TextDecoder.decode(RuntimeWebModule.HEAPU8.subarray(strPtr, endPtr));
				return new ss.Exception("Emscripten thrown exception: '" + cppException + "'", e);
			}
			catch ($t1) {
				return e;
			}
		}
		return e;
	};
	global.tab.EmscriptenSupport = $tab_EmscriptenSupport;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.EncodingsTableKeys
	var $tab_EncodingsTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_EncodingsTableKeys.__typeName = 'tab.EncodingsTableKeys';
	$tab_EncodingsTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.EncodingsTableKeys = $tab_EncodingsTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.EnumConversions
	var $tab_EnumConversions = function() {
	};
	$tab_EnumConversions.__typeName = 'tab.EnumConversions';
	$tab_EnumConversions.tableauFontStyleFromInt = function EnumConversions$TableauFontStyleFromInt(value) {
		if (ss.isNullOrUndefined($tab_EnumConversions.$tableauFontStyleArray)) {
			$tab_EnumConversions.$tableauFontStyleArray = ['font-style-normal', 'font-style-italic'];
		}
		ss.Debug.assert(value >= 0 && value < $tab_EnumConversions.$tableauFontStyleArray.length, 'Found an unexpected value when trying to convert from int to TableauFontStyle!!!');
		return $tab_EnumConversions.$tableauFontStyleArray[value];
	};
	$tab_EnumConversions.textDecorationFromInt = function EnumConversions$TextDecorationFromInt(value) {
		if (ss.isNullOrUndefined($tab_EnumConversions.$textDecorationArray)) {
			$tab_EnumConversions.$textDecorationArray = ['text-decoration-none', 'text-decoration-underline', 'text-decoration-overline', 'text-decoration-strikethrough'];
		}
		ss.Debug.assert(value >= 0 && value < $tab_EnumConversions.$textDecorationArray.length, 'Found an unexpected value when trying to convert from int to TextDecoration!!!');
		return $tab_EnumConversions.$textDecorationArray[value];
	};
	$tab_EnumConversions.fontWeightFromInt = function EnumConversions$FontWeightFromInt(value) {
		if (ss.isNullOrUndefined($tab_EnumConversions.$fontWeightArray)) {
			$tab_EnumConversions.$fontWeightArray = ['font-weight-normal', 'font-weight-bold'];
		}
		ss.Debug.assert(value >= 0 && value < $tab_EnumConversions.$fontWeightArray.length, 'Found an unexpected value when trying to convert from int to FontWeight!!!');
		return $tab_EnumConversions.$fontWeightArray[value];
	};
	$tab_EnumConversions.textOrientFromInt = function EnumConversions$TextOrientFromInt(value) {
		if (ss.isNullOrUndefined($tab_EnumConversions.$textOrientArray)) {
			$tab_EnumConversions.$textOrientArray = ['text-orient-auto', 'text-orient-horizontal', 'text-orient-vertical-up', 'text-orient-vertical-down'];
		}
		ss.Debug.assert(value >= 0 && value < $tab_EnumConversions.$textOrientArray.length, 'Found an unexpected value when trying to convert from int to TextOrient!!!');
		return $tab_EnumConversions.$textOrientArray[value];
	};
	$tab_EnumConversions.datePeriodTypeFromInt = function EnumConversions$DatePeriodTypeFromInt(value) {
		if (ss.isNullOrUndefined($tab_EnumConversions.$datePeriodTypeArray)) {
			$tab_EnumConversions.$datePeriodTypeArray = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'iso-year', 'iso-quarter', 'iso-week'];
		}
		ss.Debug.assert(value >= 0 && value < $tab_EnumConversions.$datePeriodTypeArray.length, 'Found an unexpected value when trying to convert from int to DatePeriodType!!!');
		return $tab_EnumConversions.$datePeriodTypeArray[value];
	};
	$tab_EnumConversions.labelHAlignmentFromInt = function EnumConversions$LabelHAlignmentFromInt(value) {
		if (ss.isNullOrUndefined($tab_EnumConversions.$labelHAlignmentArray)) {
			$tab_EnumConversions.$labelHAlignmentArray = ['h-align-left', 'h-align-center', 'h-align-right', 'h-align-auto'];
		}
		ss.Debug.assert(value >= 0 && value < $tab_EnumConversions.$labelHAlignmentArray.length, 'Found an unexpected value when trying to convert from int to LabelHAlignment!!!');
		return $tab_EnumConversions.$labelHAlignmentArray[value];
	};
	$tab_EnumConversions.labelVAlignmentFromInt = function EnumConversions$LabelVAlignmentFromInt(value) {
		if (ss.isNullOrUndefined($tab_EnumConversions.$labelVAlignmentArray)) {
			$tab_EnumConversions.$labelVAlignmentArray = ['v-align-bottom', 'v-align-center', 'v-align-top', 'v-align-auto'];
		}
		ss.Debug.assert(value >= 0 && value < $tab_EnumConversions.$labelVAlignmentArray.length, 'Found an unexpected value when trying to convert from int to LabelVAlignment!!!');
		return $tab_EnumConversions.$labelVAlignmentArray[value];
	};
	$tab_EnumConversions.linePatternFromInt = function EnumConversions$LinePatternFromInt(value) {
		if (ss.isNullOrUndefined($tab_EnumConversions.$linePatternArray)) {
			$tab_EnumConversions.$linePatternArray = ['none', 'solid', 'dashed', 'dotted'];
		}
		ss.Debug.assert(value >= 0 && value < $tab_EnumConversions.$linePatternArray.length, 'Found an unexpected value when trying to convert from int to LinePattern!!!');
		return $tab_EnumConversions.$linePatternArray[value];
	};
	$tab_EnumConversions.lineCapFromInt = function EnumConversions$LineCapFromInt(value) {
		if (ss.isNullOrUndefined($tab_EnumConversions.$lineCapArray)) {
			$tab_EnumConversions.$lineCapArray = ['flat', 'square', 'round', 'triangle'];
		}
		ss.Debug.assert(value >= 0 && value < $tab_EnumConversions.$lineCapArray.length, 'Found an unexpected value when trying to convert from int to LineCap!!!');
		return $tab_EnumConversions.$lineCapArray[value];
	};
	$tab_EnumConversions.lineJoinFromInt = function EnumConversions$LineJoinFromInt(value) {
		if (ss.isNullOrUndefined($tab_EnumConversions.$lineJoinArray)) {
			$tab_EnumConversions.$lineJoinArray = ['bevel', 'miter', 'round'];
		}
		ss.Debug.assert(value >= 0 && value < $tab_EnumConversions.$lineJoinArray.length, 'Found an unexpected value when trying to convert from int to LineJoin!!!');
		return $tab_EnumConversions.$lineJoinArray[value];
	};
	$tab_EnumConversions.primitiveFromInt = function EnumConversions$PrimitiveFromInt(value) {
		if (ss.isNullOrUndefined($tab_EnumConversions.$primitiveArray)) {
			$tab_EnumConversions.$primitiveArray = ['shape', 'line', 'bar', 'polar-bar', 'text', 'label', 'pie', 'area', 'polygon', 'multipolygon', 'square', 'heatmap', 'count'];
		}
		ss.Debug.assert(value >= 0 && value < $tab_EnumConversions.$primitiveArray.length, 'Found an unexpected value when trying to convert from int to Primitive!!!');
		return $tab_EnumConversions.$primitiveArray[value];
	};
	$tab_EnumConversions.vizTypeFromInt = function EnumConversions$VizTypeFromInt(value) {
		if (ss.isNullOrUndefined($tab_EnumConversions.$vizTypeArray)) {
			$tab_EnumConversions.$vizTypeArray = ['standard', 'oo-stacked', 'gantt-stacked', 'treemap', 'bubble', 'wordle', 'highlight', 'count'];
		}
		ss.Debug.assert(value >= 0 && value < $tab_EnumConversions.$vizTypeArray.length, 'Found an unexpected value when trying to convert from int to VizType!!!');
		return $tab_EnumConversions.$vizTypeArray[value];
	};
	$tab_EnumConversions.visualPartFromInt = function EnumConversions$VisualPartFromInt(value) {
		if (ss.isNullOrUndefined($tab_EnumConversions.$visualPartArray)) {
			$tab_EnumConversions.$visualPartArray = ['misc', 'annotations', 'axis-rules', 'top-axis', 'bottom-axis', 'left-axis', 'right-axis', 'background', 'borders', 'caption', 'cell-borders', 'decoration', 'drop-lines', 'x-labels', 'y-labels', 'legends', 'marks', 'mark-labels', 'mark-trails', 'ref-bands', 'ref-lines', 'pane-borders', 'scroll-bars', 'title', 'trend-lines', 'upper-map-layers', 'header', 'axis'];
		}
		ss.Debug.assert(value >= 0 && value < $tab_EnumConversions.$visualPartArray.length, 'Found an unexpected value when trying to convert from int to VisualPart!!!');
		return $tab_EnumConversions.$visualPartArray[value];
	};
	global.tab.EnumConversions = $tab_EnumConversions;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ExpressionCoefficientTableKeys
	var $tab_ExpressionCoefficientTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ExpressionCoefficientTableKeys.__typeName = 'tab.ExpressionCoefficientTableKeys';
	$tab_ExpressionCoefficientTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ExpressionCoefficientTableKeys = $tab_ExpressionCoefficientTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ExpressionConstantTableKeys
	var $tab_ExpressionConstantTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ExpressionConstantTableKeys.__typeName = 'tab.ExpressionConstantTableKeys';
	$tab_ExpressionConstantTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ExpressionConstantTableKeys = $tab_ExpressionConstantTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ExtendedDomainKeys
	var $tab_ExtendedDomainKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ExtendedDomainKeys.__typeName = 'tab.ExtendedDomainKeys';
	$tab_ExtendedDomainKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ExtendedDomainKeys = $tab_ExtendedDomainKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ExtendedDomainPerAxisKeys
	var $tab_ExtendedDomainPerAxisKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ExtendedDomainPerAxisKeys.__typeName = 'tab.ExtendedDomainPerAxisKeys';
	$tab_ExtendedDomainPerAxisKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ExtendedDomainPerAxisKeys = $tab_ExtendedDomainPerAxisKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.FallbackTextDecoder
	var $tab_FallbackTextDecoder = function() {
	};
	$tab_FallbackTextDecoder.__typeName = 'tab.FallbackTextDecoder';
	$tab_FallbackTextDecoder.decode = function FallbackTextDecoder$Decode(u8Array) {
		var u0, u1, u2, u3, u4, u5;
		var idx = 0;
		var str = '';
		var len = u8Array.length;
		while (idx < len) {
			u0 = u8Array[idx++];
			if (u0 === 0) {
				return str;
			}
			if ((u0 & 128) === 0) {
				str += String.fromCharCode(u0);
				continue;
			}
			u1 = u8Array[idx++] & 63;
			if ((u0 & 224) === 192) {
				str += String.fromCharCode((u0 & 31) << 6 | u1);
				continue;
			}
			u2 = u8Array[idx++] & 63;
			if ((u0 & 240) === 224) {
				u0 = (u0 & 15) << 12 | u1 << 6 | u2;
			}
			else {
				u3 = u8Array[idx++] & 63;
				if ((u0 & 248) === 240) {
					u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
				}
				else {
					u4 = u8Array[idx++] & 63;
					if ((u0 & 252) === 248) {
						u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
					}
					else {
						u5 = u8Array[idx++] & 63;
						u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
					}
				}
			}
			if (u0 < 65536) {
				str += String.fromCharCode(u0);
			}
			else {
				var ch = u0 - 65536;
				str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
			}
		}
		return str;
	};
	global.tab.FallbackTextDecoder = $tab_FallbackTextDecoder;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.FallbackTextEncoder
	var $tab_FallbackTextEncoder = function() {
	};
	$tab_FallbackTextEncoder.__typeName = 'tab.FallbackTextEncoder';
	$tab_FallbackTextEncoder.$stringBytesLength = function FallbackTextEncoder$StringBytesLength(str) {
		var len = 0;
		for (var i = 0; i < str.length; i++) {
			var u = str.charCodeAt(i);
			if (u >= 55296 && u <= 57343) {
				u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
			}
			if (u <= 127) {
				++len;
			}
			else if (u <= 2047) {
				len += 2;
			}
			else if (u <= 65535) {
				len += 3;
			}
			else if (u <= 2097151) {
				len += 4;
			}
			else if (u <= 67108863) {
				len += 5;
			}
			else {
				len += 6;
			}
		}
		return len;
	};
	$tab_FallbackTextEncoder.encode = function FallbackTextEncoder$Encode(str) {
		var outputLength = $tab_FallbackTextEncoder.$stringBytesLength(str);
		var outU8Array = new Uint8Array(outputLength);
		var outIdx = 0;
		for (var i = 0; i < str.length; i++) {
			var u = str.charCodeAt(i);
			if (u >= 55296 && u <= 57343) {
				u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
			}
			if (u <= 127) {
				outU8Array[outIdx++] = u;
			}
			else if (u <= 2047) {
				outU8Array[outIdx++] = 192 | u >> 6;
				outU8Array[outIdx++] = 128 | u & 63;
			}
			else if (u <= 65535) {
				outU8Array[outIdx++] = 224 | u >> 12;
				outU8Array[outIdx++] = 128 | u >> 6 & 63;
				outU8Array[outIdx++] = 128 | u & 63;
			}
			else if (u <= 2097151) {
				outU8Array[outIdx++] = 240 | u >> 18;
				outU8Array[outIdx++] = 128 | u >> 12 & 63;
				outU8Array[outIdx++] = 128 | u >> 6 & 63;
				outU8Array[outIdx++] = 128 | u & 63;
			}
			else if (u <= 67108863) {
				outU8Array[outIdx++] = 248 | u >> 24;
				outU8Array[outIdx++] = 128 | u >> 18 & 63;
				outU8Array[outIdx++] = 128 | u >> 12 & 63;
				outU8Array[outIdx++] = 128 | u >> 6 & 63;
				outU8Array[outIdx++] = 128 | u & 63;
			}
			else {
				outU8Array[outIdx++] = 252 | u >> 30;
				outU8Array[outIdx++] = 128 | u >> 24 & 63;
				outU8Array[outIdx++] = 128 | u >> 18 & 63;
				outU8Array[outIdx++] = 128 | u >> 12 & 63;
				outU8Array[outIdx++] = 128 | u >> 6 & 63;
				outU8Array[outIdx++] = 128 | u & 63;
			}
		}
		return outU8Array;
	};
	global.tab.FallbackTextEncoder = $tab_FallbackTextEncoder;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.FlattenedAxisDescriptorKeys
	var $tab_FlattenedAxisDescriptorKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_FlattenedAxisDescriptorKeys.__typeName = 'tab.FlattenedAxisDescriptorKeys';
	$tab_FlattenedAxisDescriptorKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.FlattenedAxisDescriptorKeys = $tab_FlattenedAxisDescriptorKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.FormattedTextInputKeys
	var $tab_FormattedTextInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_FormattedTextInputKeys.__typeName = 'tab.FormattedTextInputKeys';
	$tab_FormattedTextInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.FormattedTextInputKeys = $tab_FormattedTextInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.GridLineProducerInputKeys
	var $tab_GridLineProducerInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_GridLineProducerInputKeys.__typeName = 'tab.GridLineProducerInputKeys';
	$tab_GridLineProducerInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.GridLineProducerInputKeys = $tab_GridLineProducerInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.GridLineProducerOutputKeys
	var $tab_GridLineProducerOutputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_GridLineProducerOutputKeys.__typeName = 'tab.GridLineProducerOutputKeys';
	$tab_GridLineProducerOutputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.GridLineProducerOutputKeys = $tab_GridLineProducerOutputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.HeatmapInputEncodingKeys
	var $tab_HeatmapInputEncodingKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_HeatmapInputEncodingKeys.__typeName = 'tab.HeatmapInputEncodingKeys';
	$tab_HeatmapInputEncodingKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.HeatmapInputEncodingKeys = $tab_HeatmapInputEncodingKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.HeatmapOutputEncodingKeys
	var $tab_HeatmapOutputEncodingKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_HeatmapOutputEncodingKeys.__typeName = 'tab.HeatmapOutputEncodingKeys';
	$tab_HeatmapOutputEncodingKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.HeatmapOutputEncodingKeys = $tab_HeatmapOutputEncodingKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.HeatmapProducerInputKeys
	var $tab_HeatmapProducerInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_HeatmapProducerInputKeys.__typeName = 'tab.HeatmapProducerInputKeys';
	$tab_HeatmapProducerInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.HeatmapProducerInputKeys = $tab_HeatmapProducerInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.HeatmapProducerOutputKeys
	var $tab_HeatmapProducerOutputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_HeatmapProducerOutputKeys.__typeName = 'tab.HeatmapProducerOutputKeys';
	$tab_HeatmapProducerOutputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.HeatmapProducerOutputKeys = $tab_HeatmapProducerOutputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.HexEncoder
	var $tab_HexEncoder = function() {
	};
	$tab_HexEncoder.__typeName = 'tab.HexEncoder';
	$tab_HexEncoder.$initialize = function HexEncoder$Initialize() {
		if (!$tab_HexEncoder.$initialized) {
			$tab_HexEncoder.$initialized = true;
			$tab_HexEncoder.$byteLookup = new Array(256);
			for (var i = 0; i < 16; i++) {
				$tab_HexEncoder.$byteLookup[i] = '0' + i.toString(16);
			}
			for (var i1 = 16; i1 < 256; i1++) {
				$tab_HexEncoder.$byteLookup[i1] = i1.toString(16);
			}
		}
	};
	$tab_HexEncoder.encodeBufferToHex = function HexEncoder$EncodeBufferToHex(toEncode) {
		$tab_HexEncoder.$initialize();
		var bytesEncoded = new Array(toEncode.byteLength * 2);
		for (var i = 0; i < toEncode.byteLength; i++) {
			bytesEncoded[i] = $tab_HexEncoder.$byteLookup[toEncode[i]];
		}
		return bytesEncoded.join('');
	};
	global.tab.HexEncoder = $tab_HexEncoder;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.HexHeapDecoder
	var $tab_HexHeapDecoder = function() {
	};
	$tab_HexHeapDecoder.__typeName = 'tab.HexHeapDecoder';
	$tab_HexHeapDecoder.decodedLength = function HexHeapDecoder$DecodedLength(hex) {
		return ss.Int32.div(hex.length, 2);
	};
	$tab_HexHeapDecoder.run = function HexHeapDecoder$Run(heapOffset, heap, hex) {
		var i = 0;
		while (i < hex.length) {
			heap[heapOffset++] = $tab_HexHeapDecoder.$decoderLookup[hex.charCodeAt(i++)] * 16 | $tab_HexHeapDecoder.$decoderLookup[hex.charCodeAt(i++)];
		}
	};
	global.tab.HexHeapDecoder = $tab_HexHeapDecoder;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.HiddenMarksKeys
	var $tab_HiddenMarksKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_HiddenMarksKeys.__typeName = 'tab.HiddenMarksKeys';
	$tab_HiddenMarksKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.HiddenMarksKeys = $tab_HiddenMarksKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.HuttUtils
	var $tab_HuttUtils = function() {
	};
	$tab_HuttUtils.__typeName = 'tab.HuttUtils';
	$tab_HuttUtils.getMappedArray = function HuttUtils$GetMappedArray(type, heap, offset, count) {
		switch (type) {
			case 32: {
				return new Uint8Array(heap, offset, count);
			}
			case 33: {
				return new Uint16Array(heap, offset, count);
			}
			case 34: {
				return new Uint32Array(heap, offset, count);
			}
			case 40: {
				return new Int8Array(heap, offset, count);
			}
			case 41: {
				return new Int16Array(heap, offset, count);
			}
			case 42: {
				return new Int32Array(heap, offset, count);
			}
			case 50: {
				return new Float32Array(heap, offset, count);
			}
			case 51: {
				return new Float64Array(heap, offset, count);
			}
		}
		throw new ss.Exception('Unsupported array type: ' + type);
	};
	$tab_HuttUtils.getMappedArrayJabba = function HuttUtils$GetMappedArrayJabba(type, heap, offset, size) {
		var sizePerByte = $tab_HuttUtils.$getTypeByteSize(type);
		ss.Debug.assert(sizePerByte !== 0, "hutt type byte size can't be 0");
		var count = ss.Int32.div(size, $tab_HuttUtils.$getTypeByteSize(type));
		switch (type) {
			case 32: {
				return new Uint8Array(heap, offset, count);
			}
			case 33: {
				return new Uint16Array(heap, offset, count);
			}
			case 34: {
				return new Uint32Array(heap, offset, count);
			}
			case 40: {
				return new Int8Array(heap, offset, count);
			}
			case 41: {
				return new Int16Array(heap, offset, count);
			}
			case 42: {
				return new Int32Array(heap, offset, count);
			}
			case 50: {
				return new Float32Array(heap, offset, count);
			}
			case 51: {
				return new Float64Array(heap, offset, count);
			}
		}
		throw new ss.Exception('Unsupported array type: ' + type);
	};
	$tab_HuttUtils.$getTypeByteSize = function HuttUtils$GetTypeByteSize(type) {
		var typeAsInt = type;
		return 1 << (typeAsInt & 7);
	};
	global.tab.HuttUtils = $tab_HuttUtils;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ImportKeys
	var $tab_ImportKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ImportKeys.__typeName = 'tab.ImportKeys';
	$tab_ImportKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ImportKeys = $tab_ImportKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.IncrementalUpdateInputKeys
	var $tab_IncrementalUpdateInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_IncrementalUpdateInputKeys.__typeName = 'tab.IncrementalUpdateInputKeys';
	$tab_IncrementalUpdateInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.IncrementalUpdateInputKeys = $tab_IncrementalUpdateInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.IndexedFieldNameKeys
	var $tab_IndexedFieldNameKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_IndexedFieldNameKeys.__typeName = 'tab.IndexedFieldNameKeys';
	$tab_IndexedFieldNameKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.IndexedFieldNameKeys = $tab_IndexedFieldNameKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.RWAL.IRuntimeWebModule
	var $tab_IRuntimeWebModule = function() {
	};
	$tab_IRuntimeWebModule.__typeName = 'tab.IRuntimeWebModule';
	global.tab.IRuntimeWebModule = $tab_IRuntimeWebModule;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.IRWALSupport
	var $tab_IRWALSupport = function() {
	};
	$tab_IRWALSupport.__typeName = 'tab.IRWALSupport';
	global.tab.IRWALSupport = $tab_IRWALSupport;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.JabbaManifest
	var $tab_JabbaManifest = function(manifests, offset) {
		this.typeId = 0;
		this.encoding = 0;
		this.dataOffset = 0;
		this.dataSize = 0;
		this.typeId = manifests[offset + 0];
		this.encoding = manifests[offset + 1];
		this.dataOffset = manifests[offset + 2];
		this.dataSize = manifests[offset + 3];
	};
	$tab_JabbaManifest.__typeName = 'tab.JabbaManifest';
	global.tab.JabbaManifest = $tab_JabbaManifest;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.JabbaUnpacker
	var $tab_JabbaUnpacker = function(jabbaBlob) {
		this.$byteHeap = null;
		this.$jabbaBlob = null;
		this.$manifestCount = 0;
		this.$dataOffset = 0;
		this.$destinationSize = 0;
		this.$manifests = [];
		this.unpacked = [];
		this.$jabbaBlob = jabbaBlob;
		this.$unpackBlob();
	};
	$tab_JabbaUnpacker.__typeName = 'tab.JabbaUnpacker';
	global.tab.JabbaUnpacker = $tab_JabbaUnpacker;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.JsHeapMarshaller
	var $tab_JsHeapMarshaller = function(heap) {
		this.data = null;
		this.stringTable = {};
		this.marshalled = {};
		this.heap = null;
		this.jabba = null;
		this.heap = heap;
		this.jabba = new $tab_JabbaUnpacker(heap);
		this.data = new $tab_MarshalledVectors(this.jabba);
		this.$populateStringTable();
	};
	$tab_JsHeapMarshaller.__typeName = 'tab.JsHeapMarshaller';
	$tab_JsHeapMarshaller.$ctor1 = function(heap, heapoffset) {
		this.data = null;
		this.stringTable = {};
		this.marshalled = {};
		this.heap = null;
		this.jabba = null;
		this.heap = heap;
		this.jabba = null;
		var marshalled_struct = new Int32Array(this.heap, heapoffset, 10);
		this.data = new $tab_MarshalledVectors.$ctor1(marshalled_struct, this.heap);
		this.$populateStringTable();
	};
	$tab_JsHeapMarshaller.unmarshall$1 = function JsHeapMarshaller$Unmarshall(heap, heapoffset) {
		var marshaller = new $tab_JsHeapMarshaller.$ctor1(heap, heapoffset);
		var builder = new $tab_$ObjectBuilder(marshaller);
		return builder.$buildObject();
	};
	$tab_JsHeapMarshaller.unmarshall = function JsHeapMarshaller$Unmarshall(heap) {
		var marshaller = new $tab_JsHeapMarshaller(heap);
		var builder = new $tab_$ObjectBuilder(marshaller);
		return builder.$buildObject();
	};
	$tab_JsHeapMarshaller.unmarshallHex = function JsHeapMarshaller$UnmarshallHex(hexstr) {
		if (!ss.keyExists($tab_JsHeapMarshaller.$decoderCache, hexstr)) {
			$tab_JsHeapMarshaller.$decoderCache[hexstr] = $tab_JsHeapMarshaller.unmarshall($tab_JsHeapMarshaller.$fromHex(hexstr));
		}
		if ($tab_$ObjectBuilder.$useWriteDetector) {
			return $tab_JsHeapMarshaller.$decoderCache[hexstr];
		}
		else {
			var copy = {};
			_.extend(copy, $tab_JsHeapMarshaller.$decoderCache[hexstr]);
			return copy;
		}
	};
	$tab_JsHeapMarshaller.unmarshallBase64 = function JsHeapMarshaller$UnmarshallBase64(b64str) {
		var decodedLen = $tab_Base64HeapDecoder.decodedLength(b64str);
		var decoded = new Uint8Array(decodedLen);
		$tab_Base64HeapDecoder.run(0, decoded, b64str);
		return $tab_JsHeapMarshaller.unmarshall(decoded.buffer);
	};
	$tab_JsHeapMarshaller.$fromHex = function JsHeapMarshaller$FromHex(hex) {
		var unpacked = new Uint8Array($tab_HexHeapDecoder.decodedLength(hex));
		$tab_HexHeapDecoder.run(0, unpacked, hex);
		return unpacked.buffer;
	};
	global.tab.JsHeapMarshaller = $tab_JsHeapMarshaller;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.KeyPath
	var $tab_KeyPath = function() {
		this.$keyPath = null;
		this.$parent = null;
		this.$initialize('', null);
	};
	$tab_KeyPath.__typeName = 'tab.KeyPath';
	$tab_KeyPath.$ctor1 = function(key_path) {
		this.$keyPath = null;
		this.$parent = null;
		this.$initialize(key_path, null);
	};
	$tab_KeyPath.$ctor2 = function(base_key) {
		this.$keyPath = null;
		this.$parent = null;
		this.$initialize(base_key.$keyPath, null);
	};
	$tab_KeyPath.$ctor3 = function(key_path, parent_key) {
		this.$keyPath = null;
		this.$parent = null;
		this.$initialize(key_path, parent_key);
	};
	global.tab.KeyPath = $tab_KeyPath;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.LabelPlacementKeys
	var $tab_LabelPlacementKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_LabelPlacementKeys.__typeName = 'tab.LabelPlacementKeys';
	$tab_LabelPlacementKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.LabelPlacementKeys = $tab_LabelPlacementKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.LabelStoreKeys
	var $tab_LabelStoreKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_LabelStoreKeys.__typeName = 'tab.LabelStoreKeys';
	$tab_LabelStoreKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.LabelStoreKeys = $tab_LabelStoreKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.LayoutInputStoreKeys
	var $tab_LayoutInputStoreKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_LayoutInputStoreKeys.__typeName = 'tab.LayoutInputStoreKeys';
	$tab_LayoutInputStoreKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.LayoutInputStoreKeys = $tab_LayoutInputStoreKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.LayoutResultStoreKeys
	var $tab_LayoutResultStoreKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_LayoutResultStoreKeys.__typeName = 'tab.LayoutResultStoreKeys';
	$tab_LayoutResultStoreKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.LayoutResultStoreKeys = $tab_LayoutResultStoreKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.LayoutSizeKeys
	var $tab_LayoutSizeKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_LayoutSizeKeys.__typeName = 'tab.LayoutSizeKeys';
	$tab_LayoutSizeKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.LayoutSizeKeys = $tab_LayoutSizeKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.LinearFloatGeometryDecoder
	var $tab_LinearFloatGeometryDecoder = function(geomEncoded) {
		this.$geomOffset = 0;
		this.$geomEncoded = null;
		this.$geomOffset = 0;
		this.$geomEncoded = geomEncoded;
	};
	$tab_LinearFloatGeometryDecoder.__typeName = 'tab.LinearFloatGeometryDecoder';
	global.tab.LinearFloatGeometryDecoder = $tab_LinearFloatGeometryDecoder;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.RWAL.LocalEmscripten
	var $tab_LocalEmscripten = function() {
	};
	$tab_LocalEmscripten.__typeName = 'tab.LocalEmscripten';
	global.tab.LocalEmscripten = $tab_LocalEmscripten;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.LocalEmscriptenSupport
	var $tab_LocalEmscriptenSupport = function() {
	};
	$tab_LocalEmscriptenSupport.__typeName = 'tab.LocalEmscriptenSupport';
	global.tab.LocalEmscriptenSupport = $tab_LocalEmscriptenSupport;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.LockedRatioKeys
	var $tab_LockedRatioKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_LockedRatioKeys.__typeName = 'tab.LockedRatioKeys';
	$tab_LockedRatioKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.LockedRatioKeys = $tab_LockedRatioKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.LogTickPerHeaderInputTableKeys
	var $tab_LogTickPerHeaderInputTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_LogTickPerHeaderInputTableKeys.__typeName = 'tab.LogTickPerHeaderInputTableKeys';
	$tab_LogTickPerHeaderInputTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.LogTickPerHeaderInputTableKeys = $tab_LogTickPerHeaderInputTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.MapBoundsKeys
	var $tab_MapBoundsKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_MapBoundsKeys.__typeName = 'tab.MapBoundsKeys';
	$tab_MapBoundsKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.MapBoundsKeys = $tab_MapBoundsKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.MapLayersModelUpdateKeys
	var $tab_MapLayersModelUpdateKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_MapLayersModelUpdateKeys.__typeName = 'tab.MapLayersModelUpdateKeys';
	$tab_MapLayersModelUpdateKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.MapLayersModelUpdateKeys = $tab_MapLayersModelUpdateKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.MapPackageKeys
	var $tab_MapPackageKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_MapPackageKeys.__typeName = 'tab.MapPackageKeys';
	$tab_MapPackageKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.MapPackageKeys = $tab_MapPackageKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.MapProviderKeys
	var $tab_MapProviderKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_MapProviderKeys.__typeName = 'tab.MapProviderKeys';
	$tab_MapProviderKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.MapProviderKeys = $tab_MapProviderKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.MarkLayoutDataKeys
	var $tab_MarkLayoutDataKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_MarkLayoutDataKeys.__typeName = 'tab.MarkLayoutDataKeys';
	$tab_MarkLayoutDataKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.MarkLayoutDataKeys = $tab_MarkLayoutDataKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.MarkLayoutOutputKeys
	var $tab_MarkLayoutOutputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_MarkLayoutOutputKeys.__typeName = 'tab.MarkLayoutOutputKeys';
	$tab_MarkLayoutOutputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.MarkLayoutOutputKeys = $tab_MarkLayoutOutputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.MarkLayoutParametersKeys
	var $tab_MarkLayoutParametersKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_MarkLayoutParametersKeys.__typeName = 'tab.MarkLayoutParametersKeys';
	$tab_MarkLayoutParametersKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.MarkLayoutParametersKeys = $tab_MarkLayoutParametersKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.MarkLayoutTempKeys
	var $tab_MarkLayoutTempKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_MarkLayoutTempKeys.__typeName = 'tab.MarkLayoutTempKeys';
	$tab_MarkLayoutTempKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.MarkLayoutTempKeys = $tab_MarkLayoutTempKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.MarshalledVectors
	var $tab_MarshalledVectors = function(jabba) {
		this.stringBuffer = null;
		this.stringLengths = null;
		this.opCodes = null;
		this.intBuffer = null;
		this.doubleBuffer = null;
		var hfsStart = jabba.unpacked.length - 5;
		this.stringBuffer = ss.cast(jabba.unpacked[hfsStart], Uint8Array);
		this.stringLengths = ss.cast(jabba.unpacked[hfsStart + 1], Uint32Array);
		this.opCodes = ss.cast(jabba.unpacked[hfsStart + 2], Uint8Array);
		this.intBuffer = ss.cast(jabba.unpacked[hfsStart + 3], Int32Array);
		this.doubleBuffer = ss.cast(jabba.unpacked[hfsStart + 4], Float64Array);
	};
	$tab_MarshalledVectors.__typeName = 'tab.MarshalledVectors';
	$tab_MarshalledVectors.$ctor1 = function(marshalled, heap) {
		this.stringBuffer = null;
		this.stringLengths = null;
		this.opCodes = null;
		this.intBuffer = null;
		this.doubleBuffer = null;
		this.stringBuffer = new Uint8Array(heap, marshalled[0], marshalled[1]);
		this.stringLengths = new Uint32Array(heap, marshalled[2], marshalled[3]);
		this.opCodes = new Uint8Array(heap, marshalled[4], marshalled[5]);
		this.intBuffer = new Int32Array(heap, marshalled[6], marshalled[7]);
		this.doubleBuffer = new Float64Array(heap, marshalled[8], marshalled[9]);
	};
	global.tab.MarshalledVectors = $tab_MarshalledVectors;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.MarshallerHandle
	var $tab_MarshallerHandle = function(handleValue, disposeMethod) {
		$tab_OpaqueHandle.call(this, handleValue, disposeMethod);
	};
	$tab_MarshallerHandle.__typeName = 'tab.MarshallerHandle';
	global.tab.MarshallerHandle = $tab_MarshallerHandle;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.NoneTickPerHeaderInputTableKeys
	var $tab_NoneTickPerHeaderInputTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_NoneTickPerHeaderInputTableKeys.__typeName = 'tab.NoneTickPerHeaderInputTableKeys';
	$tab_NoneTickPerHeaderInputTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.NoneTickPerHeaderInputTableKeys = $tab_NoneTickPerHeaderInputTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.NumberMapKeys
	var $tab_NumberMapKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_NumberMapKeys.__typeName = 'tab.NumberMapKeys';
	$tab_NumberMapKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.NumberMapKeys = $tab_NumberMapKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.OpaqueHandle
	var $tab_OpaqueHandle = function(handleValue, disposeMethod) {
		this.handleValue = 0;
		this.$disposeMethod = null;
		this.$disposedValue = false;
		ss.Debug.assert((handleValue & 255) === this.get_typeCode(), handleValue + ' given handleValue does not have right type tag for typeCode ' + this.get_typeCode());
		this.handleValue = handleValue;
		this.$disposeMethod = disposeMethod;
	};
	$tab_OpaqueHandle.__typeName = 'tab.OpaqueHandle';
	global.tab.OpaqueHandle = $tab_OpaqueHandle;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PackedLayoutKeys
	var $tab_PackedLayoutKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PackedLayoutKeys.__typeName = 'tab.PackedLayoutKeys';
	$tab_PackedLayoutKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PackedLayoutKeys = $tab_PackedLayoutKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PageIntervalKeys
	var $tab_PageIntervalKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PageIntervalKeys.__typeName = 'tab.PageIntervalKeys';
	$tab_PageIntervalKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PageIntervalKeys = $tab_PageIntervalKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PageIntervalTableColumnsKeys
	var $tab_PageIntervalTableColumnsKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PageIntervalTableColumnsKeys.__typeName = 'tab.PageIntervalTableColumnsKeys';
	$tab_PageIntervalTableColumnsKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PageIntervalTableColumnsKeys = $tab_PageIntervalTableColumnsKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PageIntervalTableKeys
	var $tab_PageIntervalTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PageIntervalTableKeys.__typeName = 'tab.PageIntervalTableKeys';
	$tab_PageIntervalTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PageIntervalTableKeys = $tab_PageIntervalTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PaneCountersKeys
	var $tab_PaneCountersKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PaneCountersKeys.__typeName = 'tab.PaneCountersKeys';
	$tab_PaneCountersKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PaneCountersKeys = $tab_PaneCountersKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.PaneDataStoreTable
	var $tab_PaneDataStoreTable = function(pageIntervalsTable, paneCount) {
		this.$intervalsTable = null;
		if (!ss.isNullOrUndefined(pageIntervalsTable.StartIndex)) {
			var rowCount = pageIntervalsTable.StartIndex.length;
			var paneCol = pageIntervalsTable.PaneCol;
			var panePage = pageIntervalsTable.PanePage;
			var paneRow = pageIntervalsTable.PaneRow;
			var paneColumnCount = paneCount.ColumnCount;
			var paneRowCount = paneCount.RowCount;
			var startIndices = pageIntervalsTable.StartIndex;
			var endIndices = pageIntervalsTable.EndIndex;
			this.$intervalsTable = new Array(paneColumnCount * paneRowCount);
			for (var intervalIndex = 0; intervalIndex < this.$intervalsTable.length; ++intervalIndex) {
				this.$intervalsTable[intervalIndex] = new Array(2 * paneCount.PageCount);
				for (var i = 0; i < this.$intervalsTable[intervalIndex].length; ++i) {
					this.$intervalsTable[intervalIndex][i] = 0;
				}
			}
			for (var i1 = 0; i1 < rowCount; ++i1) {
				var curPaneIndex = paneCol[i1] + paneRow[i1] * paneColumnCount;
				var curPageIndex = panePage[i1];
				this.$intervalsTable[curPaneIndex][curPageIndex * 2] = startIndices[i1];
				this.$intervalsTable[curPaneIndex][curPageIndex * 2 + 1] = endIndices[i1];
			}
		}
	};
	$tab_PaneDataStoreTable.__typeName = 'tab.PaneDataStoreTable';
	global.tab.PaneDataStoreTable = $tab_PaneDataStoreTable;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PaneDescriptorDataKeys
	var $tab_PaneDescriptorDataKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PaneDescriptorDataKeys.__typeName = 'tab.PaneDescriptorDataKeys';
	$tab_PaneDescriptorDataKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PaneDescriptorDataKeys = $tab_PaneDescriptorDataKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PaneExtentsPixelPositionsTableKeys
	var $tab_PaneExtentsPixelPositionsTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PaneExtentsPixelPositionsTableKeys.__typeName = 'tab.PaneExtentsPixelPositionsTableKeys';
	$tab_PaneExtentsPixelPositionsTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PaneExtentsPixelPositionsTableKeys = $tab_PaneExtentsPixelPositionsTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PaneExtentsStaticInputTableKeys
	var $tab_PaneExtentsStaticInputTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PaneExtentsStaticInputTableKeys.__typeName = 'tab.PaneExtentsStaticInputTableKeys';
	$tab_PaneExtentsStaticInputTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PaneExtentsStaticInputTableKeys = $tab_PaneExtentsStaticInputTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PaneExtentsTableColumnsKeys
	var $tab_PaneExtentsTableColumnsKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PaneExtentsTableColumnsKeys.__typeName = 'tab.PaneExtentsTableColumnsKeys';
	$tab_PaneExtentsTableColumnsKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PaneExtentsTableColumnsKeys = $tab_PaneExtentsTableColumnsKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PaneExtentsTableKeys
	var $tab_PaneExtentsTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PaneExtentsTableKeys.__typeName = 'tab.PaneExtentsTableKeys';
	$tab_PaneExtentsTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PaneExtentsTableKeys = $tab_PaneExtentsTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.PaneMarksInfo
	var $tab_PaneMarksInfo = function(startIndex, endIndex) {
		this.$startIndex = 0;
		this.$endIndex = 0;
		this.$paneIndex = 0;
		this.$pageIndices = null;
		this.$paneKey = null;
		this.$paneId = null;
		this.$startIndex = startIndex;
		this.$endIndex = endIndex;
	};
	$tab_PaneMarksInfo.__typeName = 'tab.PaneMarksInfo';
	$tab_PaneMarksInfo.$ctor1 = function(paneExtents, paneDataStoreTable, paneIndex, page, row, column) {
		this.$startIndex = 0;
		this.$endIndex = 0;
		this.$paneIndex = 0;
		this.$pageIndices = null;
		this.$paneKey = null;
		this.$paneId = null;
		this.$startIndex = paneDataStoreTable.getStartIndex(paneIndex, page);
		this.$endIndex = paneDataStoreTable.getEndIndex(paneIndex, page);
		this.$pageIndices = paneDataStoreTable.getPageIndices(paneIndex);
		this.$paneKey = paneExtents.PaneKey[paneIndex];
		this.$paneId = {};
		this.$paneId['columnIndex'.toString()] = column;
		this.$paneId['rowIndex'.toString()] = row;
		this.$paneIndex = paneIndex;
	};
	global.tab.PaneMarksInfo = $tab_PaneMarksInfo;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PaneMarksKeys
	var $tab_PaneMarksKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PaneMarksKeys.__typeName = 'tab.PaneMarksKeys';
	$tab_PaneMarksKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PaneMarksKeys = $tab_PaneMarksKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PaneStylesTableKeys
	var $tab_PaneStylesTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PaneStylesTableKeys.__typeName = 'tab.PaneStylesTableKeys';
	$tab_PaneStylesTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PaneStylesTableKeys = $tab_PaneStylesTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.PaneStylesTableUtils
	var $tab_PaneStylesTableUtils = function() {
	};
	$tab_PaneStylesTableUtils.__typeName = 'tab.PaneStylesTableUtils';
	$tab_PaneStylesTableUtils.toRuePacker = function PaneStylesTableUtils$ToRuePacker(tableName, toPack) {
		var columnCount = 0;
		if (ss.isValue(toPack.DefaultMarkColor)) {
			columnCount++;
		}
		if (ss.isValue(toPack.DefaultShape)) {
			columnCount++;
		}
		if (ss.isValue(toPack.DefaultSize)) {
			columnCount++;
		}
		if (ss.isValue(toPack.Key)) {
			columnCount++;
		}
		var packedData = new $tab_RuePacker();
		packedData.startTable(tableName, columnCount);
		if (ss.isValue(toPack.DefaultMarkColor)) {
			packedData.addColorArray('DefaultMarkColor', toPack.DefaultMarkColor);
		}
		if (ss.isValue(toPack.DefaultShape)) {
			packedData.addInt32Array('DefaultShape', toPack.DefaultShape);
		}
		if (ss.isValue(toPack.DefaultSize)) {
			packedData.addReal64Array('DefaultSize', toPack.DefaultSize);
		}
		if (ss.isValue(toPack.Key)) {
			packedData.addInt64Array('Key', toPack.Key[0]);
		}
		return packedData;
	};
	global.tab.PaneStylesTableUtils = $tab_PaneStylesTableUtils;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PartitionedDataTableKeys
	var $tab_PartitionedDataTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PartitionedDataTableKeys.__typeName = 'tab.PartitionedDataTableKeys';
	$tab_PartitionedDataTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PartitionedDataTableKeys = $tab_PartitionedDataTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PartitionResultStoreKeys
	var $tab_PartitionResultStoreKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PartitionResultStoreKeys.__typeName = 'tab.PartitionResultStoreKeys';
	$tab_PartitionResultStoreKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PartitionResultStoreKeys = $tab_PartitionResultStoreKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PerAxisBorderStylesProducerInputKeys
	var $tab_PerAxisBorderStylesProducerInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PerAxisBorderStylesProducerInputKeys.__typeName = 'tab.PerAxisBorderStylesProducerInputKeys';
	$tab_PerAxisBorderStylesProducerInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PerAxisBorderStylesProducerInputKeys = $tab_PerAxisBorderStylesProducerInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PerAxisGridLineProducerInputKeys
	var $tab_PerAxisGridLineProducerInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PerAxisGridLineProducerInputKeys.__typeName = 'tab.PerAxisGridLineProducerInputKeys';
	$tab_PerAxisGridLineProducerInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PerAxisGridLineProducerInputKeys = $tab_PerAxisGridLineProducerInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PerAxisGridLineProducerOutputKeys
	var $tab_PerAxisGridLineProducerOutputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PerAxisGridLineProducerOutputKeys.__typeName = 'tab.PerAxisGridLineProducerOutputKeys';
	$tab_PerAxisGridLineProducerOutputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PerAxisGridLineProducerOutputKeys = $tab_PerAxisGridLineProducerOutputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PerFieldAxisStyleTableKeys
	var $tab_PerFieldAxisStyleTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PerFieldAxisStyleTableKeys.__typeName = 'tab.PerFieldAxisStyleTableKeys';
	$tab_PerFieldAxisStyleTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PerFieldAxisStyleTableKeys = $tab_PerFieldAxisStyleTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PerHeaderFieldDataTableKeys
	var $tab_PerHeaderFieldDataTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PerHeaderFieldDataTableKeys.__typeName = 'tab.PerHeaderFieldDataTableKeys';
	$tab_PerHeaderFieldDataTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PerHeaderFieldDataTableKeys = $tab_PerHeaderFieldDataTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.PredictionMarkKeys
	var $tab_PredictionMarkKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_PredictionMarkKeys.__typeName = 'tab.PredictionMarkKeys';
	$tab_PredictionMarkKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.PredictionMarkKeys = $tab_PredictionMarkKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.QuantitativeColorEncodingInputKeys
	var $tab_QuantitativeColorEncodingInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_QuantitativeColorEncodingInputKeys.__typeName = 'tab.QuantitativeColorEncodingInputKeys';
	$tab_QuantitativeColorEncodingInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.QuantitativeColorEncodingInputKeys = $tab_QuantitativeColorEncodingInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.QuantitativeSizeEncodingInputKeys
	var $tab_QuantitativeSizeEncodingInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_QuantitativeSizeEncodingInputKeys.__typeName = 'tab.QuantitativeSizeEncodingInputKeys';
	$tab_QuantitativeSizeEncodingInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.QuantitativeSizeEncodingInputKeys = $tab_QuantitativeSizeEncodingInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.QuantitativeTickPerHeaderInputTableKeys
	var $tab_QuantitativeTickPerHeaderInputTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_QuantitativeTickPerHeaderInputTableKeys.__typeName = 'tab.QuantitativeTickPerHeaderInputTableKeys';
	$tab_QuantitativeTickPerHeaderInputTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.QuantitativeTickPerHeaderInputTableKeys = $tab_QuantitativeTickPerHeaderInputTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ReferenceLineApplicablePanesTableKeys
	var $tab_ReferenceLineApplicablePanesTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ReferenceLineApplicablePanesTableKeys.__typeName = 'tab.ReferenceLineApplicablePanesTableKeys';
	$tab_ReferenceLineApplicablePanesTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ReferenceLineApplicablePanesTableKeys = $tab_ReferenceLineApplicablePanesTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ReferenceLineAxisStyleTableKeys
	var $tab_ReferenceLineAxisStyleTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ReferenceLineAxisStyleTableKeys.__typeName = 'tab.ReferenceLineAxisStyleTableKeys';
	$tab_ReferenceLineAxisStyleTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ReferenceLineAxisStyleTableKeys = $tab_ReferenceLineAxisStyleTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ReferenceLineDetailsTableKeys
	var $tab_ReferenceLineDetailsTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ReferenceLineDetailsTableKeys.__typeName = 'tab.ReferenceLineDetailsTableKeys';
	$tab_ReferenceLineDetailsTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ReferenceLineDetailsTableKeys = $tab_ReferenceLineDetailsTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ReferenceLineLabelTableKeys
	var $tab_ReferenceLineLabelTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ReferenceLineLabelTableKeys.__typeName = 'tab.ReferenceLineLabelTableKeys';
	$tab_ReferenceLineLabelTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ReferenceLineLabelTableKeys = $tab_ReferenceLineLabelTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ReferenceLineLayoutElementsTableKeys
	var $tab_ReferenceLineLayoutElementsTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ReferenceLineLayoutElementsTableKeys.__typeName = 'tab.ReferenceLineLayoutElementsTableKeys';
	$tab_ReferenceLineLayoutElementsTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ReferenceLineLayoutElementsTableKeys = $tab_ReferenceLineLayoutElementsTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ReferenceLineProducerInputKeys
	var $tab_ReferenceLineProducerInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ReferenceLineProducerInputKeys.__typeName = 'tab.ReferenceLineProducerInputKeys';
	$tab_ReferenceLineProducerInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ReferenceLineProducerInputKeys = $tab_ReferenceLineProducerInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ReferenceLineProducerOutputKeys
	var $tab_ReferenceLineProducerOutputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ReferenceLineProducerOutputKeys.__typeName = 'tab.ReferenceLineProducerOutputKeys';
	$tab_ReferenceLineProducerOutputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ReferenceLineProducerOutputKeys = $tab_ReferenceLineProducerOutputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ReferenceLineStylesKeys
	var $tab_ReferenceLineStylesKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ReferenceLineStylesKeys.__typeName = 'tab.ReferenceLineStylesKeys';
	$tab_ReferenceLineStylesKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ReferenceLineStylesKeys = $tab_ReferenceLineStylesKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ReferenceLineTotalTableMapDataKeys
	var $tab_ReferenceLineTotalTableMapDataKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ReferenceLineTotalTableMapDataKeys.__typeName = 'tab.ReferenceLineTotalTableMapDataKeys';
	$tab_ReferenceLineTotalTableMapDataKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ReferenceLineTotalTableMapDataKeys = $tab_ReferenceLineTotalTableMapDataKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ReferenceLineTotalTableMapKeys
	var $tab_ReferenceLineTotalTableMapKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ReferenceLineTotalTableMapKeys.__typeName = 'tab.ReferenceLineTotalTableMapKeys';
	$tab_ReferenceLineTotalTableMapKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ReferenceLineTotalTableMapKeys = $tab_ReferenceLineTotalTableMapKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.RefLineExtentsKeys
	var $tab_RefLineExtentsKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_RefLineExtentsKeys.__typeName = 'tab.RefLineExtentsKeys';
	$tab_RefLineExtentsKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.RefLineExtentsKeys = $tab_RefLineExtentsKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.RenderingInputStoreKeys
	var $tab_RenderingInputStoreKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_RenderingInputStoreKeys.__typeName = 'tab.RenderingInputStoreKeys';
	$tab_RenderingInputStoreKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.RenderingInputStoreKeys = $tab_RenderingInputStoreKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.RuePacker
	var $tab_RuePacker = function() {
		this.$packed = null;
		this.$view = null;
		this.$currentOffset = 4;
		this.$recordCount = 0;
		this.$packed = new Uint8Array(1024);
		this.$view = new DataView(this.$packed.buffer);
	};
	$tab_RuePacker.__typeName = 'tab.RuePacker';
	$tab_RuePacker.uInt32ArrayToInt64Array = function RuePacker$UInt32ArrayToInt64Array(values) {
		var int64Array = new Array(values.length * 2);
		for (var i = 0; i < values.length; i++) {
			int64Array[2 * i] = 0;
			int64Array[2 * i + 1] = values[i];
		}
		return int64Array;
	};
	global.tab.RuePacker = $tab_RuePacker;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.RuntimeData
	var $tab_RuntimeData = function(finalStoreIn) {
		this.$finalStore = '';
		this.$finalDataStore = null;
		this.$paneStoreTable = null;
		this.$labelsPaneStoreTable = null;
		this.$annexedData = null;
		this.$drawFirsts = [];
		this.$drawLasts = [];
		this.$panes = [];
		this.$geometries = {};
		this.$finalStore = finalStoreIn;
		this.$parseFinalDataStore();
		this.$cacheAnnexedData();
		this.$cacheGeometries();
	};
	$tab_RuntimeData.__typeName = 'tab.RuntimeData';
	$tab_RuntimeData.$convertDrawPanesToVisualLists = function RuntimeData$ConvertDrawPanesToVisualLists(drawPanes) {
		if (tab.MiscUtil.isNullOrEmpty$2(drawPanes)) {
			return [];
		}
		var convertedVisualLists = [];
		for (var $t1 = 0; $t1 < drawPanes.length; $t1++) {
			var drawPane = drawPanes[$t1];
			convertedVisualLists.push($tab_RuntimeUtil.visualListFromDrawPane(drawPane));
		}
		return Array.prototype.slice.call(convertedVisualLists);
	};
	global.tab.RuntimeData = $tab_RuntimeData;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.RuntimeFormattingHooks
	var $tab_RuntimeFormattingHooks = function() {
	};
	$tab_RuntimeFormattingHooks.__typeName = 'tab.RuntimeFormattingHooks';
	$tab_RuntimeFormattingHooks.registerFormattingTuple = function RuntimeFormattingHooks$RegisterFormattingTuple(formatString) {
		var id = $tab_RuntimeFormattingHooks.$formatterId++;
		$tab_RuntimeFormattingHooks.$registeredFormatters[id] = JSON.parse(formatString);
		return id;
	};
	$tab_RuntimeFormattingHooks.formatRealValue = function RuntimeFormattingHooks$FormatRealValue(value, formatter) {
		var toFormat = { t: 'r', v: value, s: tableau.types.DataSpecial.DS_NORMAL };
		return tableau.format.formatDataValue(toFormat, 'm', $tab_RuntimeFormattingHooks.$registeredFormatters[formatter], -2, 2);
	};
	global.tab.RuntimeFormattingHooks = $tab_RuntimeFormattingHooks;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.RuntimeHandles
	var $tab_RuntimeHandles = function(vm, initialStore, finalStore) {
		this.$1$VMField = null;
		this.$1$InitialStoreField = null;
		this.$1$FinalStoreField = null;
		this.set_VM(vm);
		this.set_initialStore(initialStore);
		this.set_finalStore(finalStore);
	};
	$tab_RuntimeHandles.__typeName = 'tab.RuntimeHandles';
	global.tab.RuntimeHandles = $tab_RuntimeHandles;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.RuntimeTextMeasurementHooks
	var $tab_RuntimeTextMeasurementHooks = function() {
	};
	$tab_RuntimeTextMeasurementHooks.__typeName = 'tab.RuntimeTextMeasurementHooks';
	$tab_RuntimeTextMeasurementHooks.registerTextStyle = function RuntimeTextMeasurementHooks$RegisterTextStyle(style) {
		var id = $tab_RuntimeTextMeasurementHooks.$textStyleId++;
		var textStyle = $tab_RuntimeTextMeasurementHooks.$buildFont($tab_TupleDatastoreConversions.textStyleFromTuple(style[$tab_RuntimeTextMeasurementHooks.$marshalledTextStyleKey]));
		$tab_RuntimeTextMeasurementHooks.$registeredTextStyles[id] = textStyle;
		return id;
	};
	$tab_RuntimeTextMeasurementHooks.measureTextWidth = function RuntimeTextMeasurementHooks$MeasureTextWidth(textStyleId, text) {
		var $t1 = document.createElement('canvas');
		var canvas = ss.cast($t1, ss.isValue($t1) && (ss.isInstanceOfType($t1, Element) && $t1.tagName === 'CANVAS'));
		var ctx = ss.cast(canvas.getContext('2d'), CanvasRenderingContext2D);
		ctx.font = $tab_RuntimeTextMeasurementHooks.$registeredTextStyles[textStyleId];
		return ctx.measureText(text).width;
	};
	$tab_RuntimeTextMeasurementHooks.$buildFont = function RuntimeTextMeasurementHooks$BuildFont(textStyle) {
		var fontDescription = new ss.StringBuilder();
		if ($tab_EnumConversions.tableauFontStyleFromInt(textStyle.font_style) === 'font-style-italic') {
			fontDescription.append('italic ');
		}
		if ($tab_EnumConversions.fontWeightFromInt(textStyle.font_weight) === 'font-weight-bold') {
			fontDescription.append('bold ');
		}
		var fontName = tab.FontUtil.createFallbackCanvasFontName(textStyle.font);
		fontDescription.append(textStyle.font_size + 'pt ' + fontName);
		return fontDescription.toString();
	};
	global.tab.RuntimeTextMeasurementHooks = $tab_RuntimeTextMeasurementHooks;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.RuntimeUtil
	var $tab_RuntimeUtil = function() {
	};
	$tab_RuntimeUtil.__typeName = 'tab.RuntimeUtil';
	$tab_RuntimeUtil.canUseRuntime = function RuntimeUtil$CanUseRuntime() {
		return $tab_RuntimeUtil.isRuntimeSupported() && !$tab_RuntimeUtil.$emscriptenAborted;
	};
	$tab_RuntimeUtil.isRuntimeSupported = function RuntimeUtil$IsRuntimeSupported() {
		if ((window.navigator.userAgent.indexOf('Safari') !== -1 || window.navigator.userAgent.indexOf('TableauMobile') !== -1) && window.navigator.userAgent.indexOf('OS 11_2_') !== -1) {
			return false;
		}
		return !!!ss.isNullOrUndefined(window.self['WebAssembly']);
	};
	$tab_RuntimeUtil.emscriptenAborted = function RuntimeUtil$EmscriptenAborted() {
		$tab_RuntimeUtil.$emscriptenAborted = true;
	};
	$tab_RuntimeUtil.createRuntimeData = function RuntimeUtil$CreateRuntimeData(runtimeRenderInputDataStore) {
		var runtimeData = new $tab_RuntimeData(runtimeRenderInputDataStore);
		return runtimeData;
	};
	$tab_RuntimeUtil.visualListFromDrawPane = function RuntimeUtil$VisualListFromDrawPane(drawPane) {
		var visualList = drawPane;
		ss.Debug.assert($tab_EnumConversions.visualPartFromInt(visualList[0]) !== 'marks', 'We only support VLPM conversion for display list related draw panes!');
		return JSON.parse($tab_Utf8TextDecoder.decode(visualList[1]));
	};
	$tab_RuntimeUtil.renderNodeFromPredictionMark = function RuntimeUtil$RenderNodeFromPredictionMark(predictionMark) {
		var renderNode = {};
		var PredictionBandType = -695169174;
		var PredictionWhisker = -696033834;
		switch (predictionMark.Type) {
			case -695169174: {
				{
					var pm = {};
					pm.qrgbColor = predictionMark.color;
					pm.lineTupleIds = predictionMark.LineTupleIds;
					$tab_RuntimeUtil.$predictionIntervalFromPredictionMark(predictionMark, pm);
					renderNode = pm;
					renderNode.type = 'prediction-band';
				}
				break;
			}
			case -696033834: {
				{
					var pm1 = {};
					pm1.qrgbColors = predictionMark.Colors;
					pm1.qrgbColor = predictionMark.halo_color;
					pm1.renderOnTop = predictionMark.RenderOnTop;
					pm1.maxAlpha = predictionMark.MaxAlpha;
					$tab_RuntimeUtil.$predictionIntervalFromPredictionMark(predictionMark, pm1);
					renderNode = pm1;
					renderNode.type = 'prediction-whisker';
				}
				break;
			}
			default: {
				{
					ss.Debug.assert(false, 'Do not support conversion for this type of render node!');
				}
				break;
			}
		}
		return renderNode;
	};
	$tab_RuntimeUtil.$predictionIntervalFromPredictionMark = function RuntimeUtil$PredictionIntervalFromPredictionMark(predictionMark, pm) {
		pm.useYAxis = predictionMark.UseYAxis;
		pm.upperEnd = predictionMark.UpperEnds;
		pm.lowerEnd = predictionMark.LowerEnds;
		pm.oppositeAxis = predictionMark.OppositeAxes;
		pm.widths = predictionMark.Widths;
		pm.tupleIds = predictionMark.TupleIds;
	};
	global.tab.RuntimeUtil = $tab_RuntimeUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.RWAL.RuntimeWebHost
	var $tab_RuntimeWebHost = function(hostUrl) {
		this.$hostUrl = null;
		this.$hostUrl = 'http://' + hostUrl;
		this.$restartServer();
	};
	$tab_RuntimeWebHost.__typeName = 'tab.RuntimeWebHost';
	global.tab.RuntimeWebHost = $tab_RuntimeWebHost;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.RuntimeWebHostSupport
	var $tab_RuntimeWebHostSupport = function() {
	};
	$tab_RuntimeWebHostSupport.__typeName = 'tab.RuntimeWebHostSupport';
	global.tab.RuntimeWebHostSupport = $tab_RuntimeWebHostSupport;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.RuntimeWebModule
	var $tab_RuntimeWebModule = function() {
	};
	$tab_RuntimeWebModule.__typeName = 'tab.RuntimeWebModule';
	global.tab.RuntimeWebModule = $tab_RuntimeWebModule;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.SceneMarginLayoutTableKeys
	var $tab_SceneMarginLayoutTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_SceneMarginLayoutTableKeys.__typeName = 'tab.SceneMarginLayoutTableKeys';
	$tab_SceneMarginLayoutTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.SceneMarginLayoutTableKeys = $tab_SceneMarginLayoutTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.SceneMarginLeafElementLayoutsKeys
	var $tab_SceneMarginLeafElementLayoutsKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_SceneMarginLeafElementLayoutsKeys.__typeName = 'tab.SceneMarginLeafElementLayoutsKeys';
	$tab_SceneMarginLeafElementLayoutsKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.SceneMarginLeafElementLayoutsKeys = $tab_SceneMarginLeafElementLayoutsKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.SceneMarginLeafElementLayoutTableKeys
	var $tab_SceneMarginLeafElementLayoutTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_SceneMarginLeafElementLayoutTableKeys.__typeName = 'tab.SceneMarginLeafElementLayoutTableKeys';
	$tab_SceneMarginLeafElementLayoutTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.SceneMarginLeafElementLayoutTableKeys = $tab_SceneMarginLeafElementLayoutTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.SelectionProducerInputKeys
	var $tab_SelectionProducerInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_SelectionProducerInputKeys.__typeName = 'tab.SelectionProducerInputKeys';
	$tab_SelectionProducerInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.SelectionProducerInputKeys = $tab_SelectionProducerInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.SetLabelFormatsOutputKeys
	var $tab_SetLabelFormatsOutputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_SetLabelFormatsOutputKeys.__typeName = 'tab.SetLabelFormatsOutputKeys';
	$tab_SetLabelFormatsOutputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.SetLabelFormatsOutputKeys = $tab_SetLabelFormatsOutputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.SizeEncodingOutputKeys
	var $tab_SizeEncodingOutputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_SizeEncodingOutputKeys.__typeName = 'tab.SizeEncodingOutputKeys';
	$tab_SizeEncodingOutputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.SizeEncodingOutputKeys = $tab_SizeEncodingOutputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.SolutionResultsTableKeys
	var $tab_SolutionResultsTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_SolutionResultsTableKeys.__typeName = 'tab.SolutionResultsTableKeys';
	$tab_SolutionResultsTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.SolutionResultsTableKeys = $tab_SolutionResultsTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.SpatialProjectorKeys
	var $tab_SpatialProjectorKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_SpatialProjectorKeys.__typeName = 'tab.SpatialProjectorKeys';
	$tab_SpatialProjectorKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.SpatialProjectorKeys = $tab_SpatialProjectorKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.StackedMarkAttributesKeys
	var $tab_StackedMarkAttributesKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_StackedMarkAttributesKeys.__typeName = 'tab.StackedMarkAttributesKeys';
	$tab_StackedMarkAttributesKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.StackedMarkAttributesKeys = $tab_StackedMarkAttributesKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.TextComposerStyleTableKeys
	var $tab_TextComposerStyleTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_TextComposerStyleTableKeys.__typeName = 'tab.TextComposerStyleTableKeys';
	$tab_TextComposerStyleTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.TextComposerStyleTableKeys = $tab_TextComposerStyleTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.TextCompositionInputKeys
	var $tab_TextCompositionInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_TextCompositionInputKeys.__typeName = 'tab.TextCompositionInputKeys';
	$tab_TextCompositionInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.TextCompositionInputKeys = $tab_TextCompositionInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.TextEncodingTableKeys
	var $tab_TextEncodingTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_TextEncodingTableKeys.__typeName = 'tab.TextEncodingTableKeys';
	$tab_TextEncodingTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.TextEncodingTableKeys = $tab_TextEncodingTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.TextRunTableKeys
	var $tab_TextRunTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_TextRunTableKeys.__typeName = 'tab.TextRunTableKeys';
	$tab_TextRunTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.TextRunTableKeys = $tab_TextRunTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.TextStyleKeys
	var $tab_TextStyleKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_TextStyleKeys.__typeName = 'tab.TextStyleKeys';
	$tab_TextStyleKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.TextStyleKeys = $tab_TextStyleKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.TextStyleTableKeys
	var $tab_TextStyleTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_TextStyleTableKeys.__typeName = 'tab.TextStyleTableKeys';
	$tab_TextStyleTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.TextStyleTableKeys = $tab_TextStyleTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.TickProducerArrayConstantsKeys
	var $tab_TickProducerArrayConstantsKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_TickProducerArrayConstantsKeys.__typeName = 'tab.TickProducerArrayConstantsKeys';
	$tab_TickProducerArrayConstantsKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.TickProducerArrayConstantsKeys = $tab_TickProducerArrayConstantsKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.TickProducerInputKeys
	var $tab_TickProducerInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_TickProducerInputKeys.__typeName = 'tab.TickProducerInputKeys';
	$tab_TickProducerInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.TickProducerInputKeys = $tab_TickProducerInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.TickProducerOutputKeys
	var $tab_TickProducerOutputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_TickProducerOutputKeys.__typeName = 'tab.TickProducerOutputKeys';
	$tab_TickProducerOutputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.TickProducerOutputKeys = $tab_TickProducerOutputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.TickProducerPerHeaderOutputTableKeys
	var $tab_TickProducerPerHeaderOutputTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_TickProducerPerHeaderOutputTableKeys.__typeName = 'tab.TickProducerPerHeaderOutputTableKeys';
	$tab_TickProducerPerHeaderOutputTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.TickProducerPerHeaderOutputTableKeys = $tab_TickProducerPerHeaderOutputTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.TupleDatastoreConversions
	var $tab_TupleDatastoreConversions = function() {
	};
	$tab_TupleDatastoreConversions.__typeName = 'tab.TupleDatastoreConversions';
	$tab_TupleDatastoreConversions.textStyleFromTuple = function TupleDatastoreConversions$TextStyleFromTuple(styleTuple) {
		return { font: ss.cast(styleTuple[0], String), font_size: ss.unbox(ss.cast(styleTuple[1], ss.Int32)), font_style: ss.unbox(ss.cast(styleTuple[2], ss.Int32)), font_weight: ss.unbox(ss.cast(styleTuple[3], ss.Int32)), hAlign: ss.unbox(ss.cast(styleTuple[4], ss.Int32)), strikethrough: ss.unbox(ss.cast(styleTuple[5], Boolean)), text_alignment: ss.unbox(ss.cast(styleTuple[6], ss.Int32)), text_decoration: ss.unbox(ss.cast(styleTuple[7], ss.Int32)), text_orientation: ss.unbox(ss.cast(styleTuple[8], ss.Int32)), text_style_color: ss.unbox(ss.cast(styleTuple[9], ss.Int32)), text_wrap_mode: ss.unbox(ss.cast(styleTuple[10], ss.Int32)), underline: ss.unbox(ss.cast(styleTuple[11], Boolean)), vAlign: ss.unbox(ss.cast(styleTuple[12], ss.Int32)) };
	};
	global.tab.TupleDatastoreConversions = $tab_TupleDatastoreConversions;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.UpdatedTextStyleTableResultKeys
	var $tab_UpdatedTextStyleTableResultKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_UpdatedTextStyleTableResultKeys.__typeName = 'tab.UpdatedTextStyleTableResultKeys';
	$tab_UpdatedTextStyleTableResultKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.UpdatedTextStyleTableResultKeys = $tab_UpdatedTextStyleTableResultKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.UserPaneInfoKeys
	var $tab_UserPaneInfoKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_UserPaneInfoKeys.__typeName = 'tab.UserPaneInfoKeys';
	$tab_UserPaneInfoKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.UserPaneInfoKeys = $tab_UserPaneInfoKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.Utf8TextDecoder
	var $tab_Utf8TextDecoder = function() {
	};
	$tab_Utf8TextDecoder.__typeName = 'tab.Utf8TextDecoder';
	$tab_Utf8TextDecoder.decode = function Utf8TextDecoder$Decode(buffer) {
		if ($tab_Utf8TextDecoder.$useFallBack || !ss.isInstanceOfType(buffer, Uint8Array)) {
			return $tab_FallbackTextDecoder.decode(buffer);
		}
		else {
			return $tab_Utf8TextDecoder.$decoder.decode(buffer);
		}
	};
	$tab_Utf8TextDecoder.decodeNullTerminated = function Utf8TextDecoder$DecodeNullTerminated(buffer) {
		var strEnd;
		for (strEnd = 0; strEnd < buffer.byteLength; strEnd++) {
			if (buffer[strEnd] === 0) {
				break;
			}
		}
		return $tab_Utf8TextDecoder.decode(buffer.subarray(0, strEnd));
	};
	global.tab.Utf8TextDecoder = $tab_Utf8TextDecoder;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.Utf8TextEncoder
	var $tab_Utf8TextEncoder = function() {
	};
	$tab_Utf8TextEncoder.__typeName = 'tab.Utf8TextEncoder';
	$tab_Utf8TextEncoder.encode = function Utf8TextEncoder$Encode(toEncode) {
		if ($tab_Utf8TextEncoder.$useFallBack) {
			return $tab_FallbackTextEncoder.encode(toEncode);
		}
		else {
			return $tab_Utf8TextEncoder.$encoder.encode(toEncode);
		}
	};
	global.tab.Utf8TextEncoder = $tab_Utf8TextEncoder;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.VariableNameTableKeys
	var $tab_VariableNameTableKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_VariableNameTableKeys.__typeName = 'tab.VariableNameTableKeys';
	$tab_VariableNameTableKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.VariableNameTableKeys = $tab_VariableNameTableKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ViewParametersDataKeys
	var $tab_ViewParametersDataKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ViewParametersDataKeys.__typeName = 'tab.ViewParametersDataKeys';
	$tab_ViewParametersDataKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ViewParametersDataKeys = $tab_ViewParametersDataKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ViewParametersKeys
	var $tab_ViewParametersKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ViewParametersKeys.__typeName = 'tab.ViewParametersKeys';
	$tab_ViewParametersKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ViewParametersKeys = $tab_ViewParametersKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.ViewpointKeys
	var $tab_ViewpointKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_ViewpointKeys.__typeName = 'tab.ViewpointKeys';
	$tab_ViewpointKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.ViewpointKeys = $tab_ViewpointKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.VisualKeys
	var $tab_VisualKeys = function() {
	};
	$tab_VisualKeys.__typeName = 'tab.VisualKeys';
	global.tab.VisualKeys = $tab_VisualKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.VisualLayoutProducerInputKeys
	var $tab_VisualLayoutProducerInputKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_VisualLayoutProducerInputKeys.__typeName = 'tab.VisualLayoutProducerInputKeys';
	$tab_VisualLayoutProducerInputKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.VisualLayoutProducerInputKeys = $tab_VisualLayoutProducerInputKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Runtime.VisualLayoutResultsKeys
	var $tab_VisualLayoutResultsKeys = function() {
		$tab_KeyPath.call(this);
	};
	$tab_VisualLayoutResultsKeys.__typeName = 'tab.VisualLayoutResultsKeys';
	$tab_VisualLayoutResultsKeys.$ctor1 = function(base_key) {
		$tab_KeyPath.$ctor2.call(this, base_key);
	};
	global.tab.VisualLayoutResultsKeys = $tab_VisualLayoutResultsKeys;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Runtime.VMHandle
	var $tab_VMHandle = function(handleValue, disposeMethod) {
		$tab_OpaqueHandle.call(this, handleValue, disposeMethod);
	};
	$tab_VMHandle.__typeName = 'tab.VMHandle';
	global.tab.VMHandle = $tab_VMHandle;
	ss.initClass($tab_$ObjectBuilder, $asm, {
		$buildObject: function ObjectBuilder$BuildObject() {
			var opcode_len = this.$marshaller.data.opCodes.length;
			this.$opcodeOffset = 0;
			while (this.$opcodeOffset < opcode_len) {
				var type = this.$marshaller.data.opCodes[this.$opcodeOffset];
				if (3 === type) {
					this.$handleEndContainer();
				}
				else {
					this.$handleAdditiveOpcode(type);
				}
				++this.$opcodeOffset;
			}
			if ($tab_$ObjectBuilder.$useWriteDetector) {
				var rop = new tab.ReadOnlyProxy();
				this.$baseObject = rop.instrument(this.$baseObject);
			}
			return this.$baseObject;
		},
		$handleConstVector: function ObjectBuilder$HandleConstVector(vecType) {
			var val = null;
			if (vecType === 5) {
				val = this.$marshaller.data.intBuffer[this.$integerOffset++];
			}
			else if (vecType === 4) {
				val = this.$marshaller.data.doubleBuffer[this.$doubleOffset++];
			}
			else if (vecType === 6) {
				val = true;
			}
			else if (vecType === 7) {
				val = false;
			}
			var arr = [];
			var len = this.$marshaller.data.intBuffer[this.$integerOffset++];
			for (var i = 0; i < len; ++i) {
				arr[i] = val;
			}
			return arr;
		},
		$handleEndContainer: function ObjectBuilder$HandleEndContainer() {
			if (ss.arrayPeekBack(this.$inObject)) {
				this.$objects.pop();
			}
			else {
				this.$arrays.pop();
			}
			this.$inObject.pop();
		},
		$handleAdditiveOpcode: function ObjectBuilder$HandleAdditiveOpcode(type) {
			var builtMember = null;
			var objectId = '';
			var inObjectNow = ss.arrayPeekBack(this.$inObject);
			var currentObject = ss.arrayPeekBack(this.$objects);
			var currentArray = ss.arrayPeekBack(this.$arrays);
			if (inObjectNow) {
				var idStringId = this.$marshaller.data.intBuffer[this.$integerOffset++];
				if (idStringId < 0) {
					objectId = -idStringId;
				}
				else {
					objectId = this.$marshaller.stringTable[idStringId];
				}
			}
			if (65 === type) {
				++this.$opcodeOffset;
				var vecType = this.$marshaller.data.opCodes[this.$opcodeOffset];
				builtMember = this.$handleConstVector(vecType);
			}
			else if (64 === type) {
				builtMember = this.$handleStringVector();
			}
			else if (type >= 32 && type < 64) {
				builtMember = this.$handleTypedArray(type);
			}
			else {
				builtMember = this.$handlePrimitive(type);
			}
			if (inObjectNow) {
				currentObject[objectId] = builtMember;
			}
			else {
				currentArray.push(builtMember);
			}
		},
		$handleStringVector: function ObjectBuilder$HandleStringVector() {
			var offset = this.$marshaller.data.intBuffer[this.$integerOffset++];
			var length = this.$marshaller.data.intBuffer[this.$integerOffset++];
			var vec = [];
			var stringIds;
			if (ss.isValue(this.$marshaller.jabba)) {
				stringIds = ss.cast(this.$marshaller.jabba.unpacked[offset], Uint32Array);
			}
			else {
				stringIds = new Uint32Array(this.$marshaller.heap, offset, length);
			}
			var local_stringtable = this.$marshaller.stringTable;
			for (var $t1 = 0; $t1 < stringIds.length; $t1++) {
				var id = stringIds[$t1];
				vec.push(local_stringtable[id]);
			}
			return vec;
		},
		$handleTypedArray: function ObjectBuilder$HandleTypedArray(type) {
			var offset = this.$marshaller.data.intBuffer[this.$integerOffset++];
			var count = this.$marshaller.data.intBuffer[this.$integerOffset++];
			if (ss.isValue(this.$marshaller.jabba)) {
				return this.$marshaller.jabba.unpacked[offset];
			}
			else {
				return $tab_HuttUtils.getMappedArray(type, this.$marshaller.heap, offset, count);
			}
		},
		$handlePrimitive: function ObjectBuilder$HandlePrimitive(type) {
			switch (type) {
				case 1: {
					this.$inObject.push(true);
					this.$objects.push({});
					return ss.arrayPeekBack(this.$objects);
				}
				case 2: {
					this.$inObject.push(false);
					this.$arrays.push([]);
					return ss.arrayPeekBack(this.$arrays);
				}
				case 4: {
					return this.$marshaller.data.doubleBuffer[this.$doubleOffset++];
				}
				case 5: {
					return this.$marshaller.data.intBuffer[this.$integerOffset++];
				}
				case 6: {
					return true;
				}
				case 7: {
					return false;
				}
				case 8: {
					return this.$marshaller.stringTable[this.$marshaller.data.intBuffer[this.$integerOffset++]];
				}
				case 9: {
					return null;
				}
			}
			throw new ss.Exception('Invalid OpCode: ' + type.toString());
		}
	});
	ss.initClass($tab_$RuntimeWebHost$RuntimeWebHostArg, $asm, {}, Object);
	ss.initClass($tab_KeyPath, $asm, {
		get_base: function KeyPath$get_Base() {
			return this;
		},
		get_parent: function KeyPath$get_Parent() {
			return this.$parent;
		},
		get_isEmpty: function KeyPath$get_IsEmpty() {
			return this.$keyPath.length === 0;
		},
		$initialize: function KeyPath$Initialize(key_path, parent_key) {
			this.$keyPath = key_path;
			this.$parent = parent_key;
		},
		add: function KeyPath$Add(key_path) {
			if (key_path.length === 0) {
				throw new ss.Exception("LogicAssert: Can't add empty key");
			}
			if (this.$keyPath.length === 0) {
				return new $tab_KeyPath.$ctor3(key_path, this);
			}
			return new $tab_KeyPath.$ctor3(this.get_base() + $tab_KeyPath.$separtor + key_path, this);
		},
		add$1: function KeyPath$Add(key_path) {
			return this.add(key_path.$keyPath);
		},
		toString: function KeyPath$ToString() {
			return this.$keyPath;
		}
	});
	$tab_KeyPath.$ctor1.prototype = $tab_KeyPath.$ctor2.prototype = $tab_KeyPath.$ctor3.prototype = $tab_KeyPath.prototype;
	ss.initClass($tab_ActivePagesKeys, $asm, {
		minPageNumber: function ActivePagesKeys$MinPageNumber() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinPageNumber'));
		},
		maxPageNumber: function ActivePagesKeys$MaxPageNumber() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MaxPageNumber'));
		},
		currentPage: function ActivePagesKeys$CurrentPage() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CurrentPage'));
		}
	}, $tab_KeyPath);
	$tab_ActivePagesKeys.$ctor1.prototype = $tab_ActivePagesKeys.prototype;
	ss.initClass($tab_AdjustAxisRangeOutputTableKeys, $asm, {
		min: function AdjustAxisRangeOutputTableKeys$Min() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Min'));
		},
		max: function AdjustAxisRangeOutputTableKeys$Max() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Max'));
		},
		paneId: function AdjustAxisRangeOutputTableKeys$PaneId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneId'));
		},
		uniqueID: function AdjustAxisRangeOutputTableKeys$UniqueID() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UniqueID'));
		}
	}, $tab_KeyPath);
	$tab_AdjustAxisRangeOutputTableKeys.$ctor1.prototype = $tab_AdjustAxisRangeOutputTableKeys.prototype;
	ss.initClass($tab_AnnexedDataKeys, $asm, {
		drawFirsts: function AnnexedDataKeys$DrawFirsts() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DrawFirsts'));
		},
		drawLasts: function AnnexedDataKeys$DrawLasts() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DrawLasts'));
		},
		sceneMarginBackgroundColor: function AnnexedDataKeys$SceneMarginBackgroundColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SceneMarginBackgroundColor'));
		},
		inheritedSceneBackgroundColor: function AnnexedDataKeys$InheritedSceneBackgroundColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('InheritedSceneBackgroundColor'));
		},
		isSceneBackgroundOpaque: function AnnexedDataKeys$IsSceneBackgroundOpaque() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsSceneBackgroundOpaque'));
		},
		labelStore: function AnnexedDataKeys$LabelStore() {
			return new $tab_LabelStoreKeys.$ctor1(this.get_base().add('LabelStore'));
		},
		mapPackage: function AnnexedDataKeys$MapPackage() {
			return new $tab_MapPackageKeys.$ctor1(this.get_base().add('MapPackage'));
		},
		panes: function AnnexedDataKeys$Panes() {
			return new $tab_PaneMarksKeys.$ctor1(this.get_base().add('Panes'));
		},
		userPaneInfo: function AnnexedDataKeys$UserPaneInfo() {
			return new $tab_UserPaneInfoKeys.$ctor1(this.get_base().add('UserPaneInfo'));
		}
	}, $tab_KeyPath);
	$tab_AnnexedDataKeys.$ctor1.prototype = $tab_AnnexedDataKeys.prototype;
	ss.initClass($tab_AxisDescriptorHeadersTableKeys, $asm, {
		id: function AxisDescriptorHeadersTableKeys$Id() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Id'));
		},
		nodeId: function AxisDescriptorHeadersTableKeys$NodeId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('NodeId'));
		},
		duplicateFieldIndex: function AxisDescriptorHeadersTableKeys$DuplicateFieldIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DuplicateFieldIndex'));
		}
	}, $tab_KeyPath);
	$tab_AxisDescriptorHeadersTableKeys.$ctor1.prototype = $tab_AxisDescriptorHeadersTableKeys.prototype;
	ss.initClass($tab_AxisDescriptorNodesTableKeys, $asm, {
		id: function AxisDescriptorNodesTableKeys$Id() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Id'));
		},
		parentId: function AxisDescriptorNodesTableKeys$ParentId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ParentId'));
		},
		headerId: function AxisDescriptorNodesTableKeys$HeaderId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HeaderId'));
		},
		isLeaf: function AxisDescriptorNodesTableKeys$IsLeaf() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsLeaf'));
		},
		label: function AxisDescriptorNodesTableKeys$Label() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Label'));
		},
		enclosedIndex: function AxisDescriptorNodesTableKeys$EnclosedIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('EnclosedIndex'));
		},
		level: function AxisDescriptorNodesTableKeys$Level() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Level'));
		}
	}, $tab_KeyPath);
	$tab_AxisDescriptorNodesTableKeys.$ctor1.prototype = $tab_AxisDescriptorNodesTableKeys.prototype;
	ss.initClass($tab_AxisModelDataTableKeys, $asm, {
		dataType: function AxisModelDataTableKeys$DataType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DataType'));
		},
		scaleType: function AxisModelDataTableKeys$ScaleType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ScaleType'));
		},
		foldState: function AxisModelDataTableKeys$FoldState() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FoldState'));
		},
		isReversed: function AxisModelDataTableKeys$IsReversed() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsReversed'));
		},
		includeZero: function AxisModelDataTableKeys$IncludeZero() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IncludeZero'));
		},
		omitSpecials: function AxisModelDataTableKeys$OmitSpecials() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('OmitSpecials'));
		},
		axisTitle: function AxisModelDataTableKeys$AxisTitle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('AxisTitle'));
		},
		axisSubtitle: function AxisModelDataTableKeys$AxisSubtitle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('AxisSubtitle'));
		},
		titlePadding: function AxisModelDataTableKeys$TitlePadding() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TitlePadding'));
		},
		titleStyleIndex: function AxisModelDataTableKeys$TitleStyleIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TitleStyleIndex'));
		},
		perFieldStyleIndex: function AxisModelDataTableKeys$PerFieldStyleIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PerFieldStyleIndex'));
		}
	}, $tab_KeyPath);
	$tab_AxisModelDataTableKeys.$ctor1.prototype = $tab_AxisModelDataTableKeys.prototype;
	ss.initClass($tab_AxisProducerInputKeys, $asm, {
		xAxisModelData: function AxisProducerInputKeys$XAxisModelData() {
			return new $tab_AxisModelDataTableKeys.$ctor1(this.get_base().add('XAxisModelData'));
		},
		yAxisModelData: function AxisProducerInputKeys$YAxisModelData() {
			return new $tab_AxisModelDataTableKeys.$ctor1(this.get_base().add('YAxisModelData'));
		},
		xAxisRangeData: function AxisProducerInputKeys$XAxisRangeData() {
			return new $tab_AxisRangeDataTableKeys.$ctor1(this.get_base().add('XAxisRangeData'));
		},
		yAxisRangeData: function AxisProducerInputKeys$YAxisRangeData() {
			return new $tab_AxisRangeDataTableKeys.$ctor1(this.get_base().add('YAxisRangeData'));
		},
		style: function AxisProducerInputKeys$Style() {
			return new $tab_PerFieldAxisStyleTableKeys.$ctor1(this.get_base().add('Style'));
		},
		titleStyle: function AxisProducerInputKeys$TitleStyle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TitleStyle'));
		}
	}, $tab_KeyPath);
	$tab_AxisProducerInputKeys.$ctor1.prototype = $tab_AxisProducerInputKeys.prototype;
	ss.initClass($tab_AxisProducerOutputKeys, $asm, {
		xAxisTable: function AxisProducerOutputKeys$XAxisTable() {
			return new $tab_AxisTableKeys.$ctor1(this.get_base().add('XAxisTable'));
		},
		yAxisTable: function AxisProducerOutputKeys$YAxisTable() {
			return new $tab_AxisTableKeys.$ctor1(this.get_base().add('YAxisTable'));
		},
		style: function AxisProducerOutputKeys$Style() {
			return new $tab_PerFieldAxisStyleTableKeys.$ctor1(this.get_base().add('Style'));
		},
		titleStyle: function AxisProducerOutputKeys$TitleStyle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TitleStyle'));
		}
	}, $tab_KeyPath);
	$tab_AxisProducerOutputKeys.$ctor1.prototype = $tab_AxisProducerOutputKeys.prototype;
	ss.initClass($tab_AxisRangeDataTableKeys, $asm, {
		rangeType: function AxisRangeDataTableKeys$RangeType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RangeType'));
		},
		min: function AxisRangeDataTableKeys$Min() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Min'));
		},
		max: function AxisRangeDataTableKeys$Max() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Max'));
		},
		fieldId: function AxisRangeDataTableKeys$FieldId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FieldId'));
		},
		uniqueID: function AxisRangeDataTableKeys$UniqueID() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UniqueID'));
		}
	}, $tab_KeyPath);
	$tab_AxisRangeDataTableKeys.$ctor1.prototype = $tab_AxisRangeDataTableKeys.prototype;
	ss.initClass($tab_AxisRangeKeys, $asm, {
		domainMin: function AxisRangeKeys$DomainMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainMin'));
		},
		domainMax: function AxisRangeKeys$DomainMax() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainMax'));
		}
	}, $tab_KeyPath);
	$tab_AxisRangeKeys.$ctor1.prototype = $tab_AxisRangeKeys.prototype;
	ss.initClass($tab_AxisRangeTableColumnsKeys, $asm, {
		cellCount: function AxisRangeTableColumnsKeys$CellCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellCount'));
		},
		dataType: function AxisRangeTableColumnsKeys$DataType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DataType'));
		},
		min: function AxisRangeTableColumnsKeys$Min() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Min'));
		},
		max: function AxisRangeTableColumnsKeys$Max() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Max'));
		},
		rangeType: function AxisRangeTableColumnsKeys$RangeType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RangeType'));
		},
		scaleType: function AxisRangeTableColumnsKeys$ScaleType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ScaleType'));
		},
		foldState: function AxisRangeTableColumnsKeys$FoldState() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FoldState'));
		},
		isReversed: function AxisRangeTableColumnsKeys$IsReversed() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsReversed'));
		},
		includeZero: function AxisRangeTableColumnsKeys$IncludeZero() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IncludeZero'));
		},
		pixelSize: function AxisRangeTableColumnsKeys$PixelSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PixelSize'));
		},
		uniqueID: function AxisRangeTableColumnsKeys$UniqueID() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UniqueID'));
		},
		barLabelsOverflow: function AxisRangeTableColumnsKeys$BarLabelsOverflow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BarLabelsOverflow'));
		}
	}, $tab_KeyPath);
	$tab_AxisRangeTableColumnsKeys.$ctor1.prototype = $tab_AxisRangeTableColumnsKeys.prototype;
	ss.initClass($tab_AxisRangeTableKeys, $asm, {
		cellCount: function AxisRangeTableKeys$CellCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellCount'));
		},
		dataType: function AxisRangeTableKeys$DataType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DataType'));
		},
		min: function AxisRangeTableKeys$Min() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Min'));
		},
		max: function AxisRangeTableKeys$Max() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Max'));
		},
		rangeType: function AxisRangeTableKeys$RangeType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RangeType'));
		},
		scaleType: function AxisRangeTableKeys$ScaleType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ScaleType'));
		},
		foldState: function AxisRangeTableKeys$FoldState() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FoldState'));
		},
		isReversed: function AxisRangeTableKeys$IsReversed() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsReversed'));
		},
		includeZero: function AxisRangeTableKeys$IncludeZero() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IncludeZero'));
		},
		pixelSize: function AxisRangeTableKeys$PixelSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PixelSize'));
		},
		uniqueID: function AxisRangeTableKeys$UniqueID() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UniqueID'));
		},
		barLabelsOverflow: function AxisRangeTableKeys$BarLabelsOverflow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BarLabelsOverflow'));
		}
	}, $tab_KeyPath);
	$tab_AxisRangeTableKeys.$ctor1.prototype = $tab_AxisRangeTableKeys.prototype;
	ss.initClass($tab_AxisSizeTableKeys, $asm, {
		pixelSize: function AxisSizeTableKeys$PixelSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PixelSize'));
		},
		barLabelsOverflow: function AxisSizeTableKeys$BarLabelsOverflow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BarLabelsOverflow'));
		}
	}, $tab_KeyPath);
	$tab_AxisSizeTableKeys.$ctor1.prototype = $tab_AxisSizeTableKeys.prototype;
	ss.initClass($tab_AxisTableColumnsKeys, $asm, {
		dataType: function AxisTableColumnsKeys$DataType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DataType'));
		},
		min: function AxisTableColumnsKeys$Min() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Min'));
		},
		max: function AxisTableColumnsKeys$Max() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Max'));
		},
		rangeType: function AxisTableColumnsKeys$RangeType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RangeType'));
		},
		scaleType: function AxisTableColumnsKeys$ScaleType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ScaleType'));
		},
		foldState: function AxisTableColumnsKeys$FoldState() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FoldState'));
		},
		isReversed: function AxisTableColumnsKeys$IsReversed() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsReversed'));
		},
		includeZero: function AxisTableColumnsKeys$IncludeZero() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IncludeZero'));
		},
		uniqueID: function AxisTableColumnsKeys$UniqueID() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UniqueID'));
		},
		axisTitle: function AxisTableColumnsKeys$AxisTitle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('AxisTitle'));
		},
		axisSubtitle: function AxisTableColumnsKeys$AxisSubtitle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('AxisSubtitle'));
		},
		titlePadding: function AxisTableColumnsKeys$TitlePadding() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TitlePadding'));
		},
		titleStyleIndex: function AxisTableColumnsKeys$TitleStyleIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TitleStyleIndex'));
		},
		perFieldStyleIndex: function AxisTableColumnsKeys$PerFieldStyleIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PerFieldStyleIndex'));
		}
	}, $tab_KeyPath);
	$tab_AxisTableColumnsKeys.$ctor1.prototype = $tab_AxisTableColumnsKeys.prototype;
	ss.initClass($tab_AxisTableKeys, $asm, {
		dataType: function AxisTableKeys$DataType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DataType'));
		},
		min: function AxisTableKeys$Min() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Min'));
		},
		max: function AxisTableKeys$Max() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Max'));
		},
		rangeType: function AxisTableKeys$RangeType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RangeType'));
		},
		scaleType: function AxisTableKeys$ScaleType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ScaleType'));
		},
		foldState: function AxisTableKeys$FoldState() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FoldState'));
		},
		isReversed: function AxisTableKeys$IsReversed() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsReversed'));
		},
		includeZero: function AxisTableKeys$IncludeZero() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IncludeZero'));
		},
		uniqueID: function AxisTableKeys$UniqueID() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UniqueID'));
		},
		axisTitle: function AxisTableKeys$AxisTitle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('AxisTitle'));
		},
		axisSubtitle: function AxisTableKeys$AxisSubtitle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('AxisSubtitle'));
		},
		titlePadding: function AxisTableKeys$TitlePadding() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TitlePadding'));
		},
		titleStyleIndex: function AxisTableKeys$TitleStyleIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TitleStyleIndex'));
		},
		perFieldStyleIndex: function AxisTableKeys$PerFieldStyleIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PerFieldStyleIndex'));
		}
	}, $tab_KeyPath);
	$tab_AxisTableKeys.$ctor1.prototype = $tab_AxisTableKeys.prototype;
	ss.initClass($tab_Base64HeapDecoder, $asm, {});
	ss.initClass($tab_BorderStylesProducerInputKeys, $asm, {
		x: function BorderStylesProducerInputKeys$X() {
			return new $tab_PerAxisBorderStylesProducerInputKeys.$ctor1(this.get_base().add('X'));
		},
		y: function BorderStylesProducerInputKeys$Y() {
			return new $tab_PerAxisBorderStylesProducerInputKeys.$ctor1(this.get_base().add('Y'));
		}
	}, $tab_KeyPath);
	$tab_BorderStylesProducerInputKeys.$ctor1.prototype = $tab_BorderStylesProducerInputKeys.prototype;
	ss.initClass($tab_CommonEncodingsKeys, $asm, {
		colorEncodingKeys: function CommonEncodingsKeys$ColorEncodingKeys() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ColorEncodingKeys'));
		},
		shapeEncodingKeys: function CommonEncodingsKeys$ShapeEncodingKeys() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ShapeEncodingKeys'));
		},
		sizeEncodingKeys: function CommonEncodingsKeys$SizeEncodingKeys() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SizeEncodingKeys'));
		},
		measureNamesKeys: function CommonEncodingsKeys$MeasureNamesKeys() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MeasureNamesKeys'));
		}
	}, $tab_KeyPath);
	$tab_CommonEncodingsKeys.$ctor1.prototype = $tab_CommonEncodingsKeys.prototype;
	ss.initClass($tab_ComposedTextResultKeys, $asm, {
		height: function ComposedTextResultKeys$Height() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Height'));
		},
		textRunCount: function ComposedTextResultKeys$TextRunCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunCount'));
		},
		textRunOffset: function ComposedTextResultKeys$TextRunOffset() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunOffset'));
		},
		textRunTable: function ComposedTextResultKeys$TextRunTable() {
			return new $tab_TextRunTableKeys.$ctor1(this.get_base().add('TextRunTable'));
		},
		width: function ComposedTextResultKeys$Width() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Width'));
		}
	}, $tab_KeyPath);
	$tab_ComposedTextResultKeys.$ctor1.prototype = $tab_ComposedTextResultKeys.prototype;
	ss.initClass($tab_ComputeAxisExtentsOutputsKeys, $asm, {
		minResult: function ComputeAxisExtentsOutputsKeys$minResult() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('minResult'));
		},
		maxResult: function ComputeAxisExtentsOutputsKeys$maxResult() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('maxResult'));
		},
		zeroResult: function ComputeAxisExtentsOutputsKeys$zeroResult() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('zeroResult'));
		},
		minRangeResult: function ComputeAxisExtentsOutputsKeys$minRangeResult() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('minRangeResult'));
		},
		maxRangeResult: function ComputeAxisExtentsOutputsKeys$maxRangeResult() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('maxRangeResult'));
		}
	}, $tab_KeyPath);
	$tab_ComputeAxisExtentsOutputsKeys.$ctor1.prototype = $tab_ComputeAxisExtentsOutputsKeys.prototype;
	ss.initClass($tab_ComputeTreemapLayoutOutputTableKeys, $asm, {
		x: function ComputeTreemapLayoutOutputTableKeys$X() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('X'));
		},
		x1: function ComputeTreemapLayoutOutputTableKeys$X1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('X1'));
		},
		y: function ComputeTreemapLayoutOutputTableKeys$Y() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Y'));
		},
		y1: function ComputeTreemapLayoutOutputTableKeys$Y1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Y1'));
		},
		tupleId: function ComputeTreemapLayoutOutputTableKeys$TupleId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TupleId'));
		},
		markId: function ComputeTreemapLayoutOutputTableKeys$MarkId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkId'));
		}
	}, $tab_KeyPath);
	$tab_ComputeTreemapLayoutOutputTableKeys.$ctor1.prototype = $tab_ComputeTreemapLayoutOutputTableKeys.prototype;
	ss.initClass($tab_ConstraintSystemKeys, $asm, {
		expressions: function ConstraintSystemKeys$Expressions() {
			return new $tab_ExpressionCoefficientTableKeys.$ctor1(this.get_base().add('Expressions'));
		},
		constants: function ConstraintSystemKeys$Constants() {
			return new $tab_ExpressionConstantTableKeys.$ctor1(this.get_base().add('Constants'));
		},
		constraints: function ConstraintSystemKeys$Constraints() {
			return new $tab_ConstraintTableKeys.$ctor1(this.get_base().add('Constraints'));
		},
		variableNames: function ConstraintSystemKeys$VariableNames() {
			return new $tab_VariableNameTableKeys.$ctor1(this.get_base().add('VariableNames'));
		}
	}, $tab_KeyPath);
	$tab_ConstraintSystemKeys.$ctor1.prototype = $tab_ConstraintSystemKeys.prototype;
	ss.initClass($tab_ConstraintTableKeys, $asm, {
		expression1: function ConstraintTableKeys$Expression1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Expression1'));
		},
		expression2: function ConstraintTableKeys$Expression2() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Expression2'));
		},
		comparisonKind: function ConstraintTableKeys$ComparisonKind() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ComparisonKind'));
		},
		priority: function ConstraintTableKeys$Priority() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Priority'));
		}
	}, $tab_KeyPath);
	$tab_ConstraintTableKeys.$ctor1.prototype = $tab_ConstraintTableKeys.prototype;
	ss.initClass($tab_OpaqueHandle, $asm, {
		get_typeCode: null,
		dispose: function OpaqueHandle$Dispose() {
			ss.Debug.assert(!this.$disposedValue, 'Disposing an already disposed object');
			if (!this.$disposedValue) {
				this.$disposeMethod(this.handleValue);
				this.$disposedValue = true;
			}
		}
	}, null, [ss.IDisposable]);
	ss.initClass($tab_DatastoreHandle, $asm, {
		get_typeCode: function DatastoreHandle$get_TypeCode() {
			return 16;
		}
	}, $tab_OpaqueHandle, [ss.IDisposable]);
	ss.initClass($tab_DateTimeTickPerHeaderInputTableKeys, $asm, {
		headerIndex: function DateTimeTickPerHeaderInputTableKeys$HeaderIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HeaderIndex'));
		},
		vtlBlockIndex: function DateTimeTickPerHeaderInputTableKeys$VtlBlockIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VtlBlockIndex'));
		},
		columnFormatIndex: function DateTimeTickPerHeaderInputTableKeys$ColumnFormatIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ColumnFormatIndex'));
		},
		dateTimeOriginReference: function DateTimeTickPerHeaderInputTableKeys$DateTimeOriginReference() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DateTimeOriginReference'));
		},
		dateTimeSpacingReference: function DateTimeTickPerHeaderInputTableKeys$DateTimeSpacingReference() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DateTimeSpacingReference'));
		},
		dateTimeSpacingUnitsReference: function DateTimeTickPerHeaderInputTableKeys$DateTimeSpacingUnitsReference() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DateTimeSpacingUnitsReference'));
		},
		majorLabelWidthReference: function DateTimeTickPerHeaderInputTableKeys$MajorLabelWidthReference() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MajorLabelWidthReference'));
		},
		daysLabelWidth: function DateTimeTickPerHeaderInputTableKeys$DaysLabelWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DaysLabelWidth'));
		},
		hoursLabelWidth: function DateTimeTickPerHeaderInputTableKeys$HoursLabelWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HoursLabelWidth'));
		},
		hoursTrunctaedLabelWidth: function DateTimeTickPerHeaderInputTableKeys$HoursTrunctaedLabelWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HoursTrunctaedLabelWidth'));
		},
		labelHeight: function DateTimeTickPerHeaderInputTableKeys$LabelHeight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelHeight'));
		},
		perpendicularLabels: function DateTimeTickPerHeaderInputTableKeys$PerpendicularLabels() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PerpendicularLabels'));
		},
		fiscalYearStart: function DateTimeTickPerHeaderInputTableKeys$FiscalYearStart() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FiscalYearStart'));
		},
		labelFontIndex: function DateTimeTickPerHeaderInputTableKeys$LabelFontIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelFontIndex'));
		},
		monthsLabelWidth: function DateTimeTickPerHeaderInputTableKeys$MonthsLabelWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MonthsLabelWidth'));
		},
		minorDTOriginReference: function DateTimeTickPerHeaderInputTableKeys$MinorDTOriginReference() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinorDTOriginReference'));
		},
		minorDTSpacingReference: function DateTimeTickPerHeaderInputTableKeys$MinorDTSpacingReference() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinorDTSpacingReference'));
		},
		minorDTSpacingUnitsReference: function DateTimeTickPerHeaderInputTableKeys$MinorDTSpacingUnitsReference() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinorDTSpacingUnitsReference'));
		},
		minutesLabelWidth: function DateTimeTickPerHeaderInputTableKeys$MinutesLabelWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinutesLabelWidth'));
		},
		minutesTruncatedLabelWidth: function DateTimeTickPerHeaderInputTableKeys$MinutesTruncatedLabelWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinutesTruncatedLabelWidth'));
		},
		quartersLabelWidth: function DateTimeTickPerHeaderInputTableKeys$QuartersLabelWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('QuartersLabelWidth'));
		},
		secondsLabelWidth: function DateTimeTickPerHeaderInputTableKeys$SecondsLabelWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SecondsLabelWidth'));
		},
		showMinorTicks: function DateTimeTickPerHeaderInputTableKeys$ShowMinorTicks() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ShowMinorTicks'));
		},
		targetTickSpacing: function DateTimeTickPerHeaderInputTableKeys$TargetTickSpacing() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TargetTickSpacing'));
		},
		weeksLabelWidth: function DateTimeTickPerHeaderInputTableKeys$WeeksLabelWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('WeeksLabelWidth'));
		},
		yearsLabelWidth: function DateTimeTickPerHeaderInputTableKeys$YearsLabelWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YearsLabelWidth'));
		}
	}, $tab_KeyPath);
	$tab_DateTimeTickPerHeaderInputTableKeys.$ctor1.prototype = $tab_DateTimeTickPerHeaderInputTableKeys.prototype;
	ss.initClass($tab_DomainLookupKeys, $asm, {
		domainMax: function DomainLookupKeys$DomainMax() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainMax'));
		},
		domainMin: function DomainLookupKeys$DomainMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainMin'));
		},
		lookup: function DomainLookupKeys$Lookup() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Lookup'));
		}
	}, $tab_KeyPath);
	$tab_DomainLookupKeys.$ctor1.prototype = $tab_DomainLookupKeys.prototype;
	ss.initClass($tab_EllipsisTableKeys, $asm, {
		paneIndex: function EllipsisTableKeys$PaneIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneIndex'));
		},
		cellX: function EllipsisTableKeys$CellX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellX'));
		},
		cellY: function EllipsisTableKeys$CellY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellY'));
		},
		x: function EllipsisTableKeys$X() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('X'));
		},
		y: function EllipsisTableKeys$Y() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Y'));
		},
		xFloat: function EllipsisTableKeys$XFloat() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XFloat'));
		},
		yFloat: function EllipsisTableKeys$YFloat() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YFloat'));
		},
		width: function EllipsisTableKeys$Width() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Width'));
		},
		height: function EllipsisTableKeys$Height() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Height'));
		}
	}, $tab_KeyPath);
	$tab_EllipsisTableKeys.$ctor1.prototype = $tab_EllipsisTableKeys.prototype;
	ss.initClass($tab_EmscriptenSupport, $asm, {});
	ss.initClass($tab_EncodingsTableKeys, $asm, {
		cellX: function EncodingsTableKeys$CellX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellX'));
		},
		cellY: function EncodingsTableKeys$CellY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellY'));
		},
		clipHeight: function EncodingsTableKeys$ClipHeight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ClipHeight'));
		},
		clipWidth: function EncodingsTableKeys$ClipWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ClipWidth'));
		},
		color: function EncodingsTableKeys$Color() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Color'));
		},
		geometry: function EncodingsTableKeys$Geometry() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Geometry'));
		},
		height: function EncodingsTableKeys$Height() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Height'));
		},
		isMarkStacked: function EncodingsTableKeys$IsMarkStacked() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsMarkStacked'));
		},
		markFlags: function EncodingsTableKeys$MarkFlags() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkFlags'));
		},
		markId: function EncodingsTableKeys$MarkId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkId'));
		},
		paneIndex: function EncodingsTableKeys$PaneIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneIndex'));
		},
		paneCol: function EncodingsTableKeys$PaneCol() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneCol'));
		},
		panePage: function EncodingsTableKeys$PanePage() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PanePage'));
		},
		paneRow: function EncodingsTableKeys$PaneRow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneRow'));
		},
		predictionIntervalLowerEnd: function EncodingsTableKeys$PredictionIntervalLowerEnd() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PredictionIntervalLowerEnd'));
		},
		predictionIntervalUpperEnd: function EncodingsTableKeys$PredictionIntervalUpperEnd() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PredictionIntervalUpperEnd'));
		},
		predictionWhiskerWidth: function EncodingsTableKeys$PredictionWhiskerWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PredictionWhiskerWidth'));
		},
		rho: function EncodingsTableKeys$Rho() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Rho'));
		},
		rho1: function EncodingsTableKeys$Rho1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Rho1'));
		},
		scaledEndPoint: function EncodingsTableKeys$ScaledEndPoint() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ScaledEndPoint'));
		},
		shapeId: function EncodingsTableKeys$ShapeId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ShapeId'));
		},
		size: function EncodingsTableKeys$Size() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Size'));
		},
		sizeLabel: function EncodingsTableKeys$SizeLabel() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SizeLabel'));
		},
		textRunCount: function EncodingsTableKeys$TextRunCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunCount'));
		},
		textRunOffset: function EncodingsTableKeys$TextRunOffset() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunOffset'));
		},
		theta: function EncodingsTableKeys$Theta() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Theta'));
		},
		theta1: function EncodingsTableKeys$Theta1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Theta1'));
		},
		trailId: function EncodingsTableKeys$TrailId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TrailId'));
		},
		tupleId: function EncodingsTableKeys$TupleId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TupleId'));
		},
		width: function EncodingsTableKeys$Width() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Width'));
		},
		userPaneRow: function EncodingsTableKeys$UserPaneRow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UserPaneRow'));
		},
		userPaneCol: function EncodingsTableKeys$UserPaneCol() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UserPaneCol'));
		},
		weight: function EncodingsTableKeys$Weight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Weight'));
		},
		x: function EncodingsTableKeys$X() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('X'));
		},
		x1: function EncodingsTableKeys$X1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('X1'));
		},
		xNext: function EncodingsTableKeys$XNext() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XNext'));
		},
		xPrev: function EncodingsTableKeys$XPrev() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XPrev'));
		},
		y: function EncodingsTableKeys$Y() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Y'));
		},
		y1: function EncodingsTableKeys$Y1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Y1'));
		},
		yNext: function EncodingsTableKeys$YNext() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YNext'));
		},
		yPrev: function EncodingsTableKeys$YPrev() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YPrev'));
		}
	}, $tab_KeyPath);
	$tab_EncodingsTableKeys.$ctor1.prototype = $tab_EncodingsTableKeys.prototype;
	ss.initClass($tab_EnumConversions, $asm, {});
	ss.initClass($tab_ExpressionCoefficientTableKeys, $asm, {
		expressionID: function ExpressionCoefficientTableKeys$ExpressionID() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ExpressionID'));
		},
		coefficient: function ExpressionCoefficientTableKeys$Coefficient() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Coefficient'));
		},
		variableID: function ExpressionCoefficientTableKeys$VariableID() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VariableID'));
		}
	}, $tab_KeyPath);
	$tab_ExpressionCoefficientTableKeys.$ctor1.prototype = $tab_ExpressionCoefficientTableKeys.prototype;
	ss.initClass($tab_ExpressionConstantTableKeys, $asm, {
		expressionID: function ExpressionConstantTableKeys$ExpressionID() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ExpressionID'));
		},
		constant: function ExpressionConstantTableKeys$Constant() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Constant'));
		}
	}, $tab_KeyPath);
	$tab_ExpressionConstantTableKeys.$ctor1.prototype = $tab_ExpressionConstantTableKeys.prototype;
	ss.initClass($tab_ExtendedDomainKeys, $asm, {
		haveAnyMarks: function ExtendedDomainKeys$HaveAnyMarks() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HaveAnyMarks'));
		},
		paneExtentsStaticInput: function ExtendedDomainKeys$PaneExtentsStaticInput() {
			return new $tab_PaneExtentsStaticInputTableKeys.$ctor1(this.get_base().add('PaneExtentsStaticInput'));
		},
		paneExtentsPixelPositions: function ExtendedDomainKeys$PaneExtentsPixelPositions() {
			return new $tab_PaneExtentsPixelPositionsTableKeys.$ctor1(this.get_base().add('PaneExtentsPixelPositions'));
		},
		paneExtents: function ExtendedDomainKeys$PaneExtents() {
			return new $tab_PaneExtentsTableKeys.$ctor1(this.get_base().add('PaneExtents'));
		},
		paneCount: function ExtendedDomainKeys$PaneCount() {
			return new $tab_PaneCountersKeys.$ctor1(this.get_base().add('PaneCount'));
		},
		pageIntervalTable: function ExtendedDomainKeys$PageIntervalTable() {
			return new $tab_PageIntervalTableKeys.$ctor1(this.get_base().add('PageIntervalTable'));
		},
		noMarksColumnTemplate: function ExtendedDomainKeys$NoMarksColumnTemplate() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('NoMarksColumnTemplate'));
		},
		noPanesColumnTemplate: function ExtendedDomainKeys$NoPanesColumnTemplate() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('NoPanesColumnTemplate'));
		},
		paneRow: function ExtendedDomainKeys$PaneRow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneRow'));
		},
		paneCol: function ExtendedDomainKeys$PaneCol() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneCol'));
		},
		mappedRows: function ExtendedDomainKeys$MappedRows() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MappedRows'));
		},
		mappedCols: function ExtendedDomainKeys$MappedCols() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MappedCols'));
		},
		rangePaddingMin: function ExtendedDomainKeys$RangePaddingMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RangePaddingMin'));
		},
		mapBoundaries: function ExtendedDomainKeys$MapBoundaries() {
			return new $tab_MapBoundsKeys.$ctor1(this.get_base().add('MapBoundaries'));
		},
		showEntireImageHasImages: function ExtendedDomainKeys$ShowEntireImageHasImages() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ShowEntireImageHasImages'));
		},
		lockedRatio: function ExtendedDomainKeys$LockedRatio() {
			return new $tab_LockedRatioKeys.$ctor1(this.get_base().add('LockedRatio'));
		},
		mapProvider: function ExtendedDomainKeys$MapProvider() {
			return new $tab_MapProviderKeys.$ctor1(this.get_base().add('MapProvider'));
		},
		mapLayersModelUpdate: function ExtendedDomainKeys$MapLayersModelUpdate() {
			return new $tab_MapLayersModelUpdateKeys.$ctor1(this.get_base().add('MapLayersModelUpdate'));
		},
		x: function ExtendedDomainKeys$X() {
			return new $tab_ExtendedDomainPerAxisKeys.$ctor1(this.get_base().add('X'));
		},
		y: function ExtendedDomainKeys$Y() {
			return new $tab_ExtendedDomainPerAxisKeys.$ctor1(this.get_base().add('Y'));
		}
	}, $tab_KeyPath);
	$tab_ExtendedDomainKeys.$ctor1.prototype = $tab_ExtendedDomainKeys.prototype;
	ss.initClass($tab_ExtendedDomainPerAxisKeys, $asm, {
		axisSizes: function ExtendedDomainPerAxisKeys$AxisSizes() {
			return new $tab_AxisSizeTableKeys.$ctor1(this.get_base().add('AxisSizes'));
		},
		ranges: function ExtendedDomainPerAxisKeys$Ranges() {
			return new $tab_AxisRangeTableKeys.$ctor1(this.get_base().add('Ranges'));
		},
		uniqueRanges: function ExtendedDomainPerAxisKeys$UniqueRanges() {
			return new $tab_AxisRangeTableKeys.$ctor1(this.get_base().add('UniqueRanges'));
		},
		rangeMap: function ExtendedDomainPerAxisKeys$RangeMap() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RangeMap'));
		},
		pointExtendedRanges: function ExtendedDomainPerAxisKeys$PointExtendedRanges() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PointExtendedRanges'));
		},
		beforeMarkExtendRanges: function ExtendedDomainPerAxisKeys$BeforeMarkExtendRanges() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BeforeMarkExtendRanges'));
		},
		afterMarkExtendRanges: function ExtendedDomainPerAxisKeys$AfterMarkExtendRanges() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('AfterMarkExtendRanges'));
		},
		relevantRanges: function ExtendedDomainPerAxisKeys$RelevantRanges() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RelevantRanges'));
		},
		refLineExtents: function ExtendedDomainPerAxisKeys$RefLineExtents() {
			return new $tab_RefLineExtentsKeys.$ctor1(this.get_base().add('RefLineExtents'));
		},
		showEntireImagePaneIndex: function ExtendedDomainPerAxisKeys$ShowEntireImagePaneIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ShowEntireImagePaneIndex'));
		},
		showEntireImageMax: function ExtendedDomainPerAxisKeys$ShowEntireImageMax() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ShowEntireImageMax'));
		},
		showEntireImageMin: function ExtendedDomainPerAxisKeys$ShowEntireImageMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ShowEntireImageMin'));
		}
	}, $tab_KeyPath);
	$tab_ExtendedDomainPerAxisKeys.$ctor1.prototype = $tab_ExtendedDomainPerAxisKeys.prototype;
	ss.initClass($tab_FallbackTextDecoder, $asm, {});
	ss.initClass($tab_FallbackTextEncoder, $asm, {});
	ss.initClass($tab_FlattenedAxisDescriptorKeys, $asm, {
		nodes: function FlattenedAxisDescriptorKeys$Nodes() {
			return new $tab_AxisDescriptorNodesTableKeys.$ctor1(this.get_base().add('Nodes'));
		},
		headers: function FlattenedAxisDescriptorKeys$Headers() {
			return new $tab_AxisDescriptorHeadersTableKeys.$ctor1(this.get_base().add('Headers'));
		},
		perHeaderFields: function FlattenedAxisDescriptorKeys$PerHeaderFields() {
			return new $tab_PerHeaderFieldDataTableKeys.$ctor1(this.get_base().add('PerHeaderFields'));
		}
	}, $tab_KeyPath);
	$tab_FlattenedAxisDescriptorKeys.$ctor1.prototype = $tab_FlattenedAxisDescriptorKeys.prototype;
	ss.initClass($tab_FormattedTextInputKeys, $asm, {
		styleTable: function FormattedTextInputKeys$StyleTable() {
			return new $tab_TextStyleTableKeys.$ctor1(this.get_base().add('StyleTable'));
		},
		runOffset: function FormattedTextInputKeys$RunOffset() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RunOffset'));
		},
		runCount: function FormattedTextInputKeys$RunCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RunCount'));
		},
		runTable: function FormattedTextInputKeys$RunTable() {
			return new $tab_TextRunTableKeys.$ctor1(this.get_base().add('RunTable'));
		}
	}, $tab_KeyPath);
	$tab_FormattedTextInputKeys.$ctor1.prototype = $tab_FormattedTextInputKeys.prototype;
	ss.initClass($tab_GridLineProducerInputKeys, $asm, {
		x: function GridLineProducerInputKeys$X() {
			return new $tab_PerAxisGridLineProducerInputKeys.$ctor1(this.get_base().add('X'));
		},
		y: function GridLineProducerInputKeys$Y() {
			return new $tab_PerAxisGridLineProducerInputKeys.$ctor1(this.get_base().add('Y'));
		},
		isQuantitativeTickType: function GridLineProducerInputKeys$IsQuantitativeTickType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsQuantitativeTickType'));
		}
	}, $tab_KeyPath);
	$tab_GridLineProducerInputKeys.$ctor1.prototype = $tab_GridLineProducerInputKeys.prototype;
	ss.initClass($tab_GridLineProducerOutputKeys, $asm, {
		zeroPoint: function GridLineProducerOutputKeys$ZeroPoint() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ZeroPoint'));
		},
		isQuantitativeTickType: function GridLineProducerOutputKeys$IsQuantitativeTickType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsQuantitativeTickType'));
		},
		x: function GridLineProducerOutputKeys$X() {
			return new $tab_PerAxisGridLineProducerOutputKeys.$ctor1(this.get_base().add('X'));
		},
		y: function GridLineProducerOutputKeys$Y() {
			return new $tab_PerAxisGridLineProducerOutputKeys.$ctor1(this.get_base().add('Y'));
		}
	}, $tab_KeyPath);
	$tab_GridLineProducerOutputKeys.$ctor1.prototype = $tab_GridLineProducerOutputKeys.prototype;
	ss.initClass($tab_HeatmapInputEncodingKeys, $asm, {
		size: function HeatmapInputEncodingKeys$Size() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Size'));
		},
		palette: function HeatmapInputEncodingKeys$Palette() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Palette'));
		},
		steps: function HeatmapInputEncodingKeys$Steps() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Steps'));
		},
		isReversed: function HeatmapInputEncodingKeys$IsReversed() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsReversed'));
		},
		minRequiredDensity: function HeatmapInputEncodingKeys$MinRequiredDensity() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinRequiredDensity'));
		},
		intensity: function HeatmapInputEncodingKeys$Intensity() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Intensity'));
		},
		maxValue: function HeatmapInputEncodingKeys$MaxValue() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MaxValue'));
		}
	}, $tab_KeyPath);
	$tab_HeatmapInputEncodingKeys.$ctor1.prototype = $tab_HeatmapInputEncodingKeys.prototype;
	ss.initClass($tab_HeatmapOutputEncodingKeys, $asm, {
		kernelRadius: function HeatmapOutputEncodingKeys$KernelRadius() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('KernelRadius'));
		},
		palette: function HeatmapOutputEncodingKeys$Palette() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Palette'));
		},
		steps: function HeatmapOutputEncodingKeys$Steps() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Steps'));
		},
		minValue: function HeatmapOutputEncodingKeys$MinValue() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinValue'));
		},
		maxValue: function HeatmapOutputEncodingKeys$MaxValue() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MaxValue'));
		},
		underlyingMarkSize: function HeatmapOutputEncodingKeys$UnderlyingMarkSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UnderlyingMarkSize'));
		},
		underlyingMarkColor: function HeatmapOutputEncodingKeys$UnderlyingMarkColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UnderlyingMarkColor'));
		},
		intensity: function HeatmapOutputEncodingKeys$Intensity() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Intensity'));
		},
		markWeights: function HeatmapOutputEncodingKeys$MarkWeights() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkWeights'));
		}
	}, $tab_KeyPath);
	$tab_HeatmapOutputEncodingKeys.$ctor1.prototype = $tab_HeatmapOutputEncodingKeys.prototype;
	ss.initClass($tab_HeatmapProducerInputKeys, $asm, {
		encoding: function HeatmapProducerInputKeys$Encoding(encodingKey) {
			if (ss.startsWithString(encodingKey, String.fromCharCode(39)) || ss.startsWithString(encodingKey, String.fromCharCode(34))) {
				return new $tab_HeatmapInputEncodingKeys.$ctor1(this.get_base().add('Encoding').add(encodingKey));
			}
			return new $tab_HeatmapInputEncodingKeys.$ctor1(this.get_base().add('Encoding').add(ss.formatString("'{0}'", encodingKey)));
		}
	}, $tab_KeyPath);
	$tab_HeatmapProducerInputKeys.$ctor1.prototype = $tab_HeatmapProducerInputKeys.prototype;
	ss.initClass($tab_HeatmapProducerOutputKeys, $asm, {
		encoding: function HeatmapProducerOutputKeys$Encoding(encodingKey) {
			if (ss.startsWithString(encodingKey, String.fromCharCode(39)) || ss.startsWithString(encodingKey, String.fromCharCode(34))) {
				return new $tab_HeatmapOutputEncodingKeys.$ctor1(this.get_base().add('Encoding').add(encodingKey));
			}
			return new $tab_HeatmapOutputEncodingKeys.$ctor1(this.get_base().add('Encoding').add(ss.formatString("'{0}'", encodingKey)));
		}
	}, $tab_KeyPath);
	$tab_HeatmapProducerOutputKeys.$ctor1.prototype = $tab_HeatmapProducerOutputKeys.prototype;
	ss.initClass($tab_HexEncoder, $asm, {});
	ss.initClass($tab_HexHeapDecoder, $asm, {});
	ss.initClass($tab_HiddenMarksKeys, $asm, {
		paneIndex: function HiddenMarksKeys$PaneIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneIndex'));
		},
		cellIndex: function HiddenMarksKeys$CellIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellIndex'));
		},
		min: function HiddenMarksKeys$Min() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Min'));
		},
		max: function HiddenMarksKeys$Max() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Max'));
		}
	}, $tab_KeyPath);
	$tab_HiddenMarksKeys.$ctor1.prototype = $tab_HiddenMarksKeys.prototype;
	ss.initClass($tab_HuttUtils, $asm, {});
	ss.initClass($tab_ImportKeys, $asm, {
		dataTable: function ImportKeys$DataTable() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DataTable'));
		},
		flattenedColorEncodings: function ImportKeys$FlattenedColorEncodings() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FlattenedColorEncodings'));
		},
		flattenedShapeEncodings: function ImportKeys$FlattenedShapeEncodings() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FlattenedShapeEncodings'));
		},
		flattenedSizeEncodings: function ImportKeys$FlattenedSizeEncodings() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FlattenedSizeEncodings'));
		},
		cellXProvided: function ImportKeys$CellXProvided() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellXProvided'));
		},
		cellYProvided: function ImportKeys$CellYProvided() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellYProvided'));
		}
	}, $tab_KeyPath);
	$tab_ImportKeys.$ctor1.prototype = $tab_ImportKeys.prototype;
	ss.initClass($tab_IncrementalUpdateInputKeys, $asm, {
		supportedClientUpdates: function IncrementalUpdateInputKeys$SupportedClientUpdates() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SupportedClientUpdates'));
		},
		supportedDesktopUpdates: function IncrementalUpdateInputKeys$SupportedDesktopUpdates() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SupportedDesktopUpdates'));
		}
	}, $tab_KeyPath);
	$tab_IncrementalUpdateInputKeys.$ctor1.prototype = $tab_IncrementalUpdateInputKeys.prototype;
	ss.initClass($tab_IndexedFieldNameKeys, $asm, {
		fieldName: function IndexedFieldNameKeys$FieldName() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FieldName'));
		},
		index: function IndexedFieldNameKeys$Index() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Index'));
		}
	}, $tab_KeyPath);
	$tab_IndexedFieldNameKeys.$ctor1.prototype = $tab_IndexedFieldNameKeys.prototype;
	ss.initInterface($tab_IRuntimeWebModule, $asm, { executeVM: null, buildVMHex: null, loadBinaryDatastoreHex: null, initializeRuntime: null, marshallDatastore: null, marshallDatastoreSubKeyHex: null, loadAndApplyDataStoreUpdaterHex: null, localPanCommand: null, localZoomCommand: null, localZoomFactorCommand: null, rueUpdateCommandHex: null });
	ss.initInterface($tab_IRWALSupport, $asm, { paramToString: null, stringToHeap: null, paramToByteBuffer: null, byteBufferToHeap: null });
	ss.initClass($tab_JabbaManifest, $asm, {});
	ss.initClass($tab_JabbaUnpacker, $asm, {
		$rehydrateRLE: function JabbaUnpacker$RehydrateRLE(packedRle) {
			var totalCount = 0;
			for (var i = 0; i < packedRle.length; i += 2) {
				totalCount += ss.Int32.trunc(packedRle[i]);
			}
			var rehydrated = new Float32Array(totalCount);
			var offset = 0;
			for (var i1 = 0; i1 < packedRle.length; i1 += 2) {
				var count = ss.Int32.trunc(packedRle[i1]);
				var val = packedRle[i1 + 1];
				for (var j = 0; j < count; j++) {
					rehydrated[offset++] = val;
				}
			}
			return rehydrated;
		},
		$rehydrateRLE$1: function JabbaUnpacker$RehydrateRLE(packedRle) {
			var totalCount = 0;
			for (var i = 0; i < packedRle.length; i += 2) {
				totalCount += ss.Int32.trunc(packedRle[i]);
			}
			var rehydrated = new Float64Array(totalCount);
			var offset = 0;
			for (var i1 = 0; i1 < packedRle.length; i1 += 2) {
				var count = ss.Int32.trunc(packedRle[i1]);
				var val = packedRle[i1 + 1];
				for (var j = 0; j < count; j++) {
					rehydrated[offset++] = val;
				}
			}
			return rehydrated;
		},
		$unpackBlob: function JabbaUnpacker$UnpackBlob() {
			this.$readHeader();
			this.$readManifests();
			this.$byteHeap = new Uint8Array(this.$destinationSize);
			var heapOffset = 0;
			var currentOffset = 0;
			for (var $t1 = 0; $t1 < this.$manifests.length; $t1++) {
				var m = this.$manifests[$t1];
				currentOffset = heapOffset;
				var unpackedSize = this.$decodeManifest(m, heapOffset);
				heapOffset += unpackedSize;
				heapOffset += this.$computeAlignmentPadding(heapOffset, 8);
				if (m.encoding === 3) {
					if (m.typeId === 51) {
						var packedRle = ss.cast($tab_HuttUtils.getMappedArrayJabba(51, this.$byteHeap.buffer, currentOffset, unpackedSize), Float64Array);
						var rehydrated = this.$rehydrateRLE$1(packedRle);
						this.unpacked.push(rehydrated);
					}
					else if (m.typeId === 50) {
						var packedRle1 = ss.cast($tab_HuttUtils.getMappedArrayJabba(50, this.$byteHeap.buffer, currentOffset, unpackedSize), Float32Array);
						var rehydrated1 = this.$rehydrateRLE(packedRle1);
						this.unpacked.push(rehydrated1);
					}
				}
				else {
					this.unpacked.push($tab_HuttUtils.getMappedArrayJabba(m.typeId, this.$byteHeap.buffer, currentOffset, unpackedSize));
				}
			}
		},
		$computeAlignmentPadding: function JabbaUnpacker$ComputeAlignmentPadding(size, boundary) {
			return (boundary - size % boundary) % boundary;
		},
		$decodeManifest: function JabbaUnpacker$DecodeManifest(m, heapOffset) {
			var manifestData = new Uint8Array(this.$jabbaBlob, this.$dataOffset + m.dataOffset, m.dataSize);
			if (m.encoding === 0 || m.encoding === 3) {
				this.$byteHeap.set(manifestData, heapOffset);
			}
			else if (m.encoding === 2) {
				return this.$decodeDeltaVliSigned(manifestData, heapOffset);
			}
			else {
				throw new ss.Exception('Unsupported encoding: ' + m.encoding);
			}
			return m.dataSize;
		},
		$decodeDeltaVliSigned: function JabbaUnpacker$DecodeDeltaVliSigned(manifestData, heapOffset) {
			var lastVal = 0;
			var dataOffset = 0;
			var destinationOffset = 0;
			var destination = new Int32Array(this.$byteHeap.buffer, heapOffset);
			while (dataOffset < manifestData.length) {
				if (manifestData[dataOffset] <= 240) {
					var $t1 = manifestData[dataOffset];
					lastVal = ($t1 >>> 1 ^ -($t1 & 1)) + lastVal;
					dataOffset += 1;
				}
				else if (manifestData[dataOffset] <= 248) {
					var $t2 = 240 + 256 * (manifestData[dataOffset] - 241) + manifestData[dataOffset + 1];
					lastVal = ($t2 >>> 1 ^ -($t2 & 1)) + lastVal;
					dataOffset += 2;
				}
				else if (manifestData[dataOffset] === 249) {
					var $t3 = 2288 + 256 * manifestData[dataOffset + 1] + manifestData[dataOffset + 2];
					lastVal = ($t3 >>> 1 ^ -($t3 & 1)) + lastVal;
					dataOffset += 3;
				}
				else if (manifestData[dataOffset] === 250) {
					var $t4 = manifestData[dataOffset + 1] * 65536 + manifestData[dataOffset + 2] * 256 + manifestData[dataOffset + 3];
					lastVal = ($t4 >>> 1 ^ -($t4 & 1)) + lastVal;
					dataOffset += 4;
				}
				else if (manifestData[dataOffset] === 251) {
					var $t5 = manifestData[dataOffset + 1] * 16777216 + manifestData[dataOffset + 2] * 65536 + manifestData[dataOffset + 3] * 256 + manifestData[dataOffset + 4];
					lastVal = ($t5 >>> 1 ^ -($t5 & 1)) + lastVal;
					dataOffset += 5;
				}
				else if (manifestData[dataOffset] === 252) {
					var $t6 = manifestData[dataOffset + 1] * 1 + manifestData[dataOffset + 2] * 16777216 + manifestData[dataOffset + 3] * 65536 + manifestData[dataOffset + 4] * 256 + manifestData[dataOffset + 5];
					lastVal = ($t6 >>> 1 ^ -($t6 & 1)) + lastVal;
					dataOffset += 6;
				}
				destination[destinationOffset++] = ss.Int32.trunc(lastVal);
			}
			return destinationOffset * 4;
		},
		$readHeader: function JabbaUnpacker$ReadHeader() {
			var reader = new DataView(this.$jabbaBlob);
			var magic = reader.getUint16(0, true);
			var version = reader.getUint16(2, true);
			this.$destinationSize = reader.getInt32(4, true);
			this.$manifestCount = reader.getInt32(8, true);
			this.$dataOffset = reader.getInt32(12, true);
			if (magic !== 43962) {
				throw new ss.Exception('Magic number mismatch: ' + magic);
			}
			if (version !== 1) {
				throw new ss.Exception('Unsupported JABBA version ' + version);
			}
		},
		$readManifests: function JabbaUnpacker$ReadManifests() {
			var manifestData = new Uint32Array(this.$jabbaBlob, 16, this.$manifestCount * Uint32Array.BYTES_PER_ELEMENT);
			for (var i = 0; i < this.$manifestCount; i++) {
				this.$manifests.push(new $tab_JabbaManifest(manifestData, i * Uint32Array.BYTES_PER_ELEMENT));
			}
		}
	});
	ss.initClass($tab_JsHeapMarshaller, $asm, {
		$populateStringTable: function JsHeapMarshaller$PopulateStringTable() {
			var curOffset = this.data.stringBuffer.byteOffset;
			var len = this.data.stringLengths.length;
			for (var i = 0; i < len; i++) {
				var curLength = this.data.stringLengths[i];
				this.stringTable[i] = $tab_Utf8TextDecoder.decode(new Uint8Array(this.data.stringBuffer.buffer, curOffset, curLength));
				curOffset += curLength;
			}
		}
	});
	$tab_JsHeapMarshaller.$ctor1.prototype = $tab_JsHeapMarshaller.prototype;
	ss.initClass($tab_LabelPlacementKeys, $asm, {
		textEncodingTable: function LabelPlacementKeys$TextEncodingTable() {
			return new $tab_TextEncodingTableKeys.$ctor1(this.get_base().add('TextEncodingTable'));
		},
		textRunTable: function LabelPlacementKeys$TextRunTable() {
			return new $tab_TextRunTableKeys.$ctor1(this.get_base().add('TextRunTable'));
		},
		textStyleTable: function LabelPlacementKeys$TextStyleTable() {
			return new $tab_TextStyleTableKeys.$ctor1(this.get_base().add('TextStyleTable'));
		}
	}, $tab_KeyPath);
	$tab_LabelPlacementKeys.$ctor1.prototype = $tab_LabelPlacementKeys.prototype;
	ss.initClass($tab_LabelStoreKeys, $asm, {
		pdMarks: function LabelStoreKeys$PDMarks() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PDMarks'));
		},
		pageIntervalTable: function LabelStoreKeys$PageIntervalTable() {
			return new $tab_PageIntervalTableKeys.$ctor1(this.get_base().add('PageIntervalTable'));
		},
		panes: function LabelStoreKeys$Panes() {
			return new $tab_PaneMarksKeys.$ctor1(this.get_base().add('Panes'));
		},
		userPaneInfo: function LabelStoreKeys$UserPaneInfo() {
			return new $tab_UserPaneInfoKeys.$ctor1(this.get_base().add('UserPaneInfo'));
		}
	}, $tab_KeyPath);
	$tab_LabelStoreKeys.$ctor1.prototype = $tab_LabelStoreKeys.prototype;
	ss.initClass($tab_LayoutInputStoreKeys, $asm, {
		axisProducerData: function LayoutInputStoreKeys$AxisProducerData() {
			return new $tab_AxisProducerInputKeys.$ctor1(this.get_base().add('AxisProducerData'));
		},
		borderStylesData: function LayoutInputStoreKeys$BorderStylesData() {
			return new $tab_BorderStylesProducerInputKeys.$ctor1(this.get_base().add('BorderStylesData'));
		},
		encodingData: function LayoutInputStoreKeys$EncodingData() {
			return new $tab_CommonEncodingsKeys.$ctor1(this.get_base().add('EncodingData'));
		},
		extendedDomain: function LayoutInputStoreKeys$ExtendedDomain() {
			return new $tab_ExtendedDomainKeys.$ctor1(this.get_base().add('ExtendedDomain'));
		},
		gridLineProducerData: function LayoutInputStoreKeys$GridLineProducerData() {
			return new $tab_GridLineProducerInputKeys.$ctor1(this.get_base().add('GridLineProducerData'));
		},
		markLayoutTempKeys: function LayoutInputStoreKeys$MarkLayoutTempKeys() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkLayoutTempKeys'));
		},
		tickProducerData: function LayoutInputStoreKeys$TickProducerData() {
			return new $tab_TickProducerInputKeys.$ctor1(this.get_base().add('TickProducerData'));
		},
		pdMarksData: function LayoutInputStoreKeys$PDMarksData(pDMarksDataKey) {
			if (ss.startsWithString(pDMarksDataKey, String.fromCharCode(39)) || ss.startsWithString(pDMarksDataKey, String.fromCharCode(34))) {
				return new $tab_MarkLayoutDataKeys.$ctor1(this.get_base().add('PDMarksData').add(pDMarksDataKey));
			}
			return new $tab_MarkLayoutDataKeys.$ctor1(this.get_base().add('PDMarksData').add(ss.formatString("'{0}'", pDMarksDataKey)));
		},
		partitionResultStore: function LayoutInputStoreKeys$PartitionResultStore() {
			return new $tab_PartitionResultStoreKeys.$ctor1(this.get_base().add('PartitionResultStore'));
		},
		importData: function LayoutInputStoreKeys$ImportData(importDataKey) {
			if (ss.startsWithString(importDataKey, String.fromCharCode(39)) || ss.startsWithString(importDataKey, String.fromCharCode(34))) {
				return new $tab_ImportKeys.$ctor1(this.get_base().add('ImportData').add(importDataKey));
			}
			return new $tab_ImportKeys.$ctor1(this.get_base().add('ImportData').add(ss.formatString("'{0}'", importDataKey)));
		},
		refLinesData: function LayoutInputStoreKeys$RefLinesData() {
			return new $tab_ReferenceLineProducerInputKeys.$ctor1(this.get_base().add('RefLinesData'));
		},
		refLinesTotalTableMapData: function LayoutInputStoreKeys$RefLinesTotalTableMapData(refLinesTotalTableMapDataKey) {
			if (ss.startsWithString(refLinesTotalTableMapDataKey, String.fromCharCode(39)) || ss.startsWithString(refLinesTotalTableMapDataKey, String.fromCharCode(34))) {
				return new $tab_ReferenceLineTotalTableMapDataKeys.$ctor1(this.get_base().add('RefLinesTotalTableMapData').add(refLinesTotalTableMapDataKey));
			}
			return new $tab_ReferenceLineTotalTableMapDataKeys.$ctor1(this.get_base().add('RefLinesTotalTableMapData').add(ss.formatString("'{0}'", refLinesTotalTableMapDataKey)));
		},
		selectionData: function LayoutInputStoreKeys$SelectionData() {
			return new $tab_SelectionProducerInputKeys.$ctor1(this.get_base().add('SelectionData'));
		},
		incrementalUpdateData: function LayoutInputStoreKeys$IncrementalUpdateData() {
			return new $tab_IncrementalUpdateInputKeys.$ctor1(this.get_base().add('IncrementalUpdateData'));
		},
		viewParametersData: function LayoutInputStoreKeys$ViewParametersData() {
			return new $tab_ViewParametersDataKeys.$ctor1(this.get_base().add('ViewParametersData'));
		},
		paneStylesData: function LayoutInputStoreKeys$PaneStylesData() {
			return new $tab_PaneStylesTableKeys.$ctor1(this.get_base().add('PaneStylesData'));
		},
		heatmapData: function LayoutInputStoreKeys$HeatmapData() {
			return new $tab_HeatmapProducerInputKeys.$ctor1(this.get_base().add('HeatmapData'));
		},
		visualLayoutData: function LayoutInputStoreKeys$VisualLayoutData() {
			return new $tab_VisualLayoutProducerInputKeys.$ctor1(this.get_base().add('VisualLayoutData'));
		}
	}, $tab_KeyPath);
	$tab_LayoutInputStoreKeys.$ctor1.prototype = $tab_LayoutInputStoreKeys.prototype;
	ss.initClass($tab_LayoutResultStoreKeys, $asm, {
		activePages: function LayoutResultStoreKeys$ActivePages() {
			return new $tab_ActivePagesKeys.$ctor1(this.get_base().add('ActivePages'));
		},
		axisOutput: function LayoutResultStoreKeys$AxisOutput() {
			return new $tab_AxisProducerOutputKeys.$ctor1(this.get_base().add('AxisOutput'));
		},
		borderStyles: function LayoutResultStoreKeys$BorderStyles() {
			return new $tab_BorderStylesProducerInputKeys.$ctor1(this.get_base().add('BorderStyles'));
		},
		gridLines: function LayoutResultStoreKeys$GridLines() {
			return new $tab_GridLineProducerOutputKeys.$ctor1(this.get_base().add('GridLines'));
		},
		heatmap: function LayoutResultStoreKeys$Heatmap() {
			return new $tab_HeatmapProducerOutputKeys.$ctor1(this.get_base().add('Heatmap'));
		},
		pdMarks: function LayoutResultStoreKeys$PDMarks(pDMarksKey) {
			if (ss.startsWithString(pDMarksKey, String.fromCharCode(39)) || ss.startsWithString(pDMarksKey, String.fromCharCode(34))) {
				return new $tab_MarkLayoutOutputKeys.$ctor1(this.get_base().add('PDMarks').add(pDMarksKey));
			}
			return new $tab_MarkLayoutOutputKeys.$ctor1(this.get_base().add('PDMarks').add(ss.formatString("'{0}'", pDMarksKey)));
		},
		pageIntervalTable: function LayoutResultStoreKeys$PageIntervalTable() {
			return new $tab_PageIntervalTableKeys.$ctor1(this.get_base().add('PageIntervalTable'));
		},
		paneCount: function LayoutResultStoreKeys$PaneCount() {
			return new $tab_PaneCountersKeys.$ctor1(this.get_base().add('PaneCount'));
		},
		paneStyles: function LayoutResultStoreKeys$PaneStyles() {
			return new $tab_PaneStylesTableKeys.$ctor1(this.get_base().add('PaneStyles'));
		},
		xAxisDescriptor: function LayoutResultStoreKeys$XAxisDescriptor() {
			return new $tab_FlattenedAxisDescriptorKeys.$ctor1(this.get_base().add('XAxisDescriptor'));
		},
		firstPassRefLines: function LayoutResultStoreKeys$FirstPassRefLines(firstPassRefLinesKey) {
			if (ss.startsWithString(firstPassRefLinesKey, String.fromCharCode(39)) || ss.startsWithString(firstPassRefLinesKey, String.fromCharCode(34))) {
				return new $tab_ReferenceLineProducerOutputKeys.$ctor1(this.get_base().add('FirstPassRefLines').add(firstPassRefLinesKey));
			}
			return new $tab_ReferenceLineProducerOutputKeys.$ctor1(this.get_base().add('FirstPassRefLines').add(ss.formatString("'{0}'", firstPassRefLinesKey)));
		},
		visualLayout: function LayoutResultStoreKeys$VisualLayout() {
			return new $tab_VisualLayoutResultsKeys.$ctor1(this.get_base().add('VisualLayout'));
		},
		refLines: function LayoutResultStoreKeys$RefLines(refLinesKey) {
			if (ss.startsWithString(refLinesKey, String.fromCharCode(39)) || ss.startsWithString(refLinesKey, String.fromCharCode(34))) {
				return new $tab_ReferenceLineProducerOutputKeys.$ctor1(this.get_base().add('RefLines').add(refLinesKey));
			}
			return new $tab_ReferenceLineProducerOutputKeys.$ctor1(this.get_base().add('RefLines').add(ss.formatString("'{0}'", refLinesKey)));
		},
		instantRefLines: function LayoutResultStoreKeys$InstantRefLines(instantRefLinesKey) {
			if (ss.startsWithString(instantRefLinesKey, String.fromCharCode(39)) || ss.startsWithString(instantRefLinesKey, String.fromCharCode(34))) {
				return new $tab_ReferenceLineProducerOutputKeys.$ctor1(this.get_base().add('InstantRefLines').add(instantRefLinesKey));
			}
			return new $tab_ReferenceLineProducerOutputKeys.$ctor1(this.get_base().add('InstantRefLines').add(ss.formatString("'{0}'", instantRefLinesKey)));
		},
		supportedIncrementalUpdates: function LayoutResultStoreKeys$SupportedIncrementalUpdates() {
			return new $tab_IncrementalUpdateInputKeys.$ctor1(this.get_base().add('SupportedIncrementalUpdates'));
		},
		tickPlacement: function LayoutResultStoreKeys$TickPlacement() {
			return new $tab_TickProducerOutputKeys.$ctor1(this.get_base().add('TickPlacement'));
		},
		viewpoint: function LayoutResultStoreKeys$Viewpoint() {
			return new $tab_ViewpointKeys.$ctor1(this.get_base().add('Viewpoint'));
		}
	}, $tab_KeyPath);
	$tab_LayoutResultStoreKeys.$ctor1.prototype = $tab_LayoutResultStoreKeys.prototype;
	ss.initClass($tab_LayoutSizeKeys, $asm, {
		width: function LayoutSizeKeys$Width() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Width'));
		},
		height: function LayoutSizeKeys$Height() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Height'));
		}
	}, $tab_KeyPath);
	$tab_LayoutSizeKeys.$ctor1.prototype = $tab_LayoutSizeKeys.prototype;
	ss.initClass($tab_LinearFloatGeometryDecoder, $asm, {
		processEncodedGeometry: function LinearFloatGeometryDecoder$ProcessEncodedGeometry() {
			if (tab.FeatureFlags.isEnabled('SendMoreGeometryBitsToClient')) {
				var result;
				switch (ss.Int32.trunc(this.$geomEncoded[this.$geomOffset++])) {
					case 1: {
						result = this.$processMultiPolygon();
						break;
					}
					case 2: {
						result = this.$processMultiLine();
						break;
					}
					case 3: {
						result = this.$processMultiPoint();
						break;
					}
					default: {
						this.$failDueToInvalidData();
						return null;
					}
				}
				if (this.$geomEncoded[this.$geomOffset++] !== 7) {
					this.$failDueToInvalidData();
				}
				if (this.$geomOffset !== this.$geomEncoded.length) {
					this.$failDueToInvalidData();
				}
				return result;
			}
			else {
				switch (ss.Int32.trunc(this.$geomEncoded[this.$geomOffset++])) {
					case 1: {
						return this.$processMultiPolygon();
					}
					case 2: {
						return this.$processMultiLine();
					}
					case 3: {
						return this.$processMultiPoint();
					}
					default: {
						this.$failDueToInvalidData();
						return null;
					}
				}
			}
		},
		$processMultiPoint: function LinearFloatGeometryDecoder$ProcessMultiPoint() {
			var geometryPM = {};
			if (tab.FeatureFlags.isEnabled('SendMoreGeometryBitsToClient')) {
				var biasX = 0;
				var biasY = 0;
				geometryPM.geometryType = 'multiPoint';
				var curMppm = {};
				geometryPM.multiPoint = curMppm;
				if (this.$geomOffset + 2 > this.$geomEncoded.length) {
					this.$failDueToInvalidData();
				}
				biasX = this.$geomEncoded[this.$geomOffset++];
				biasY = this.$geomEncoded[this.$geomOffset++];
				curMppm.pointsF = this.$copyFloats$1(biasX, biasY);
				return geometryPM;
			}
			else {
				geometryPM.geometryType = 'multiPoint';
				var curMppm1 = {};
				geometryPM.multiPoint = curMppm1;
				curMppm1.pointsF = this.$copyFloats();
				return geometryPM;
			}
		},
		$processMultiLine: function LinearFloatGeometryDecoder$ProcessMultiLine() {
			var geometryPM = { geometryType: 'multiLineString' };
			var curMlpm = {};
			var curLpm = null;
			if (tab.FeatureFlags.isEnabled('SendMoreGeometryBitsToClient')) {
				if (this.$geomOffset + 2 > this.$geomEncoded.length) {
					this.$failDueToInvalidData();
				}
				var biasX = this.$geomEncoded[this.$geomOffset++];
				var biasY = this.$geomEncoded[this.$geomOffset++];
				while (this.$geomOffset < this.$geomEncoded.length && this.$geomEncoded[this.$geomOffset] !== 7) {
					switch (ss.Int32.trunc(this.$geomEncoded[this.$geomOffset++])) {
						case 4: {
							curMlpm = { lineList: [] };
							geometryPM.multiLine = curMlpm;
							break;
						}
						case 6: {
							curLpm = {};
							curMlpm.lineList.push(curLpm);
							curLpm.pointsF = this.$copyFloats$1(biasX, biasY);
							break;
						}
						default: {
							this.$failDueToInvalidData();
							break;
						}
					}
				}
			}
			else {
				while (this.$geomEncoded[this.$geomOffset] !== 7 && this.$geomOffset < this.$geomEncoded.length) {
					switch (ss.Int32.trunc(this.$geomEncoded[this.$geomOffset++])) {
						case 4: {
							curMlpm = { lineList: [] };
							geometryPM.multiLine = curMlpm;
							break;
						}
						case 6: {
							curLpm = {};
							curMlpm.lineList.push(curLpm);
							curLpm.pointsF = this.$copyFloats();
							break;
						}
						default: {
							this.$failDueToInvalidData();
							break;
						}
					}
				}
			}
			return geometryPM;
		},
		$processMultiPolygon: function LinearFloatGeometryDecoder$ProcessMultiPolygon() {
			var geometryPM = { geometryType: 'multiPolygon' };
			var curMppm = null;
			var curPpm = null;
			var curLpm = null;
			if (tab.FeatureFlags.isEnabled('SendMoreGeometryBitsToClient')) {
				if (this.$geomOffset + 2 > this.$geomEncoded.length) {
					this.$failDueToInvalidData();
				}
				var biasX = this.$geomEncoded[this.$geomOffset++];
				var biasY = this.$geomEncoded[this.$geomOffset++];
				while (this.$geomOffset < this.$geomEncoded.length && this.$geomEncoded[this.$geomOffset] !== 7) {
					switch (ss.Int32.trunc(this.$geomEncoded[this.$geomOffset++])) {
						case 4: {
							curMppm = {};
							geometryPM.multiPolygon = curMppm;
							curMppm.polygonList = [];
							break;
						}
						case 5: {
							curPpm = { lineList: [] };
							curMppm.polygonList.push(curPpm);
							break;
						}
						case 6: {
							curLpm = {};
							curPpm.lineList.push(curLpm);
							curLpm.pointsF = this.$copyFloats$1(biasX, biasY);
							break;
						}
						default: {
							this.$failDueToInvalidData();
							break;
						}
					}
				}
			}
			else {
				while (this.$geomEncoded[this.$geomOffset] !== 7 && this.$geomOffset < this.$geomEncoded.length) {
					switch (ss.Int32.trunc(this.$geomEncoded[this.$geomOffset++])) {
						case 4: {
							curMppm = {};
							geometryPM.multiPolygon = curMppm;
							curMppm.polygonList = [];
							break;
						}
						case 5: {
							curPpm = { lineList: [] };
							curMppm.polygonList.push(curPpm);
							break;
						}
						case 6: {
							curLpm = {};
							curPpm.lineList.push(curLpm);
							curLpm.pointsF = this.$copyFloats();
							break;
						}
						default: {
							this.$failDueToInvalidData();
							break;
						}
					}
				}
			}
			return geometryPM;
		},
		$copyFloats$1: function LinearFloatGeometryDecoder$CopyFloats(biasX, biasY) {
			if (this.$geomOffset >= this.$geomEncoded.length) {
				this.$failDueToInvalidData();
			}
			var lineLen = ss.Int32.trunc(this.$geomEncoded[this.$geomOffset++]);
			if (this.$geomOffset + lineLen > this.$geomEncoded.length) {
				this.$failDueToInvalidData();
			}
			var rval = new Array(lineLen);
			for (var i = 0; i < lineLen; i += 2) {
				rval[i] = this.$geomEncoded[this.$geomOffset++] + biasX;
				rval[i + 1] = this.$geomEncoded[this.$geomOffset++] + biasY;
			}
			return rval;
		},
		$copyFloats: function LinearFloatGeometryDecoder$CopyFloats() {
			if (!tab.FeatureFlags.isEnabled('SendMoreGeometryBitsToClient')) {
				var lineLen = ss.Int32.trunc(this.$geomEncoded[this.$geomOffset++]);
				var rval = new Array(lineLen);
				for (var i = 0; i < lineLen; i++) {
					rval[i] = this.$geomEncoded[this.$geomOffset++];
				}
				return rval;
			}
			return null;
		},
		$failDueToInvalidData: function LinearFloatGeometryDecoder$FailDueToInvalidData() {
			throw new ss.Exception('Invalid geometry data around position ' + this.$geomOffset);
		}
	});
	ss.initClass($tab_LocalEmscripten, $asm, {
		executeVM: function LocalEmscripten$ExecuteVM(vmHandle) {
			var deferred = $.Deferred();
			var mc = tabBootstrap.MetricsController.createContext('RW_ExecuteVM', 32, null);
			try {
				var result = new $tab_DatastoreHandle(Module._ExecuteVM(vmHandle.handleValue), function(handleValue) {
					RuntimeHandleManager._HandleManagerReleaseDatastoreHandle(handleValue);
				});
				deferred.resolve(result);
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				deferred.reject();
				e = $tab_EmscriptenSupport.getExceptionInformation(e);
				e.name = 'RuntimeWebModule Error in ExecuteVM';
				console.error(e);
				tab.ErrorTrace.report(e);
			}
			mc.dispose();
			return deferred.promise();
		},
		$buildVMDirectBuffer: function LocalEmscripten$BuildVMDirectBuffer(vtl_ptr, vtl_count, dsHandle) {
			var deferred = $.Deferred();
			var mc = tabBootstrap.MetricsController.createContext('RW_BuildVM', 32, null);
			try {
				var result = new $tab_VMHandle(Module._BuildVM(vtl_ptr, vtl_count, dsHandle.handleValue), function(handleValue) {
					RuntimeHandleManager._HandleManagerReleaseVMHandle(handleValue);
				});
				deferred.resolve(result);
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				deferred.reject();
				e = $tab_EmscriptenSupport.getExceptionInformation(e);
				e.name = 'RuntimeWebModule Error in BuildVM';
				console.error(e);
				tab.ErrorTrace.report(e);
			}
			mc.dispose();
			return deferred.promise();
		},
		buildVMHex: function LocalEmscripten$BuildVMHex(vtlAsHex, dsHandle) {
			var vtl_size = $tab_HexHeapDecoder.decodedLength(vtlAsHex);
			var vtl_ptr = RuntimeWebModule._malloc(vtl_size);
			$tab_HexHeapDecoder.run(vtl_ptr, RuntimeWebModule.HEAPU8, vtlAsHex);
			var result = this.$buildVMDirectBuffer(vtl_ptr, vtl_size, dsHandle);
			RuntimeWebModule._free(vtl_ptr);
			return result;
		},
		$loadBinaryDatastoreDirectBuffer: function LocalEmscripten$LoadBinaryDatastoreDirectBuffer(buffer_ptr, buffer_count) {
			var deferred = $.Deferred();
			var mc = tabBootstrap.MetricsController.createContext('RW_LoadBinaryDatastore', 32, null);
			try {
				var result = new $tab_DatastoreHandle(Module._LoadBinaryDatastore(buffer_ptr, buffer_count), function(handleValue) {
					RuntimeHandleManager._HandleManagerReleaseDatastoreHandle(handleValue);
				});
				deferred.resolve(result);
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				deferred.reject();
				e = $tab_EmscriptenSupport.getExceptionInformation(e);
				e.name = 'RuntimeWebModule Error in LoadBinaryDatastore';
				console.error(e);
				tab.ErrorTrace.report(e);
			}
			mc.dispose();
			return deferred.promise();
		},
		loadBinaryDatastoreHex: function LocalEmscripten$LoadBinaryDatastoreHex(bufferAsHex) {
			var buffer_size = $tab_HexHeapDecoder.decodedLength(bufferAsHex);
			var buffer_ptr = RuntimeWebModule._malloc(buffer_size);
			$tab_HexHeapDecoder.run(buffer_ptr, RuntimeWebModule.HEAPU8, bufferAsHex);
			var result = this.$loadBinaryDatastoreDirectBuffer(buffer_ptr, buffer_size);
			RuntimeWebModule._free(buffer_ptr);
			return result;
		},
		initializeRuntime: function LocalEmscripten$InitializeRuntime() {
			var deferred = $.Deferred();
			var mc = tabBootstrap.MetricsController.createContext('RW_InitializeRuntime', 32, null);
			try {
				Module._InitializeRuntime();
				deferred.resolve();
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				deferred.reject();
				e = $tab_EmscriptenSupport.getExceptionInformation(e);
				e.name = 'RuntimeWebModule Error in InitializeRuntime';
				console.error(e);
				tab.ErrorTrace.report(e);
			}
			mc.dispose();
			return deferred.promise();
		},
		marshallDatastore: function LocalEmscripten$MarshallDatastore(dsHandle) {
			var deferred = $.Deferred();
			var mc = tabBootstrap.MetricsController.createContext('RW_MarshallDatastore', 32, null);
			try {
				var huttOffset = Module._MarshallDatastore(dsHandle.handleValue);
				var result = $tab_JsHeapMarshaller.unmarshall$1(RuntimeWebModule.HEAPU8.buffer, huttOffset);
				deferred.resolve(result);
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				deferred.reject();
				e = $tab_EmscriptenSupport.getExceptionInformation(e);
				e.name = 'RuntimeWebModule Error in MarshallDatastore';
				console.error(e);
				tab.ErrorTrace.report(e);
			}
			mc.dispose();
			return deferred.promise();
		},
		$marshallDatastoreSubKeyDirectBuffer: function LocalEmscripten$MarshallDatastoreSubKeyDirectBuffer(dsHandle, subKey_ptr, subKey_count) {
			var deferred = $.Deferred();
			var mc = tabBootstrap.MetricsController.createContext('RW_MarshallDatastoreSubKey', 32, null);
			try {
				var huttOffset = Module._MarshallDatastoreSubKey(dsHandle.handleValue, subKey_ptr, subKey_count);
				var result = $tab_JsHeapMarshaller.unmarshall$1(RuntimeWebModule.HEAPU8.buffer, huttOffset);
				deferred.resolve(result);
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				deferred.reject();
				e = $tab_EmscriptenSupport.getExceptionInformation(e);
				e.name = 'RuntimeWebModule Error in MarshallDatastoreSubKey';
				console.error(e);
				tab.ErrorTrace.report(e);
			}
			mc.dispose();
			return deferred.promise();
		},
		marshallDatastoreSubKeyHex: function LocalEmscripten$MarshallDatastoreSubKeyHex(dsHandle, subKeyAsHex) {
			var subKey_size = $tab_HexHeapDecoder.decodedLength(subKeyAsHex);
			var subKey_ptr = RuntimeWebModule._malloc(subKey_size);
			$tab_HexHeapDecoder.run(subKey_ptr, RuntimeWebModule.HEAPU8, subKeyAsHex);
			var result = this.$marshallDatastoreSubKeyDirectBuffer(dsHandle, subKey_ptr, subKey_size);
			RuntimeWebModule._free(subKey_ptr);
			return result;
		},
		$loadAndApplyDataStoreUpdaterDirectBuffer: function LocalEmscripten$LoadAndApplyDataStoreUpdaterDirectBuffer(buffer_ptr, buffer_count, vmHandle) {
			var deferred = $.Deferred();
			var mc = tabBootstrap.MetricsController.createContext('RW_LoadAndApplyDataStoreUpdater', 32, null);
			try {
				var result = new $tab_DatastoreHandle(Module._LoadAndApplyDataStoreUpdater(buffer_ptr, buffer_count, vmHandle.handleValue), function(handleValue) {
					RuntimeHandleManager._HandleManagerReleaseDatastoreHandle(handleValue);
				});
				deferred.resolve(result);
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				deferred.reject();
				e = $tab_EmscriptenSupport.getExceptionInformation(e);
				e.name = 'RuntimeWebModule Error in LoadAndApplyDataStoreUpdater';
				console.error(e);
				tab.ErrorTrace.report(e);
			}
			mc.dispose();
			return deferred.promise();
		},
		loadAndApplyDataStoreUpdaterHex: function LocalEmscripten$LoadAndApplyDataStoreUpdaterHex(bufferAsHex, vmHandle) {
			var buffer_size = $tab_HexHeapDecoder.decodedLength(bufferAsHex);
			var buffer_ptr = RuntimeWebModule._malloc(buffer_size);
			$tab_HexHeapDecoder.run(buffer_ptr, RuntimeWebModule.HEAPU8, bufferAsHex);
			var result = this.$loadAndApplyDataStoreUpdaterDirectBuffer(buffer_ptr, buffer_size, vmHandle);
			RuntimeWebModule._free(buffer_ptr);
			return result;
		},
		localPanCommand: function LocalEmscripten$LocalPanCommand(vmHandle, initialDataStoreHandle, dataStoreHandle, deltaX, deltaY) {
			var deferred = $.Deferred();
			var mc = tabBootstrap.MetricsController.createContext('RW_LocalPanCommand', 32, null);
			try {
				var result = new $tab_DatastoreHandle(Module._LocalPanCommand(vmHandle.handleValue, initialDataStoreHandle.handleValue, dataStoreHandle.handleValue, deltaX, deltaY), function(handleValue) {
					RuntimeHandleManager._HandleManagerReleaseDatastoreHandle(handleValue);
				});
				deferred.resolve(result);
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				deferred.reject();
				e = $tab_EmscriptenSupport.getExceptionInformation(e);
				e.name = 'RuntimeWebModule Error in LocalPanCommand';
				console.error(e);
				tab.ErrorTrace.report(e);
			}
			mc.dispose();
			return deferred.promise();
		},
		localZoomCommand: function LocalEmscripten$LocalZoomCommand(vmHandle, initialDataStoreHandle, dataStoreHandle, x, y, w, h, isZoomIn) {
			var deferred = $.Deferred();
			var mc = tabBootstrap.MetricsController.createContext('RW_LocalZoomCommand', 32, null);
			try {
				var result = new $tab_DatastoreHandle(Module._LocalZoomCommand(vmHandle.handleValue, initialDataStoreHandle.handleValue, dataStoreHandle.handleValue, x, y, w, h, isZoomIn), function(handleValue) {
					RuntimeHandleManager._HandleManagerReleaseDatastoreHandle(handleValue);
				});
				deferred.resolve(result);
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				deferred.reject();
				e = $tab_EmscriptenSupport.getExceptionInformation(e);
				e.name = 'RuntimeWebModule Error in LocalZoomCommand';
				console.error(e);
				tab.ErrorTrace.report(e);
			}
			mc.dispose();
			return deferred.promise();
		},
		localZoomFactorCommand: function LocalEmscripten$LocalZoomFactorCommand(vmHandle, initialDataStoreHandle, dataStoreHandle, x, y, zoomFactor) {
			var deferred = $.Deferred();
			var mc = tabBootstrap.MetricsController.createContext('RW_LocalZoomFactorCommand', 32, null);
			try {
				var result = new $tab_DatastoreHandle(Module._LocalZoomFactorCommand(vmHandle.handleValue, initialDataStoreHandle.handleValue, dataStoreHandle.handleValue, x, y, zoomFactor), function(handleValue) {
					RuntimeHandleManager._HandleManagerReleaseDatastoreHandle(handleValue);
				});
				deferred.resolve(result);
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				deferred.reject();
				e = $tab_EmscriptenSupport.getExceptionInformation(e);
				e.name = 'RuntimeWebModule Error in LocalZoomFactorCommand';
				console.error(e);
				tab.ErrorTrace.report(e);
			}
			mc.dispose();
			return deferred.promise();
		},
		$rueUpdateCommandDirectBuffer: function LocalEmscripten$RueUpdateCommandDirectBuffer(vmHandle, rueUpdate_ptr, rueUpdate_count) {
			var deferred = $.Deferred();
			var mc = tabBootstrap.MetricsController.createContext('RW_RueUpdateCommand', 32, null);
			try {
				var result = new $tab_DatastoreHandle(Module._RueUpdateCommand(vmHandle.handleValue, rueUpdate_ptr, rueUpdate_count), function(handleValue) {
					RuntimeHandleManager._HandleManagerReleaseDatastoreHandle(handleValue);
				});
				deferred.resolve(result);
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				deferred.reject();
				e = $tab_EmscriptenSupport.getExceptionInformation(e);
				e.name = 'RuntimeWebModule Error in RueUpdateCommand';
				console.error(e);
				tab.ErrorTrace.report(e);
			}
			mc.dispose();
			return deferred.promise();
		},
		rueUpdateCommandHex: function LocalEmscripten$RueUpdateCommandHex(vmHandle, rueUpdateAsHex) {
			var rueUpdate_size = $tab_HexHeapDecoder.decodedLength(rueUpdateAsHex);
			var rueUpdate_ptr = RuntimeWebModule._malloc(rueUpdate_size);
			$tab_HexHeapDecoder.run(rueUpdate_ptr, RuntimeWebModule.HEAPU8, rueUpdateAsHex);
			var result = this.$rueUpdateCommandDirectBuffer(vmHandle, rueUpdate_ptr, rueUpdate_size);
			RuntimeWebModule._free(rueUpdate_ptr);
			return result;
		}
	}, null, [$tab_IRuntimeWebModule]);
	ss.initClass($tab_LocalEmscriptenSupport, $asm, {
		paramToByteBuffer: function LocalEmscriptenSupport$ParamToByteBuffer(param) {
			var heapOffset = ss.unbox(ss.cast(param, ss.Int32));
			var bufferPtr = RuntimeWebModule.HEAPU32[heapOffset >> 2];
			var bufferSize = RuntimeWebModule.HEAPU32[(heapOffset >> 2) + 1];
			return RuntimeWebModule.HEAPU8.buffer.slice(bufferPtr, bufferPtr + bufferSize);
		},
		byteBufferToHeap: function LocalEmscriptenSupport$ByteBufferToHeap(buffer) {
			var bufferPtr = RuntimeWebModule._malloc(buffer.byteLength + 2);
			var bufferDestination = bufferPtr + 8;
			RuntimeWebModule.HEAPU32[bufferPtr >> 2] = bufferDestination;
			RuntimeWebModule.HEAPU32[(bufferPtr >> 2) + 1] = buffer.byteLength;
			RuntimeWebModule.HEAPU8.set(new Uint8Array(buffer), bufferDestination);
			return bufferPtr;
		},
		paramToString: function LocalEmscriptenSupport$ParamToString(param) {
			var heapOffset = ss.unbox(ss.cast(param, ss.Int32));
			return $tab_Utf8TextDecoder.decodeNullTerminated(RuntimeWebModule.HEAPU8.subarray(heapOffset));
		},
		stringToHeap: function LocalEmscriptenSupport$StringToHeap(str) {
			var encoded = $tab_Utf8TextEncoder.encode(str);
			var strPtr = RuntimeWebModule._malloc(encoded.length + 1);
			RuntimeWebModule.HEAPU8[strPtr + encoded.length] = 0;
			RuntimeWebModule.HEAPU8.set(encoded, strPtr);
			return strPtr;
		}
	}, null, [$tab_IRWALSupport]);
	ss.initClass($tab_LockedRatioKeys, $asm, {
		isMap: function LockedRatioKeys$IsMap() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsMap'));
		},
		hasPosition: function LockedRatioKeys$HasPosition() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasPosition'));
		},
		lockedRatioOfScales: function LockedRatioKeys$LockedRatioOfScales() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LockedRatioOfScales'));
		},
		defaultMinX: function LockedRatioKeys$DefaultMinX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DefaultMinX'));
		},
		defaultMaxX: function LockedRatioKeys$DefaultMaxX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DefaultMaxX'));
		},
		defaultMinY: function LockedRatioKeys$DefaultMinY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DefaultMinY'));
		},
		defaultMaxY: function LockedRatioKeys$DefaultMaxY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DefaultMaxY'));
		},
		defaultXSize: function LockedRatioKeys$DefaultXSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DefaultXSize'));
		},
		defaultYSize: function LockedRatioKeys$DefaultYSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DefaultYSize'));
		},
		singleItemMapDelta: function LockedRatioKeys$SingleItemMapDelta() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SingleItemMapDelta'));
		}
	}, $tab_KeyPath);
	$tab_LockedRatioKeys.$ctor1.prototype = $tab_LockedRatioKeys.prototype;
	ss.initClass($tab_LogTickPerHeaderInputTableKeys, $asm, {
		headerIndex: function LogTickPerHeaderInputTableKeys$HeaderIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HeaderIndex'));
		},
		vtlBlockIndex: function LogTickPerHeaderInputTableKeys$VtlBlockIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VtlBlockIndex'));
		},
		columnFormatIndex: function LogTickPerHeaderInputTableKeys$ColumnFormatIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ColumnFormatIndex'));
		},
		labelFontIndex: function LogTickPerHeaderInputTableKeys$LabelFontIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelFontIndex'));
		},
		labelHeight: function LogTickPerHeaderInputTableKeys$LabelHeight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelHeight'));
		},
		logBaseReference: function LogTickPerHeaderInputTableKeys$LogBaseReference() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LogBaseReference'));
		},
		originReference: function LogTickPerHeaderInputTableKeys$OriginReference() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('OriginReference'));
		},
		perpendicularLabels: function LogTickPerHeaderInputTableKeys$PerpendicularLabels() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PerpendicularLabels'));
		}
	}, $tab_KeyPath);
	$tab_LogTickPerHeaderInputTableKeys.$ctor1.prototype = $tab_LogTickPerHeaderInputTableKeys.prototype;
	ss.initClass($tab_MapBoundsKeys, $asm, {
		boundingBoxTops: function MapBoundsKeys$BoundingBoxTops() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BoundingBoxTops'));
		},
		boundingBoxBottoms: function MapBoundsKeys$BoundingBoxBottoms() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BoundingBoxBottoms'));
		},
		boundingBoxLefts: function MapBoundsKeys$BoundingBoxLefts() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BoundingBoxLefts'));
		},
		boundingBoxRights: function MapBoundsKeys$BoundingBoxRights() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BoundingBoxRights'));
		},
		latitudesForNullGeometries: function MapBoundsKeys$LatitudesForNullGeometries() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LatitudesForNullGeometries'));
		},
		longitudesForNullGeometries: function MapBoundsKeys$LongitudesForNullGeometries() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LongitudesForNullGeometries'));
		},
		latitudes: function MapBoundsKeys$Latitudes() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Latitudes'));
		},
		longitudes: function MapBoundsKeys$Longitudes() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Longitudes'));
		}
	}, $tab_KeyPath);
	$tab_MapBoundsKeys.$ctor1.prototype = $tab_MapBoundsKeys.prototype;
	ss.initClass($tab_MapLayersModelUpdateKeys, $asm, {
		isValid: function MapLayersModelUpdateKeys$IsValid() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsValid'));
		},
		displayScale: function MapLayersModelUpdateKeys$DisplayScale() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DisplayScale'));
		},
		actualZoomLevel: function MapLayersModelUpdateKeys$ActualZoomLevel() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ActualZoomLevel'));
		},
		coverage: function MapLayersModelUpdateKeys$Coverage() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Coverage'));
		}
	}, $tab_KeyPath);
	$tab_MapLayersModelUpdateKeys.$ctor1.prototype = $tab_MapLayersModelUpdateKeys.prototype;
	ss.initClass($tab_MapPackageKeys, $asm, {
		mapCode: function MapPackageKeys$MapCode() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapCode'));
		},
		mapLayersModel: function MapPackageKeys$MapLayersModel() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapLayersModel'));
		},
		mapProvider: function MapPackageKeys$MapProvider() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapProvider'));
		},
		mappedImageModel: function MapPackageKeys$MappedImageModel() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MappedImageModel'));
		},
		mapSceneModel: function MapPackageKeys$MapSceneModel() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapSceneModel'));
		},
		modelNumber: function MapPackageKeys$ModelNumber() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ModelNumber'));
		},
		sourceName: function MapPackageKeys$SourceName() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SourceName'));
		},
		styleName: function MapPackageKeys$StyleName() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('StyleName'));
		},
		waitForImages: function MapPackageKeys$WaitForImages() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('WaitForImages'));
		},
		waitTileFill: function MapPackageKeys$WaitTileFill() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('WaitTileFill'));
		},
		wrapCount: function MapPackageKeys$WrapCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('WrapCount'));
		}
	}, $tab_KeyPath);
	$tab_MapPackageKeys.$ctor1.prototype = $tab_MapPackageKeys.prototype;
	ss.initClass($tab_MapProviderKeys, $asm, {
		pixelsPerCRSUnitAtZoomLevel1: function MapProviderKeys$PixelsPerCRSUnitAtZoomLevel1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PixelsPerCRSUnitAtZoomLevel1'));
		},
		maxScaleLevel: function MapProviderKeys$MaxScaleLevel() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MaxScaleLevel'));
		},
		tileSize: function MapProviderKeys$TileSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TileSize'));
		},
		intermediateLevels: function MapProviderKeys$IntermediateLevels() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IntermediateLevels'));
		},
		isTileSizeAdjustable: function MapProviderKeys$IsTileSizeAdjustable() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsTileSizeAdjustable'));
		},
		minShrink: function MapProviderKeys$MinShrink() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinShrink'));
		},
		maxStretch: function MapProviderKeys$MaxStretch() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MaxStretch'));
		}
	}, $tab_KeyPath);
	$tab_MapProviderKeys.$ctor1.prototype = $tab_MapProviderKeys.prototype;
	ss.initClass($tab_MarkLayoutDataKeys, $asm, {
		parameters: function MarkLayoutDataKeys$Parameters() {
			return new $tab_MarkLayoutParametersKeys.$ctor1(this.get_base().add('Parameters'));
		},
		geometryTable: function MarkLayoutDataKeys$GeometryTable() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('GeometryTable'));
		},
		textCompositionInputKeys: function MarkLayoutDataKeys$TextCompositionInputKeys() {
			return new $tab_TextCompositionInputKeys.$ctor1(this.get_base().add('TextCompositionInputKeys'));
		},
		textTableHelper: function MarkLayoutDataKeys$TextTableHelper() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextTableHelper'));
		},
		wordleRandomKeys: function MarkLayoutDataKeys$WordleRandomKeys() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('WordleRandomKeys'));
		},
		xDomains: function MarkLayoutDataKeys$XDomains() {
			return new $tab_DomainLookupKeys.$ctor1(this.get_base().add('XDomains'));
		},
		xHiddenMarks: function MarkLayoutDataKeys$XHiddenMarks() {
			return new $tab_HiddenMarksKeys.$ctor1(this.get_base().add('XHiddenMarks'));
		},
		yDomains: function MarkLayoutDataKeys$YDomains() {
			return new $tab_DomainLookupKeys.$ctor1(this.get_base().add('YDomains'));
		},
		yHiddenMarks: function MarkLayoutDataKeys$YHiddenMarks() {
			return new $tab_HiddenMarksKeys.$ctor1(this.get_base().add('YHiddenMarks'));
		}
	}, $tab_KeyPath);
	$tab_MarkLayoutDataKeys.$ctor1.prototype = $tab_MarkLayoutDataKeys.prototype;
	ss.initClass($tab_MarkLayoutOutputKeys, $asm, {
		color: function MarkLayoutOutputKeys$Color() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Color'));
		},
		domain: function MarkLayoutOutputKeys$Domain() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Domain'));
		},
		ellipses: function MarkLayoutOutputKeys$Ellipses() {
			return new $tab_EllipsisTableKeys.$ctor1(this.get_base().add('Ellipses'));
		},
		encodingData: function MarkLayoutOutputKeys$EncodingData() {
			return new $tab_CommonEncodingsKeys.$ctor1(this.get_base().add('EncodingData'));
		},
		encodings: function MarkLayoutOutputKeys$Encodings() {
			return new $tab_EncodingsTableKeys.$ctor1(this.get_base().add('Encodings'));
		},
		height: function MarkLayoutOutputKeys$Height() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Height'));
		},
		hasPerMarkColorEncoding: function MarkLayoutOutputKeys$HasPerMarkColorEncoding() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasPerMarkColorEncoding'));
		},
		hasPerMarkSizeEncoding: function MarkLayoutOutputKeys$HasPerMarkSizeEncoding() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasPerMarkSizeEncoding'));
		},
		isMarkStacked: function MarkLayoutOutputKeys$IsMarkStacked() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsMarkStacked'));
		},
		markLayoutData: function MarkLayoutOutputKeys$MarkLayoutData() {
			return new $tab_MarkLayoutDataKeys.$ctor1(this.get_base().add('MarkLayoutData'));
		},
		scaledStartPoint: function MarkLayoutOutputKeys$ScaledStartPoint() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ScaledStartPoint'));
		},
		scaledEndPoint: function MarkLayoutOutputKeys$ScaledEndPoint() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ScaledEndPoint'));
		},
		textRunCount: function MarkLayoutOutputKeys$TextRunCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunCount'));
		},
		textRunOffset: function MarkLayoutOutputKeys$TextRunOffset() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunOffset'));
		},
		textRunTable: function MarkLayoutOutputKeys$TextRunTable() {
			return new $tab_TextRunTableKeys.$ctor1(this.get_base().add('TextRunTable'));
		},
		textTable: function MarkLayoutOutputKeys$TextTable() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextTable'));
		},
		textStyleTable: function MarkLayoutOutputKeys$TextStyleTable() {
			return new $tab_TextStyleTableKeys.$ctor1(this.get_base().add('TextStyleTable'));
		},
		treemapKeys: function MarkLayoutOutputKeys$TreemapKeys() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TreemapKeys'));
		},
		showLabels: function MarkLayoutOutputKeys$ShowLabels() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ShowLabels'));
		},
		labelMode: function MarkLayoutOutputKeys$LabelMode() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelMode'));
		},
		width: function MarkLayoutOutputKeys$Width() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Width'));
		}
	}, $tab_KeyPath);
	$tab_MarkLayoutOutputKeys.$ctor1.prototype = $tab_MarkLayoutOutputKeys.prototype;
	ss.initClass($tab_MarkLayoutParametersKeys, $asm, {
		alpha: function MarkLayoutParametersKeys$Alpha() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Alpha'));
		},
		backgroundColor: function MarkLayoutParametersKeys$BackgroundColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BackgroundColor'));
		},
		borderColor: function MarkLayoutParametersKeys$BorderColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BorderColor'));
		},
		cellHeight: function MarkLayoutParametersKeys$CellHeight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellHeight'));
		},
		cellWidth: function MarkLayoutParametersKeys$CellWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellWidth'));
		},
		clipHeight: function MarkLayoutParametersKeys$ClipHeight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ClipHeight'));
		},
		clipWidth: function MarkLayoutParametersKeys$ClipWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ClipWidth'));
		},
		color: function MarkLayoutParametersKeys$Color() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Color'));
		},
		drawBorder: function MarkLayoutParametersKeys$DrawBorder() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DrawBorder'));
		},
		dropLineFlags: function MarkLayoutParametersKeys$DropLineFlags() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DropLineFlags'));
		},
		haloColor: function MarkLayoutParametersKeys$HaloColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HaloColor'));
		},
		hasFoldedAxis: function MarkLayoutParametersKeys$HasFoldedAxis() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasFoldedAxis'));
		},
		hasHalos: function MarkLayoutParametersKeys$HasHalos() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasHalos'));
		},
		handleSpecialsX: function MarkLayoutParametersKeys$HandleSpecialsX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HandleSpecialsX'));
		},
		handleSpecialsY: function MarkLayoutParametersKeys$HandleSpecialsY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HandleSpecialsY'));
		},
		hasEmptyOrEqualAxis: function MarkLayoutParametersKeys$HasEmptyOrEqualAxis() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasEmptyOrEqualAxis'));
		},
		hasSortEncoding: function MarkLayoutParametersKeys$HasSortEncoding() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasSortEncoding'));
		},
		independentAxis: function MarkLayoutParametersKeys$IndependentAxis() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IndependentAxis'));
		},
		height: function MarkLayoutParametersKeys$Height() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Height'));
		},
		highlightedHaloColor: function MarkLayoutParametersKeys$HighlightedHaloColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HighlightedHaloColor'));
		},
		scaleTypeX: function MarkLayoutParametersKeys$ScaleTypeX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ScaleTypeX'));
		},
		scaleTypeY: function MarkLayoutParametersKeys$ScaleTypeY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ScaleTypeY'));
		},
		labelOnePerGroup: function MarkLayoutParametersKeys$LabelOnePerGroup() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelOnePerGroup'));
		},
		labelTargetPrimitiveId: function MarkLayoutParametersKeys$LabelTargetPrimitiveId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelTargetPrimitiveId'));
		},
		lineInterpolation: function MarkLayoutParametersKeys$LineInterpolation() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LineInterpolation'));
		},
		markFlags: function MarkLayoutParametersKeys$MarkFlags() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkFlags'));
		},
		markLabelPadding: function MarkLayoutParametersKeys$MarkLabelPadding() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkLabelPadding'));
		},
		markTrailAutoColor: function MarkLayoutParametersKeys$MarkTrailAutoColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkTrailAutoColor'));
		},
		markTrailColor: function MarkLayoutParametersKeys$MarkTrailColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkTrailColor'));
		},
		markTrailCount: function MarkLayoutParametersKeys$MarkTrailCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkTrailCount'));
		},
		markTrailEndEffect: function MarkLayoutParametersKeys$MarkTrailEndEffect() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkTrailEndEffect'));
		},
		markTrailStartEffect: function MarkLayoutParametersKeys$MarkTrailStartEffect() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkTrailStartEffect'));
		},
		markTrailTransparency: function MarkLayoutParametersKeys$MarkTrailTransparency() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkTrailTransparency'));
		},
		minBarHeight: function MarkLayoutParametersKeys$MinBarHeight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinBarHeight'));
		},
		minBarWidth: function MarkLayoutParametersKeys$MinBarWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinBarWidth'));
		},
		pageTrailMarksToTrail: function MarkLayoutParametersKeys$PageTrailMarksToTrail() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PageTrailMarksToTrail'));
		},
		paneFlags: function MarkLayoutParametersKeys$PaneFlags() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneFlags'));
		},
		paneHasBackground: function MarkLayoutParametersKeys$PaneHasBackground() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneHasBackground'));
		},
		primitiveType: function MarkLayoutParametersKeys$PrimitiveType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PrimitiveType'));
		},
		selectedHaloColor: function MarkLayoutParametersKeys$SelectedHaloColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SelectedHaloColor'));
		},
		selectedMultiPrimHaloColor: function MarkLayoutParametersKeys$SelectedMultiPrimHaloColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SelectedMultiPrimHaloColor'));
		},
		shapeId: function MarkLayoutParametersKeys$ShapeId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ShapeId'));
		},
		showRunningOrderLabels: function MarkLayoutParametersKeys$ShowRunningOrderLabels() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ShowRunningOrderLabels'));
		},
		size: function MarkLayoutParametersKeys$Size() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Size'));
		},
		trailOverrides: function MarkLayoutParametersKeys$TrailOverrides() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TrailOverrides'));
		},
		vizType: function MarkLayoutParametersKeys$VizType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VizType'));
		},
		width: function MarkLayoutParametersKeys$Width() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Width'));
		},
		wrapDomain: function MarkLayoutParametersKeys$WrapDomain() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('WrapDomain'));
		}
	}, $tab_KeyPath);
	$tab_MarkLayoutParametersKeys.$ctor1.prototype = $tab_MarkLayoutParametersKeys.prototype;
	ss.initClass($tab_MarkLayoutTempKeys, $asm, {
		cellSizeDefault: function MarkLayoutTempKeys$CellSizeDefault() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellSizeDefault'));
		},
		cellSizeDefaultConst: function MarkLayoutTempKeys$CellSizeDefaultConst() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellSizeDefaultConst'));
		},
		cellX: function MarkLayoutTempKeys$CellX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellX'));
		},
		cellY: function MarkLayoutTempKeys$CellY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellY'));
		},
		clipHeight: function MarkLayoutTempKeys$ClipHeight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ClipHeight'));
		},
		clipWidth: function MarkLayoutTempKeys$ClipWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ClipWidth'));
		},
		color: function MarkLayoutTempKeys$Color() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Color'));
		},
		colorBeforeAlpha: function MarkLayoutTempKeys$ColorBeforeAlpha() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ColorBeforeAlpha'));
		},
		geometry: function MarkLayoutTempKeys$Geometry() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Geometry'));
		},
		height: function MarkLayoutTempKeys$Height() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Height'));
		},
		isMarkStacked: function MarkLayoutTempKeys$IsMarkStacked() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsMarkStacked'));
		},
		markStackIndex: function MarkLayoutTempKeys$MarkStackIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkStackIndex'));
		},
		markFlagsX: function MarkLayoutTempKeys$MarkFlagsX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkFlagsX'));
		},
		markFlagsY: function MarkLayoutTempKeys$MarkFlagsY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkFlagsY'));
		},
		markFlags: function MarkLayoutTempKeys$MarkFlags() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkFlags'));
		},
		markId: function MarkLayoutTempKeys$MarkId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkId'));
		},
		paneIndex: function MarkLayoutTempKeys$PaneIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneIndex'));
		},
		paneCol: function MarkLayoutTempKeys$PaneCol() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneCol'));
		},
		panePage: function MarkLayoutTempKeys$PanePage() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PanePage'));
		},
		paneRow: function MarkLayoutTempKeys$PaneRow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneRow'));
		},
		predictionIntervalLowerEnd: function MarkLayoutTempKeys$PredictionIntervalLowerEnd() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PredictionIntervalLowerEnd'));
		},
		predictionIntervalUpperEnd: function MarkLayoutTempKeys$PredictionIntervalUpperEnd() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PredictionIntervalUpperEnd'));
		},
		predictionWhiskerWidth: function MarkLayoutTempKeys$PredictionWhiskerWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PredictionWhiskerWidth'));
		},
		primitiveId: function MarkLayoutTempKeys$PrimitiveId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PrimitiveId'));
		},
		shapeId: function MarkLayoutTempKeys$ShapeId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ShapeId'));
		},
		rho: function MarkLayoutTempKeys$Rho() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Rho'));
		},
		rho1: function MarkLayoutTempKeys$Rho1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Rho1'));
		},
		size: function MarkLayoutTempKeys$Size() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Size'));
		},
		sizeGantt: function MarkLayoutTempKeys$SizeGantt() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SizeGantt'));
		},
		sizeLabel: function MarkLayoutTempKeys$SizeLabel() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SizeLabel'));
		},
		sizeOutputs: function MarkLayoutTempKeys$SizeOutputs() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SizeOutputs'));
		},
		xRawInput: function MarkLayoutTempKeys$XRawInput() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XRawInput'));
		},
		yRawInput: function MarkLayoutTempKeys$YRawInput() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YRawInput'));
		},
		lookupColor: function MarkLayoutTempKeys$LookupColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LookupColor'));
		},
		theta: function MarkLayoutTempKeys$Theta() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Theta'));
		},
		theta1: function MarkLayoutTempKeys$Theta1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Theta1'));
		},
		trailId: function MarkLayoutTempKeys$TrailId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TrailId'));
		},
		tupleId: function MarkLayoutTempKeys$TupleId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TupleId'));
		},
		userPaneCol: function MarkLayoutTempKeys$UserPaneCol() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UserPaneCol'));
		},
		userPaneRow: function MarkLayoutTempKeys$UserPaneRow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UserPaneRow'));
		},
		weight: function MarkLayoutTempKeys$Weight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Weight'));
		},
		width: function MarkLayoutTempKeys$Width() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Width'));
		},
		x: function MarkLayoutTempKeys$X() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('X'));
		},
		x1: function MarkLayoutTempKeys$X1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('X1'));
		},
		xNext: function MarkLayoutTempKeys$XNext() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XNext'));
		},
		xPrev: function MarkLayoutTempKeys$XPrev() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XPrev'));
		},
		xPriorToWrap: function MarkLayoutTempKeys$XPriorToWrap() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XPriorToWrap'));
		},
		xProj: function MarkLayoutTempKeys$XProj() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XProj'));
		},
		y: function MarkLayoutTempKeys$Y() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Y'));
		},
		y1: function MarkLayoutTempKeys$Y1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Y1'));
		},
		yNext: function MarkLayoutTempKeys$YNext() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YNext'));
		},
		yPrev: function MarkLayoutTempKeys$YPrev() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YPrev'));
		},
		yProj: function MarkLayoutTempKeys$YProj() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YProj'));
		},
		xDomains: function MarkLayoutTempKeys$XDomains() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XDomains'));
		},
		yDomains: function MarkLayoutTempKeys$YDomains() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YDomains'));
		},
		ellipses: function MarkLayoutTempKeys$Ellipses() {
			return new $tab_EllipsisTableKeys.$ctor1(this.get_base().add('Ellipses'));
		},
		packedLayout: function MarkLayoutTempKeys$PackedLayout() {
			return new $tab_PackedLayoutKeys.$ctor1(this.get_base().add('PackedLayout'));
		}
	}, $tab_KeyPath);
	$tab_MarkLayoutTempKeys.$ctor1.prototype = $tab_MarkLayoutTempKeys.prototype;
	ss.initClass($tab_MarshalledVectors, $asm, {});
	$tab_MarshalledVectors.$ctor1.prototype = $tab_MarshalledVectors.prototype;
	ss.initClass($tab_MarshallerHandle, $asm, {
		get_typeCode: function MarshallerHandle$get_TypeCode() {
			return 18;
		}
	}, $tab_OpaqueHandle, [ss.IDisposable]);
	ss.initClass($tab_NoneTickPerHeaderInputTableKeys, $asm, {
		headerIndex: function NoneTickPerHeaderInputTableKeys$HeaderIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HeaderIndex'));
		},
		vtlBlockIndex: function NoneTickPerHeaderInputTableKeys$VtlBlockIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VtlBlockIndex'));
		}
	}, $tab_KeyPath);
	$tab_NoneTickPerHeaderInputTableKeys.$ctor1.prototype = $tab_NoneTickPerHeaderInputTableKeys.prototype;
	ss.initClass($tab_NumberMapKeys, $asm, {
		dataType: function NumberMapKeys$DataType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DataType'));
		},
		fieldType: function NumberMapKeys$FieldType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FieldType'));
		},
		domainMin: function NumberMapKeys$DomainMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainMin'));
		},
		domainMax: function NumberMapKeys$DomainMax() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainMax'));
		},
		rangeMin: function NumberMapKeys$RangeMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RangeMin'));
		},
		rangeMax: function NumberMapKeys$RangeMax() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RangeMax'));
		}
	}, $tab_KeyPath);
	$tab_NumberMapKeys.$ctor1.prototype = $tab_NumberMapKeys.prototype;
	ss.initClass($tab_PackedLayoutKeys, $asm, {
		size: function PackedLayoutKeys$Size() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Size'));
		},
		x: function PackedLayoutKeys$X() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('X'));
		},
		y: function PackedLayoutKeys$Y() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Y'));
		},
		x1: function PackedLayoutKeys$X1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('X1'));
		},
		y1: function PackedLayoutKeys$Y1() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Y1'));
		},
		hierarchyDepth: function PackedLayoutKeys$HierarchyDepth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HierarchyDepth'));
		},
		hierarchyTables: function PackedLayoutKeys$HierarchyTables() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HierarchyTables'));
		}
	}, $tab_KeyPath);
	$tab_PackedLayoutKeys.$ctor1.prototype = $tab_PackedLayoutKeys.prototype;
	ss.initClass($tab_PageIntervalKeys, $asm, {
		paneCol: function PageIntervalKeys$PaneCol() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneCol'));
		},
		paneRow: function PageIntervalKeys$PaneRow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneRow'));
		},
		paneLayer: function PageIntervalKeys$PaneLayer() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneLayer'));
		},
		panePage: function PageIntervalKeys$PanePage() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PanePage'));
		},
		startIndex: function PageIntervalKeys$StartIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('StartIndex'));
		},
		endIndex: function PageIntervalKeys$EndIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('EndIndex'));
		},
		paneKey: function PageIntervalKeys$PaneKey() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneKey'));
		}
	}, $tab_KeyPath);
	$tab_PageIntervalKeys.$ctor1.prototype = $tab_PageIntervalKeys.prototype;
	ss.initClass($tab_PageIntervalTableColumnsKeys, $asm, {
		paneCol: function PageIntervalTableColumnsKeys$PaneCol() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneCol'));
		},
		paneRow: function PageIntervalTableColumnsKeys$PaneRow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneRow'));
		},
		paneLayer: function PageIntervalTableColumnsKeys$PaneLayer() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneLayer'));
		},
		panePage: function PageIntervalTableColumnsKeys$PanePage() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PanePage'));
		},
		startIndex: function PageIntervalTableColumnsKeys$StartIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('StartIndex'));
		},
		endIndex: function PageIntervalTableColumnsKeys$EndIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('EndIndex'));
		},
		paneKey: function PageIntervalTableColumnsKeys$PaneKey() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneKey'));
		}
	}, $tab_KeyPath);
	$tab_PageIntervalTableColumnsKeys.$ctor1.prototype = $tab_PageIntervalTableColumnsKeys.prototype;
	ss.initClass($tab_PageIntervalTableKeys, $asm, {
		paneCol: function PageIntervalTableKeys$PaneCol() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneCol'));
		},
		paneRow: function PageIntervalTableKeys$PaneRow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneRow'));
		},
		paneLayer: function PageIntervalTableKeys$PaneLayer() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneLayer'));
		},
		panePage: function PageIntervalTableKeys$PanePage() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PanePage'));
		},
		startIndex: function PageIntervalTableKeys$StartIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('StartIndex'));
		},
		endIndex: function PageIntervalTableKeys$EndIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('EndIndex'));
		},
		paneKey: function PageIntervalTableKeys$PaneKey() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneKey'));
		}
	}, $tab_KeyPath);
	$tab_PageIntervalTableKeys.$ctor1.prototype = $tab_PageIntervalTableKeys.prototype;
	ss.initClass($tab_PaneCountersKeys, $asm, {
		rowCount: function PaneCountersKeys$RowCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RowCount'));
		},
		columnCount: function PaneCountersKeys$ColumnCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ColumnCount'));
		},
		layerCount: function PaneCountersKeys$LayerCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LayerCount'));
		},
		pageCount: function PaneCountersKeys$PageCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PageCount'));
		},
		paneCount: function PaneCountersKeys$PaneCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneCount'));
		}
	}, $tab_KeyPath);
	$tab_PaneCountersKeys.$ctor1.prototype = $tab_PaneCountersKeys.prototype;
	ss.initClass($tab_PaneDataStoreTable, $asm, {
		getStartIndex: function PaneDataStoreTable$GetStartIndex(paneIndex, page) {
			return this.$intervalsTable[paneIndex][page * 2];
		},
		getEndIndex: function PaneDataStoreTable$GetEndIndex(paneIndex, page) {
			return this.$intervalsTable[paneIndex][page * 2 + 1];
		},
		getPageIndices: function PaneDataStoreTable$GetPageIndices(paneIndex) {
			return this.$intervalsTable[paneIndex];
		}
	});
	ss.initClass($tab_PaneDescriptorDataKeys, $asm, {
		xIndexedAxis: function PaneDescriptorDataKeys$XIndexedAxis() {
			return new $tab_IndexedFieldNameKeys.$ctor1(this.get_base().add('XIndexedAxis'));
		},
		yIndexedAxis: function PaneDescriptorDataKeys$YIndexedAxis() {
			return new $tab_IndexedFieldNameKeys.$ctor1(this.get_base().add('YIndexedAxis'));
		},
		paneCount: function PaneDescriptorDataKeys$PaneCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneCount'));
		},
		importData: function PaneDescriptorDataKeys$ImportData() {
			return new $tab_ImportKeys.$ctor1(this.get_base().add('ImportData'));
		},
		stackedMarkAttributes: function PaneDescriptorDataKeys$StackedMarkAttributes() {
			return new $tab_StackedMarkAttributesKeys.$ctor1(this.get_base().add('StackedMarkAttributes'));
		},
		trailDescriptor: function PaneDescriptorDataKeys$TrailDescriptor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TrailDescriptor'));
		}
	}, $tab_KeyPath);
	$tab_PaneDescriptorDataKeys.$ctor1.prototype = $tab_PaneDescriptorDataKeys.prototype;
	ss.initClass($tab_PaneExtentsPixelPositionsTableKeys, $asm, {
		pxLeft: function PaneExtentsPixelPositionsTableKeys$PxLeft() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxLeft'));
		},
		pxTop: function PaneExtentsPixelPositionsTableKeys$PxTop() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxTop'));
		},
		pxRight: function PaneExtentsPixelPositionsTableKeys$PxRight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxRight'));
		},
		pxBottom: function PaneExtentsPixelPositionsTableKeys$PxBottom() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxBottom'));
		}
	}, $tab_KeyPath);
	$tab_PaneExtentsPixelPositionsTableKeys.$ctor1.prototype = $tab_PaneExtentsPixelPositionsTableKeys.prototype;
	ss.initClass($tab_PaneExtentsStaticInputTableKeys, $asm, {
		paneCol: function PaneExtentsStaticInputTableKeys$PaneCol() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneCol'));
		},
		paneRow: function PaneExtentsStaticInputTableKeys$PaneRow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneRow'));
		},
		paneLayer: function PaneExtentsStaticInputTableKeys$PaneLayer() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneLayer'));
		},
		key: function PaneExtentsStaticInputTableKeys$Key() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Key'));
		}
	}, $tab_KeyPath);
	$tab_PaneExtentsStaticInputTableKeys.$ctor1.prototype = $tab_PaneExtentsStaticInputTableKeys.prototype;
	ss.initClass($tab_PaneExtentsTableColumnsKeys, $asm, {
		paneCol: function PaneExtentsTableColumnsKeys$PaneCol() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneCol'));
		},
		paneRow: function PaneExtentsTableColumnsKeys$PaneRow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneRow'));
		},
		paneLayer: function PaneExtentsTableColumnsKeys$PaneLayer() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneLayer'));
		},
		domainLeft: function PaneExtentsTableColumnsKeys$DomainLeft() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainLeft'));
		},
		domainTop: function PaneExtentsTableColumnsKeys$DomainTop() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainTop'));
		},
		domainRight: function PaneExtentsTableColumnsKeys$DomainRight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainRight'));
		},
		domainBottom: function PaneExtentsTableColumnsKeys$DomainBottom() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainBottom'));
		},
		key: function PaneExtentsTableColumnsKeys$Key() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Key'));
		},
		mapDomainLeft: function PaneExtentsTableColumnsKeys$MapDomainLeft() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapDomainLeft'));
		},
		mapDomainTop: function PaneExtentsTableColumnsKeys$MapDomainTop() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapDomainTop'));
		},
		mapDomainRight: function PaneExtentsTableColumnsKeys$MapDomainRight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapDomainRight'));
		},
		mapDomainBottom: function PaneExtentsTableColumnsKeys$MapDomainBottom() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapDomainBottom'));
		},
		mapCenterLongitude: function PaneExtentsTableColumnsKeys$MapCenterLongitude() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapCenterLongitude'));
		},
		mapCenterLatitude: function PaneExtentsTableColumnsKeys$MapCenterLatitude() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapCenterLatitude'));
		},
		originX: function PaneExtentsTableColumnsKeys$OriginX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('OriginX'));
		},
		originY: function PaneExtentsTableColumnsKeys$OriginY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('OriginY'));
		},
		pxLeft: function PaneExtentsTableColumnsKeys$PxLeft() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxLeft'));
		},
		pxTop: function PaneExtentsTableColumnsKeys$PxTop() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxTop'));
		},
		pxRight: function PaneExtentsTableColumnsKeys$PxRight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxRight'));
		},
		pxBottom: function PaneExtentsTableColumnsKeys$PxBottom() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxBottom'));
		},
		xRangeMin: function PaneExtentsTableColumnsKeys$XRangeMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XRangeMin'));
		},
		xRangeMax: function PaneExtentsTableColumnsKeys$XRangeMax() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XRangeMax'));
		},
		yRangeMin: function PaneExtentsTableColumnsKeys$YRangeMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YRangeMin'));
		},
		yRangeMax: function PaneExtentsTableColumnsKeys$YRangeMax() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YRangeMax'));
		}
	}, $tab_KeyPath);
	$tab_PaneExtentsTableColumnsKeys.$ctor1.prototype = $tab_PaneExtentsTableColumnsKeys.prototype;
	ss.initClass($tab_PaneExtentsTableKeys, $asm, {
		paneCol: function PaneExtentsTableKeys$PaneCol() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneCol'));
		},
		paneRow: function PaneExtentsTableKeys$PaneRow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneRow'));
		},
		paneLayer: function PaneExtentsTableKeys$PaneLayer() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneLayer'));
		},
		domainLeft: function PaneExtentsTableKeys$DomainLeft() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainLeft'));
		},
		domainTop: function PaneExtentsTableKeys$DomainTop() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainTop'));
		},
		domainRight: function PaneExtentsTableKeys$DomainRight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainRight'));
		},
		domainBottom: function PaneExtentsTableKeys$DomainBottom() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DomainBottom'));
		},
		key: function PaneExtentsTableKeys$Key() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Key'));
		},
		mapDomainLeft: function PaneExtentsTableKeys$MapDomainLeft() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapDomainLeft'));
		},
		mapDomainTop: function PaneExtentsTableKeys$MapDomainTop() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapDomainTop'));
		},
		mapDomainRight: function PaneExtentsTableKeys$MapDomainRight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapDomainRight'));
		},
		mapDomainBottom: function PaneExtentsTableKeys$MapDomainBottom() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapDomainBottom'));
		},
		mapCenterLongitude: function PaneExtentsTableKeys$MapCenterLongitude() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapCenterLongitude'));
		},
		mapCenterLatitude: function PaneExtentsTableKeys$MapCenterLatitude() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MapCenterLatitude'));
		},
		originX: function PaneExtentsTableKeys$OriginX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('OriginX'));
		},
		originY: function PaneExtentsTableKeys$OriginY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('OriginY'));
		},
		pxLeft: function PaneExtentsTableKeys$PxLeft() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxLeft'));
		},
		pxTop: function PaneExtentsTableKeys$PxTop() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxTop'));
		},
		pxRight: function PaneExtentsTableKeys$PxRight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxRight'));
		},
		pxBottom: function PaneExtentsTableKeys$PxBottom() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxBottom'));
		},
		xRangeMin: function PaneExtentsTableKeys$XRangeMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XRangeMin'));
		},
		xRangeMax: function PaneExtentsTableKeys$XRangeMax() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XRangeMax'));
		},
		yRangeMin: function PaneExtentsTableKeys$YRangeMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YRangeMin'));
		},
		yRangeMax: function PaneExtentsTableKeys$YRangeMax() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YRangeMax'));
		}
	}, $tab_KeyPath);
	$tab_PaneExtentsTableKeys.$ctor1.prototype = $tab_PaneExtentsTableKeys.prototype;
	ss.initClass($tab_PaneMarksInfo, $asm, {
		get_startIndex: function PaneMarksInfo$get_StartIndex() {
			return this.$startIndex;
		},
		get_endIndex: function PaneMarksInfo$get_EndIndex() {
			return this.$endIndex;
		},
		get_pageIndices: function PaneMarksInfo$get_PageIndices() {
			return this.$pageIndices;
		},
		get_paneKey: function PaneMarksInfo$get_PaneKey() {
			return this.$paneKey;
		},
		get_paneId: function PaneMarksInfo$get_PaneId() {
			return this.$paneId;
		},
		get_paneIndex: function PaneMarksInfo$get_PaneIndex() {
			return this.$paneIndex;
		}
	});
	$tab_PaneMarksInfo.$ctor1.prototype = $tab_PaneMarksInfo.prototype;
	ss.initClass($tab_PaneMarksKeys, $asm, {
		column: function PaneMarksKeys$Column() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Column'));
		},
		row: function PaneMarksKeys$Row() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Row'));
		},
		layer: function PaneMarksKeys$Layer() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Layer'));
		},
		drawPanes: function PaneMarksKeys$DrawPanes() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DrawPanes'));
		},
		rect: function PaneMarksKeys$Rect() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Rect'));
		},
		predictionMarks: function PaneMarksKeys$PredictionMarks() {
			return new $tab_PredictionMarkKeys.$ctor1(this.get_base().add('PredictionMarks'));
		},
		xNumberMap: function PaneMarksKeys$XNumberMap() {
			return new $tab_NumberMapKeys.$ctor1(this.get_base().add('XNumberMap'));
		},
		yNumberMap: function PaneMarksKeys$YNumberMap() {
			return new $tab_NumberMapKeys.$ctor1(this.get_base().add('YNumberMap'));
		}
	}, $tab_KeyPath);
	$tab_PaneMarksKeys.$ctor1.prototype = $tab_PaneMarksKeys.prototype;
	ss.initClass($tab_PaneStylesTableKeys, $asm, {
		defaultMarkColor: function PaneStylesTableKeys$DefaultMarkColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DefaultMarkColor'));
		},
		defaultShape: function PaneStylesTableKeys$DefaultShape() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DefaultShape'));
		},
		defaultSize: function PaneStylesTableKeys$DefaultSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DefaultSize'));
		},
		key: function PaneStylesTableKeys$Key() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Key'));
		}
	}, $tab_KeyPath);
	$tab_PaneStylesTableKeys.$ctor1.prototype = $tab_PaneStylesTableKeys.prototype;
	ss.initClass($tab_PaneStylesTableUtils, $asm, {});
	ss.initClass($tab_PartitionedDataTableKeys, $asm, {
		tupleId: function PartitionedDataTableKeys$TupleId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TupleId'));
		},
		markId: function PartitionedDataTableKeys$MarkId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkId'));
		},
		paneCol: function PartitionedDataTableKeys$PaneCol() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneCol'));
		},
		paneRow: function PartitionedDataTableKeys$PaneRow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneRow'));
		},
		cellX: function PartitionedDataTableKeys$CellX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellX'));
		},
		cellY: function PartitionedDataTableKeys$CellY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellY'));
		},
		xProj: function PartitionedDataTableKeys$XProj() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XProj'));
		},
		yProj: function PartitionedDataTableKeys$YProj() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YProj'));
		},
		currentStackValue: function PartitionedDataTableKeys$CurrentStackValue() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CurrentStackValue'));
		},
		previousStackValue: function PartitionedDataTableKeys$PreviousStackValue() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PreviousStackValue'));
		},
		primitiveId: function PartitionedDataTableKeys$PrimitiveId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PrimitiveId'));
		},
		scaledStartPoint: function PartitionedDataTableKeys$ScaledStartPoint() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ScaledStartPoint'));
		},
		scaledEndPoint: function PartitionedDataTableKeys$ScaledEndPoint() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ScaledEndPoint'));
		},
		prevLowerValue: function PartitionedDataTableKeys$PrevLowerValue() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PrevLowerValue'));
		},
		nextLowerValue: function PartitionedDataTableKeys$NextLowerValue() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('NextLowerValue'));
		}
	}, $tab_KeyPath);
	$tab_PartitionedDataTableKeys.$ctor1.prototype = $tab_PartitionedDataTableKeys.prototype;
	ss.initClass($tab_PartitionResultStoreKeys, $asm, {
		paneCount: function PartitionResultStoreKeys$PaneCount() {
			return new $tab_PaneCountersKeys.$ctor1(this.get_base().add('PaneCount'));
		},
		orderedPaneKeys: function PartitionResultStoreKeys$OrderedPaneKeys() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('OrderedPaneKeys'));
		},
		paneDescriptorsData: function PartitionResultStoreKeys$PaneDescriptorsData(paneDescriptorsDataKey) {
			if (ss.startsWithString(paneDescriptorsDataKey, String.fromCharCode(39)) || ss.startsWithString(paneDescriptorsDataKey, String.fromCharCode(34))) {
				return new $tab_PaneDescriptorDataKeys.$ctor1(this.get_base().add('PaneDescriptorsData').add(paneDescriptorsDataKey));
			}
			return new $tab_PaneDescriptorDataKeys.$ctor1(this.get_base().add('PaneDescriptorsData').add(ss.formatString("'{0}'", paneDescriptorsDataKey)));
		},
		xAxis: function PartitionResultStoreKeys$XAxis() {
			return new $tab_FlattenedAxisDescriptorKeys.$ctor1(this.get_base().add('XAxis'));
		},
		yAxis: function PartitionResultStoreKeys$YAxis() {
			return new $tab_FlattenedAxisDescriptorKeys.$ctor1(this.get_base().add('YAxis'));
		},
		spatialProjector: function PartitionResultStoreKeys$SpatialProjector() {
			return new $tab_SpatialProjectorKeys.$ctor1(this.get_base().add('SpatialProjector'));
		}
	}, $tab_KeyPath);
	$tab_PartitionResultStoreKeys.$ctor1.prototype = $tab_PartitionResultStoreKeys.prototype;
	ss.initClass($tab_PerAxisBorderStylesProducerInputKeys, $asm, {
		paneDividerPenColor: function PerAxisBorderStylesProducerInputKeys$PaneDividerPenColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneDividerPenColor'));
		},
		paneDividerPenStyle: function PerAxisBorderStylesProducerInputKeys$PaneDividerPenStyle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneDividerPenStyle'));
		},
		paneDividerPenWidth: function PerAxisBorderStylesProducerInputKeys$PaneDividerPenWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneDividerPenWidth'));
		}
	}, $tab_KeyPath);
	$tab_PerAxisBorderStylesProducerInputKeys.$ctor1.prototype = $tab_PerAxisBorderStylesProducerInputKeys.prototype;
	ss.initClass($tab_PerAxisGridLineProducerInputKeys, $asm, {
		headerCount: function PerAxisGridLineProducerInputKeys$HeaderCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HeaderCount'));
		},
		lineColor: function PerAxisGridLineProducerInputKeys$LineColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LineColor'));
		},
		lineStyle: function PerAxisGridLineProducerInputKeys$LineStyle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LineStyle'));
		},
		lineWidth: function PerAxisGridLineProducerInputKeys$LineWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LineWidth'));
		},
		zeroLineColor: function PerAxisGridLineProducerInputKeys$ZeroLineColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ZeroLineColor'));
		},
		zeroLineStyle: function PerAxisGridLineProducerInputKeys$ZeroLineStyle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ZeroLineStyle'));
		},
		zeroLineWidth: function PerAxisGridLineProducerInputKeys$ZeroLineWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ZeroLineWidth'));
		}
	}, $tab_KeyPath);
	$tab_PerAxisGridLineProducerInputKeys.$ctor1.prototype = $tab_PerAxisGridLineProducerInputKeys.prototype;
	ss.initClass($tab_PerAxisGridLineProducerOutputKeys, $asm, {
		lineColor: function PerAxisGridLineProducerOutputKeys$LineColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LineColor'));
		},
		lineStyle: function PerAxisGridLineProducerOutputKeys$LineStyle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LineStyle'));
		},
		lineWidth: function PerAxisGridLineProducerOutputKeys$LineWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LineWidth'));
		},
		zeroLineColor: function PerAxisGridLineProducerOutputKeys$ZeroLineColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ZeroLineColor'));
		},
		zeroLineStyle: function PerAxisGridLineProducerOutputKeys$ZeroLineStyle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ZeroLineStyle'));
		},
		zeroLineWidth: function PerAxisGridLineProducerOutputKeys$ZeroLineWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ZeroLineWidth'));
		}
	}, $tab_KeyPath);
	$tab_PerAxisGridLineProducerOutputKeys.$ctor1.prototype = $tab_PerAxisGridLineProducerOutputKeys.prototype;
	ss.initClass($tab_PerFieldAxisStyleTableKeys, $asm, {
		fieldName: function PerFieldAxisStyleTableKeys$FieldName() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FieldName'));
		},
		isXAxis: function PerFieldAxisStyleTableKeys$IsXAxis() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsXAxis'));
		},
		bandColor: function PerFieldAxisStyleTableKeys$BandColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BandColor'));
		},
		bandLevel: function PerFieldAxisStyleTableKeys$BandLevel() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BandLevel'));
		},
		bandSize: function PerFieldAxisStyleTableKeys$BandSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BandSize'));
		},
		fillColor: function PerFieldAxisStyleTableKeys$FillColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FillColor'));
		},
		hoverColor: function PerFieldAxisStyleTableKeys$HoverColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HoverColor'));
		},
		brushedColor: function PerFieldAxisStyleTableKeys$BrushedColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('BrushedColor'));
		},
		selectedFillColor: function PerFieldAxisStyleTableKeys$SelectedFillColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SelectedFillColor'));
		},
		selectedTextColor: function PerFieldAxisStyleTableKeys$SelectedTextColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SelectedTextColor'));
		},
		selectedTickColor: function PerFieldAxisStyleTableKeys$SelectedTickColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SelectedTickColor'));
		},
		subtotalFillColor: function PerFieldAxisStyleTableKeys$SubtotalFillColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SubtotalFillColor'));
		},
		totalFillColor: function PerFieldAxisStyleTableKeys$TotalFillColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TotalFillColor'));
		},
		textColor: function PerFieldAxisStyleTableKeys$TextColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextColor'));
		},
		tickColor: function PerFieldAxisStyleTableKeys$TickColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TickColor'));
		}
	}, $tab_KeyPath);
	$tab_PerFieldAxisStyleTableKeys.$ctor1.prototype = $tab_PerFieldAxisStyleTableKeys.prototype;
	ss.initClass($tab_PerHeaderFieldDataTableKeys, $asm, {
		headerId: function PerHeaderFieldDataTableKeys$HeaderId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HeaderId'));
		},
		fieldName: function PerHeaderFieldDataTableKeys$FieldName() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FieldName'));
		},
		dataType: function PerHeaderFieldDataTableKeys$DataType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DataType'));
		}
	}, $tab_KeyPath);
	$tab_PerHeaderFieldDataTableKeys.$ctor1.prototype = $tab_PerHeaderFieldDataTableKeys.prototype;
	ss.initClass($tab_PredictionMarkKeys, $asm, {
		color: function PredictionMarkKeys$Color() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Color'));
		},
		colors: function PredictionMarkKeys$Colors() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Colors'));
		},
		defaultParamID: function PredictionMarkKeys$DefaultParamID() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DefaultParamID'));
		},
		haloColor: function PredictionMarkKeys$HaloColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HaloColor'));
		},
		lineTupleIds: function PredictionMarkKeys$LineTupleIds() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LineTupleIds'));
		},
		lowerEnds: function PredictionMarkKeys$LowerEnds() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LowerEnds'));
		},
		maxAlpha: function PredictionMarkKeys$MaxAlpha() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MaxAlpha'));
		},
		oppositeAxes: function PredictionMarkKeys$OppositeAxes() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('OppositeAxes'));
		},
		renderOnTop: function PredictionMarkKeys$RenderOnTop() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RenderOnTop'));
		},
		tupleIds: function PredictionMarkKeys$TupleIds() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TupleIds'));
		},
		type: function PredictionMarkKeys$Type() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Type'));
		},
		upperEnds: function PredictionMarkKeys$UpperEnds() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UpperEnds'));
		},
		useYAxis: function PredictionMarkKeys$UseYAxis() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UseYAxis'));
		},
		widths: function PredictionMarkKeys$Widths() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Widths'));
		},
		lineInterpolation: function PredictionMarkKeys$LineInterpolation() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LineInterpolation'));
		}
	}, $tab_KeyPath);
	$tab_PredictionMarkKeys.$ctor1.prototype = $tab_PredictionMarkKeys.prototype;
	ss.initClass($tab_QuantitativeColorEncodingInputKeys, $asm, {
		palette: function QuantitativeColorEncodingInputKeys$Palette() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Palette'));
		},
		isDiverging: function QuantitativeColorEncodingInputKeys$IsDiverging() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsDiverging'));
		},
		isReversed: function QuantitativeColorEncodingInputKeys$IsReversed() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsReversed'));
		},
		fixedMin: function QuantitativeColorEncodingInputKeys$FixedMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FixedMin'));
		},
		fixedMax: function QuantitativeColorEncodingInputKeys$FixedMax() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FixedMax'));
		},
		fixedCenter: function QuantitativeColorEncodingInputKeys$FixedCenter() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FixedCenter'));
		},
		steps: function QuantitativeColorEncodingInputKeys$Steps() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Steps'));
		},
		divergingPalette: function QuantitativeColorEncodingInputKeys$DivergingPalette() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DivergingPalette'));
		},
		reversedPalette: function QuantitativeColorEncodingInputKeys$ReversedPalette() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ReversedPalette'));
		},
		defaultPalette: function QuantitativeColorEncodingInputKeys$DefaultPalette() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DefaultPalette'));
		}
	}, $tab_KeyPath);
	$tab_QuantitativeColorEncodingInputKeys.$ctor1.prototype = $tab_QuantitativeColorEncodingInputKeys.prototype;
	ss.initClass($tab_QuantitativeSizeEncodingInputKeys, $asm, {
		fixedMin: function QuantitativeSizeEncodingInputKeys$FixedMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FixedMin'));
		},
		fixedMax: function QuantitativeSizeEncodingInputKeys$FixedMax() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FixedMax'));
		}
	}, $tab_KeyPath);
	$tab_QuantitativeSizeEncodingInputKeys.$ctor1.prototype = $tab_QuantitativeSizeEncodingInputKeys.prototype;
	ss.initClass($tab_QuantitativeTickPerHeaderInputTableKeys, $asm, {
		headerIndex: function QuantitativeTickPerHeaderInputTableKeys$HeaderIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HeaderIndex'));
		},
		vtlBlockIndex: function QuantitativeTickPerHeaderInputTableKeys$VtlBlockIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VtlBlockIndex'));
		},
		columnFormatIndex: function QuantitativeTickPerHeaderInputTableKeys$ColumnFormatIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ColumnFormatIndex'));
		},
		minSpacing: function QuantitativeTickPerHeaderInputTableKeys$MinSpacing() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinSpacing'));
		},
		originReference: function QuantitativeTickPerHeaderInputTableKeys$OriginReference() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('OriginReference'));
		},
		perpendicularLabels: function QuantitativeTickPerHeaderInputTableKeys$PerpendicularLabels() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PerpendicularLabels'));
		},
		spacingReference: function QuantitativeTickPerHeaderInputTableKeys$SpacingReference() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SpacingReference'));
		},
		targetTickSpacing: function QuantitativeTickPerHeaderInputTableKeys$TargetTickSpacing() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TargetTickSpacing'));
		},
		cellCount: function QuantitativeTickPerHeaderInputTableKeys$CellCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellCount'));
		},
		labelFontIndex: function QuantitativeTickPerHeaderInputTableKeys$LabelFontIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelFontIndex'));
		},
		labelHeight: function QuantitativeTickPerHeaderInputTableKeys$LabelHeight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelHeight'));
		},
		showMinorTicks: function QuantitativeTickPerHeaderInputTableKeys$ShowMinorTicks() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ShowMinorTicks'));
		},
		minorOriginReference: function QuantitativeTickPerHeaderInputTableKeys$MinorOriginReference() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinorOriginReference'));
		},
		minorSpacingReference: function QuantitativeTickPerHeaderInputTableKeys$MinorSpacingReference() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinorSpacingReference'));
		}
	}, $tab_KeyPath);
	$tab_QuantitativeTickPerHeaderInputTableKeys.$ctor1.prototype = $tab_QuantitativeTickPerHeaderInputTableKeys.prototype;
	ss.initClass($tab_ReferenceLineApplicablePanesTableKeys, $asm, {}, $tab_KeyPath);
	$tab_ReferenceLineApplicablePanesTableKeys.$ctor1.prototype = $tab_ReferenceLineApplicablePanesTableKeys.prototype;
	ss.initClass($tab_ReferenceLineAxisStyleTableKeys, $asm, {
		referenceLineSpecId: function ReferenceLineAxisStyleTableKeys$ReferenceLineSpecId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ReferenceLineSpecId'));
		},
		lineWidth: function ReferenceLineAxisStyleTableKeys$LineWidth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LineWidth'));
		},
		lineColor: function ReferenceLineAxisStyleTableKeys$LineColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LineColor'));
		},
		linePattern: function ReferenceLineAxisStyleTableKeys$LinePattern() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LinePattern'));
		},
		labelBackgroundColor: function ReferenceLineAxisStyleTableKeys$LabelBackgroundColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelBackgroundColor'));
		}
	}, $tab_KeyPath);
	$tab_ReferenceLineAxisStyleTableKeys.$ctor1.prototype = $tab_ReferenceLineAxisStyleTableKeys.prototype;
	ss.initClass($tab_ReferenceLineDetailsTableKeys, $asm, {
		specId: function ReferenceLineDetailsTableKeys$SpecId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SpecId'));
		},
		axisKeyPath: function ReferenceLineDetailsTableKeys$AxisKeyPath() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('AxisKeyPath'));
		},
		type: function ReferenceLineDetailsTableKeys$Type() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Type'));
		},
		formulaType: function ReferenceLineDetailsTableKeys$FormulaType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FormulaType'));
		},
		labelType: function ReferenceLineDetailsTableKeys$LabelType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelType'));
		},
		enableInstantRefline: function ReferenceLineDetailsTableKeys$EnableInstantRefline() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('EnableInstantRefline'));
		},
		calculationScope: function ReferenceLineDetailsTableKeys$CalculationScope() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CalculationScope'));
		},
		confidencePercentage: function ReferenceLineDetailsTableKeys$ConfidencePercentage() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ConfidencePercentage'));
		},
		constantValue: function ReferenceLineDetailsTableKeys$ConstantValue() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ConstantValue'));
		},
		formattedConstantValue: function ReferenceLineDetailsTableKeys$FormattedConstantValue() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FormattedConstantValue'));
		},
		tileCount: function ReferenceLineDetailsTableKeys$TileCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TileCount'));
		},
		standardDevType: function ReferenceLineDetailsTableKeys$StandardDevType() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('StandardDevType'));
		},
		fillBelow: function ReferenceLineDetailsTableKeys$FillBelow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FillBelow'));
		},
		fillAbove: function ReferenceLineDetailsTableKeys$FillAbove() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FillAbove'));
		},
		defaultLabelX: function ReferenceLineDetailsTableKeys$DefaultLabelX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DefaultLabelX'));
		},
		defaultLabelY: function ReferenceLineDetailsTableKeys$DefaultLabelY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DefaultLabelY'));
		},
		zOrder: function ReferenceLineDetailsTableKeys$ZOrder() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ZOrder'));
		},
		styleId: function ReferenceLineDetailsTableKeys$StyleId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('StyleId'));
		}
	}, $tab_KeyPath);
	$tab_ReferenceLineDetailsTableKeys.$ctor1.prototype = $tab_ReferenceLineDetailsTableKeys.prototype;
	ss.initClass($tab_ReferenceLineLabelTableKeys, $asm, {
		width: function ReferenceLineLabelTableKeys$Width() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Width'));
		},
		height: function ReferenceLineLabelTableKeys$Height() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Height'));
		},
		textRunCount: function ReferenceLineLabelTableKeys$TextRunCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunCount'));
		},
		textRunOffset: function ReferenceLineLabelTableKeys$TextRunOffset() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunOffset'));
		},
		hAligns: function ReferenceLineLabelTableKeys$HAligns() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HAligns'));
		},
		vAligns: function ReferenceLineLabelTableKeys$VAligns() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VAligns'));
		},
		pxAbove: function ReferenceLineLabelTableKeys$PxAbove() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxAbove'));
		},
		pxBelow: function ReferenceLineLabelTableKeys$PxBelow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxBelow'));
		}
	}, $tab_KeyPath);
	$tab_ReferenceLineLabelTableKeys.$ctor1.prototype = $tab_ReferenceLineLabelTableKeys.prototype;
	ss.initClass($tab_ReferenceLineLayoutElementsTableKeys, $asm, {
		specId: function ReferenceLineLayoutElementsTableKeys$SpecId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SpecId'));
		},
		styleId: function ReferenceLineLayoutElementsTableKeys$StyleId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('StyleId'));
		},
		xDomainLookup: function ReferenceLineLayoutElementsTableKeys$XDomainLookup() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XDomainLookup'));
		},
		yDomainLookup: function ReferenceLineLayoutElementsTableKeys$YDomainLookup() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YDomainLookup'));
		},
		pageNumber: function ReferenceLineLayoutElementsTableKeys$PageNumber() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PageNumber'));
		},
		paneIndex: function ReferenceLineLayoutElementsTableKeys$PaneIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PaneIndex'));
		},
		cellIndex: function ReferenceLineLayoutElementsTableKeys$CellIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellIndex'));
		},
		cellCount: function ReferenceLineLayoutElementsTableKeys$CellCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellCount'));
		},
		axisOrientation: function ReferenceLineLayoutElementsTableKeys$AxisOrientation() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('AxisOrientation'));
		},
		calculationScope: function ReferenceLineLayoutElementsTableKeys$CalculationScope() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CalculationScope'));
		},
		value: function ReferenceLineLayoutElementsTableKeys$Value() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Value'));
		},
		zOrder: function ReferenceLineLayoutElementsTableKeys$ZOrder() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ZOrder'));
		},
		fillBelow: function ReferenceLineLayoutElementsTableKeys$FillBelow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FillBelow'));
		},
		fillAbove: function ReferenceLineLayoutElementsTableKeys$FillAbove() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FillAbove'));
		},
		labelText: function ReferenceLineLayoutElementsTableKeys$LabelText() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelText'));
		}
	}, $tab_KeyPath);
	$tab_ReferenceLineLayoutElementsTableKeys.$ctor1.prototype = $tab_ReferenceLineLayoutElementsTableKeys.prototype;
	ss.initClass($tab_ReferenceLineProducerInputKeys, $asm, {
		referenceLineDetails: function ReferenceLineProducerInputKeys$ReferenceLineDetails() {
			return new $tab_ReferenceLineDetailsTableKeys.$ctor1(this.get_base().add('ReferenceLineDetails'));
		},
		xValueFormat: function ReferenceLineProducerInputKeys$XValueFormat() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XValueFormat'));
		},
		yValueFormat: function ReferenceLineProducerInputKeys$YValueFormat() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YValueFormat'));
		},
		xHeaderFolded: function ReferenceLineProducerInputKeys$XHeaderFolded() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XHeaderFolded'));
		},
		yHeaderFolded: function ReferenceLineProducerInputKeys$YHeaderFolded() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YHeaderFolded'));
		},
		xStyles: function ReferenceLineProducerInputKeys$XStyles() {
			return new $tab_ReferenceLineStylesKeys.$ctor1(this.get_base().add('XStyles'));
		},
		yStyles: function ReferenceLineProducerInputKeys$YStyles() {
			return new $tab_ReferenceLineStylesKeys.$ctor1(this.get_base().add('YStyles'));
		}
	}, $tab_KeyPath);
	$tab_ReferenceLineProducerInputKeys.$ctor1.prototype = $tab_ReferenceLineProducerInputKeys.prototype;
	ss.initClass($tab_ReferenceLineProducerOutputKeys, $asm, {
		layoutElements: function ReferenceLineProducerOutputKeys$LayoutElements() {
			return new $tab_ReferenceLineLayoutElementsTableKeys.$ctor1(this.get_base().add('LayoutElements'));
		},
		xValues: function ReferenceLineProducerOutputKeys$XValues() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XValues'));
		},
		yValues: function ReferenceLineProducerOutputKeys$YValues() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YValues'));
		},
		labels: function ReferenceLineProducerOutputKeys$Labels() {
			return new $tab_ReferenceLineLabelTableKeys.$ctor1(this.get_base().add('Labels'));
		},
		details: function ReferenceLineProducerOutputKeys$Details() {
			return new $tab_ReferenceLineDetailsTableKeys.$ctor1(this.get_base().add('Details'));
		},
		textRun: function ReferenceLineProducerOutputKeys$TextRun() {
			return new $tab_TextRunTableKeys.$ctor1(this.get_base().add('TextRun'));
		},
		xStyles: function ReferenceLineProducerOutputKeys$XStyles() {
			return new $tab_ReferenceLineStylesKeys.$ctor1(this.get_base().add('XStyles'));
		},
		yStyles: function ReferenceLineProducerOutputKeys$YStyles() {
			return new $tab_ReferenceLineStylesKeys.$ctor1(this.get_base().add('YStyles'));
		}
	}, $tab_KeyPath);
	$tab_ReferenceLineProducerOutputKeys.$ctor1.prototype = $tab_ReferenceLineProducerOutputKeys.prototype;
	ss.initClass($tab_ReferenceLineStylesKeys, $asm, {
		axisStyles: function ReferenceLineStylesKeys$AxisStyles() {
			return new $tab_ReferenceLineAxisStyleTableKeys.$ctor1(this.get_base().add('AxisStyles'));
		},
		textStyles: function ReferenceLineStylesKeys$TextStyles() {
			return new $tab_TextStyleTableKeys.$ctor1(this.get_base().add('TextStyles'));
		},
		fillColors: function ReferenceLineStylesKeys$FillColors() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FillColors'));
		}
	}, $tab_KeyPath);
	$tab_ReferenceLineStylesKeys.$ctor1.prototype = $tab_ReferenceLineStylesKeys.prototype;
	ss.initClass($tab_ReferenceLineTotalTableMapDataKeys, $asm, {
		hasTotalTable: function ReferenceLineTotalTableMapDataKeys$HasTotalTable() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasTotalTable'));
		},
		referenceLineTotalTableMap: function ReferenceLineTotalTableMapDataKeys$ReferenceLineTotalTableMap() {
			return new $tab_ReferenceLineTotalTableMapKeys.$ctor1(this.get_base().add('ReferenceLineTotalTableMap'));
		}
	}, $tab_KeyPath);
	$tab_ReferenceLineTotalTableMapDataKeys.$ctor1.prototype = $tab_ReferenceLineTotalTableMapDataKeys.prototype;
	ss.initClass($tab_ReferenceLineTotalTableMapKeys, $asm, {
		perTable: function ReferenceLineTotalTableMapKeys$PerTable() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PerTable'));
		},
		perPane: function ReferenceLineTotalTableMapKeys$PerPane() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PerPane'));
		},
		perCell: function ReferenceLineTotalTableMapKeys$PerCell() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PerCell'));
		}
	}, $tab_KeyPath);
	$tab_ReferenceLineTotalTableMapKeys.$ctor1.prototype = $tab_ReferenceLineTotalTableMapKeys.prototype;
	ss.initClass($tab_RefLineExtentsKeys, $asm, {
		index: function RefLineExtentsKeys$Index() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Index'));
		},
		min: function RefLineExtentsKeys$Min() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Min'));
		},
		max: function RefLineExtentsKeys$Max() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Max'));
		},
		labelIndex: function RefLineExtentsKeys$LabelIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelIndex'));
		},
		value: function RefLineExtentsKeys$Value() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Value'));
		},
		pxAbove: function RefLineExtentsKeys$PxAbove() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxAbove'));
		},
		pxBelow: function RefLineExtentsKeys$PxBelow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PxBelow'));
		}
	}, $tab_KeyPath);
	$tab_RefLineExtentsKeys.$ctor1.prototype = $tab_RefLineExtentsKeys.prototype;
	ss.initClass($tab_RenderingInputStoreKeys, $asm, {
		activePages: function RenderingInputStoreKeys$ActivePages() {
			return new $tab_ActivePagesKeys.$ctor1(this.get_base().add('ActivePages'));
		},
		annexedData: function RenderingInputStoreKeys$AnnexedData() {
			return new $tab_AnnexedDataKeys.$ctor1(this.get_base().add('AnnexedData'));
		},
		axisOutput: function RenderingInputStoreKeys$AxisOutput() {
			return new $tab_AxisProducerOutputKeys.$ctor1(this.get_base().add('AxisOutput'));
		},
		borderStyles: function RenderingInputStoreKeys$BorderStyles() {
			return new $tab_BorderStylesProducerInputKeys.$ctor1(this.get_base().add('BorderStyles'));
		},
		gridLines: function RenderingInputStoreKeys$GridLines() {
			return new $tab_GridLineProducerOutputKeys.$ctor1(this.get_base().add('GridLines'));
		},
		heatmap: function RenderingInputStoreKeys$Heatmap() {
			return new $tab_HeatmapProducerOutputKeys.$ctor1(this.get_base().add('Heatmap'));
		},
		pdMarks: function RenderingInputStoreKeys$PDMarks(pDMarksKey) {
			if (ss.startsWithString(pDMarksKey, String.fromCharCode(39)) || ss.startsWithString(pDMarksKey, String.fromCharCode(34))) {
				return new $tab_MarkLayoutOutputKeys.$ctor1(this.get_base().add('PDMarks').add(pDMarksKey));
			}
			return new $tab_MarkLayoutOutputKeys.$ctor1(this.get_base().add('PDMarks').add(ss.formatString("'{0}'", pDMarksKey)));
		},
		pageIntervalTable: function RenderingInputStoreKeys$PageIntervalTable() {
			return new $tab_PageIntervalTableKeys.$ctor1(this.get_base().add('PageIntervalTable'));
		},
		paneCount: function RenderingInputStoreKeys$PaneCount() {
			return new $tab_PaneCountersKeys.$ctor1(this.get_base().add('PaneCount'));
		},
		paneStyles: function RenderingInputStoreKeys$PaneStyles() {
			return new $tab_PaneStylesTableKeys.$ctor1(this.get_base().add('PaneStyles'));
		},
		xAxisDescriptor: function RenderingInputStoreKeys$XAxisDescriptor() {
			return new $tab_FlattenedAxisDescriptorKeys.$ctor1(this.get_base().add('XAxisDescriptor'));
		},
		firstPassRefLines: function RenderingInputStoreKeys$FirstPassRefLines(firstPassRefLinesKey) {
			if (ss.startsWithString(firstPassRefLinesKey, String.fromCharCode(39)) || ss.startsWithString(firstPassRefLinesKey, String.fromCharCode(34))) {
				return new $tab_ReferenceLineProducerOutputKeys.$ctor1(this.get_base().add('FirstPassRefLines').add(firstPassRefLinesKey));
			}
			return new $tab_ReferenceLineProducerOutputKeys.$ctor1(this.get_base().add('FirstPassRefLines').add(ss.formatString("'{0}'", firstPassRefLinesKey)));
		},
		visualLayout: function RenderingInputStoreKeys$VisualLayout() {
			return new $tab_VisualLayoutResultsKeys.$ctor1(this.get_base().add('VisualLayout'));
		},
		refLines: function RenderingInputStoreKeys$RefLines(refLinesKey) {
			if (ss.startsWithString(refLinesKey, String.fromCharCode(39)) || ss.startsWithString(refLinesKey, String.fromCharCode(34))) {
				return new $tab_ReferenceLineProducerOutputKeys.$ctor1(this.get_base().add('RefLines').add(refLinesKey));
			}
			return new $tab_ReferenceLineProducerOutputKeys.$ctor1(this.get_base().add('RefLines').add(ss.formatString("'{0}'", refLinesKey)));
		},
		instantRefLines: function RenderingInputStoreKeys$InstantRefLines(instantRefLinesKey) {
			if (ss.startsWithString(instantRefLinesKey, String.fromCharCode(39)) || ss.startsWithString(instantRefLinesKey, String.fromCharCode(34))) {
				return new $tab_ReferenceLineProducerOutputKeys.$ctor1(this.get_base().add('InstantRefLines').add(instantRefLinesKey));
			}
			return new $tab_ReferenceLineProducerOutputKeys.$ctor1(this.get_base().add('InstantRefLines').add(ss.formatString("'{0}'", instantRefLinesKey)));
		},
		supportedIncrementalUpdates: function RenderingInputStoreKeys$SupportedIncrementalUpdates() {
			return new $tab_IncrementalUpdateInputKeys.$ctor1(this.get_base().add('SupportedIncrementalUpdates'));
		},
		tickPlacement: function RenderingInputStoreKeys$TickPlacement() {
			return new $tab_TickProducerOutputKeys.$ctor1(this.get_base().add('TickPlacement'));
		},
		viewpoint: function RenderingInputStoreKeys$Viewpoint() {
			return new $tab_ViewpointKeys.$ctor1(this.get_base().add('Viewpoint'));
		}
	}, $tab_KeyPath);
	$tab_RenderingInputStoreKeys.$ctor1.prototype = $tab_RenderingInputStoreKeys.prototype;
	ss.initClass($tab_RuePacker, $asm, {
		pack: function RuePacker$Pack() {
			this.$view.setInt32(0, this.$recordCount, true);
			return this.$packed.subarray(0, this.$currentOffset);
		},
		addColorArray: function RuePacker$AddColorArray(key, colors) {
			this.$startArray(key, 37, colors.length);
			for (var $t1 = 0; $t1 < colors.length; $t1++) {
				var c = colors[$t1];
				this.$insertInt32(c);
			}
		},
		addReal64Array: function RuePacker$AddReal64Array(key, values) {
			this.$startArray(key, 36, values.length);
			for (var $t1 = 0; $t1 < values.length; $t1++) {
				var v = values[$t1];
				this.$insertDouble(v);
			}
		},
		addInt32Array: function RuePacker$AddInt32Array(key, values) {
			this.$startArray(key, 33, values.length);
			for (var $t1 = 0; $t1 < values.length; $t1++) {
				var v = values[$t1];
				this.$insertInt32(v);
			}
		},
		addInt64Array: function RuePacker$AddInt64Array(key, values) {
			this.$startArray(key, 34, ss.Int32.div(values.length, 2));
			for (var $t1 = 0; $t1 < values.length; $t1++) {
				var v = values[$t1];
				this.$insertInt32(v);
			}
		},
		addInt32: function RuePacker$AddInt32(key, val) {
			this.$recordCount++;
			this.$insertString(key);
			this.$insertTypeID(33);
			this.$insertInt32(val);
		},
		startTable: function RuePacker$StartTable(key, count) {
			this.$recordCount++;
			this.$recordCount -= count;
			this.$insertString(key);
			this.$insertTypeID(20);
			this.$insertInt32(count);
		},
		$startArray: function RuePacker$StartArray(key, type, length) {
			this.$recordCount++;
			this.$insertString(key);
			this.$insertTypeID(16);
			this.$insertTypeID(type);
			this.$insertInt32(length);
		},
		$insertString: function RuePacker$InsertString(value) {
			var encoded = $tab_Utf8TextEncoder.encode(value);
			var stringSpace = encoded.byteLength + 1;
			this.$insertInt32(stringSpace);
			this.$ensureSpace(stringSpace);
			this.$packed.set(encoded, this.$currentOffset);
			this.$currentOffset += stringSpace;
		},
		$insertInt32: function RuePacker$InsertInt32(value) {
			this.$align(4);
			this.$ensureSpace(4);
			this.$view.setInt32(this.$currentOffset, value, true);
			this.$currentOffset += 4;
		},
		$insertTypeID: function RuePacker$InsertTypeID(id) {
			this.$insertInt32(id);
		},
		$insertDouble: function RuePacker$InsertDouble(value) {
			this.$align(8);
			this.$ensureSpace(8);
			this.$view.setFloat64(this.$currentOffset, value, true);
			this.$currentOffset += 8;
		},
		$align: function RuePacker$Align(size) {
			var adjust = (size - this.$currentOffset % size) % size;
			this.$ensureSpace(adjust);
			this.$currentOffset += adjust;
		},
		$ensureSpace: function RuePacker$EnsureSpace(length) {
			var totalLength = this.$currentOffset + length;
			if (totalLength >= this.$packed.byteLength) {
				var newLength = Math.max(this.$packed.byteLength * 2, totalLength + 1);
				var newBuffer = new Uint8Array(newLength);
				newBuffer.set(this.$packed);
				this.$packed = newBuffer;
				this.$view = new DataView(this.$packed.buffer);
			}
		}
	});
	ss.initClass($tab_RuntimeData, $asm, {
		get_finalDataStore: function RuntimeData$get_FinalDataStore() {
			return this.$finalDataStore;
		},
		get_annexedData: function RuntimeData$get_AnnexedData() {
			return this.$annexedData;
		},
		get_geometries: function RuntimeData$get_Geometries() {
			return this.$geometries;
		},
		get_paneStoreTable: function RuntimeData$get_PaneStoreTable() {
			if (tab.MiscUtil.isNullOrEmpty$2(this.$paneStoreTable)) {
				this.$paneStoreTable = new $tab_PaneDataStoreTable(this.get_finalDataStore().PageIntervalTable, this.get_finalDataStore().PaneCount);
			}
			return this.$paneStoreTable;
		},
		get_labelsPaneStoreTable: function RuntimeData$get_LabelsPaneStoreTable() {
			if (tab.MiscUtil.isNullOrEmpty$2(this.$labelsPaneStoreTable)) {
				this.$labelsPaneStoreTable = new $tab_PaneDataStoreTable(this.get_annexedData().LabelStore.PageIntervalTable, this.get_finalDataStore().PaneCount);
			}
			return this.$labelsPaneStoreTable;
		},
		get_drawFirsts: function RuntimeData$get_DrawFirsts() {
			if (tab.MiscUtil.isNullOrEmpty$2(this.$drawFirsts) && !tab.MiscUtil.isNullOrEmpty$2(this.get_annexedData())) {
				this.$drawFirsts = $tab_RuntimeData.$convertDrawPanesToVisualLists(this.get_annexedData().DrawFirsts);
			}
			return this.$drawFirsts;
		},
		get_drawLasts: function RuntimeData$get_DrawLasts() {
			if (tab.MiscUtil.isNullOrEmpty$2(this.$drawLasts) && !tab.MiscUtil.isNullOrEmpty$2(this.get_annexedData())) {
				this.$drawLasts = $tab_RuntimeData.$convertDrawPanesToVisualLists(this.get_annexedData().DrawLasts);
			}
			return this.$drawLasts;
		},
		get_panes: function RuntimeData$get_Panes() {
			if (tab.MiscUtil.isNullOrEmpty(this.$panes)) {
				if (tab.FeatureFlags.isEnabled('MarkAnimation')) {
					this.$copyViewpointPanePixelRectsToAnnexedDataPanes();
				}
				if (tab.MiscUtil.isNullOrEmpty$2(this.get_annexedData()) || tab.MiscUtil.isNullOrEmpty(this.get_annexedData().Panes)) {
					return [];
				}
				var panes = this.get_annexedData().Panes;
				var paneList = [];
				for (var $t1 = 0; $t1 < panes.length; $t1++) {
					var pane = panes[$t1];
					var ppm = {};
					var drawList = [];
					for (var $t2 = 0; $t2 < pane.DrawPanes.length; $t2++) {
						var array = pane.DrawPanes[$t2];
						if (array[1].length > 0) {
							drawList.push(JSON.parse($tab_Utf8TextDecoder.decode(array[1])));
						}
					}
					ppm.drawPane = Array.prototype.slice.call(drawList);
					ppm.rowAndColumnAndLayer = { columnIndex: pane.Column, rowIndex: pane.Row };
					ppm.paneRect = { h: pane.Rect[3], w: pane.Rect[2], x: pane.Rect[0], y: pane.Rect[1] };
					paneList.push(ppm);
				}
				this.$panes = paneList;
			}
			return this.$panes;
		},
		safeFetchMarkPanes: function RuntimeData$SafeFetchMarkPanes() {
			var panes = [];
			if (!ss.isNullOrUndefined(this.get_annexedData().Panes)) {
				panes = this.get_annexedData().Panes;
			}
			return panes;
		},
		invalidatePanesCache: function RuntimeData$InvalidatePanesCache() {
			this.$panes = [];
		},
		$copyViewpointPanePixelRectsToAnnexedDataPanes: function RuntimeData$CopyViewpointPanePixelRectsToAnnexedDataPanes() {
			if (tab.MiscUtil.isNullOrEmpty$2(this.get_annexedData()) || tab.MiscUtil.isNullOrEmpty(this.get_annexedData().Panes)) {
				return;
			}
			var panes = this.get_annexedData().Panes;
			if (tab.MiscUtil.isNullOrEmpty$2(this.$finalDataStore) || tab.MiscUtil.isNullOrEmpty$2(this.$finalDataStore.Viewpoint) || tab.MiscUtil.isNullOrEmpty$2(this.$finalDataStore.Viewpoint.PerPaneExtents)) {
				return;
			}
			var perPaneExtents = this.$finalDataStore.Viewpoint.PerPaneExtents;
			if (tab.MiscUtil.isNullOrEmpty(perPaneExtents.pane_px_left) || tab.MiscUtil.isNullOrEmpty(perPaneExtents.pane_px_right) || tab.MiscUtil.isNullOrEmpty(perPaneExtents.pane_px_bottom) || tab.MiscUtil.isNullOrEmpty(perPaneExtents.pane_px_top)) {
				return;
			}
			var numPanes = panes.length;
			if (perPaneExtents.pane_px_left.length !== numPanes || perPaneExtents.pane_px_right.length !== numPanes || perPaneExtents.pane_px_bottom.length !== numPanes || perPaneExtents.pane_px_top.length !== numPanes) {
				return;
			}
			var paneList = [];
			var curPaneIndex = 0;
			for (var $t1 = 0; $t1 < panes.length; $t1++) {
				var pane = panes[$t1];
				var left = perPaneExtents.pane_px_left[curPaneIndex];
				var top = perPaneExtents.pane_px_top[curPaneIndex];
				panes[curPaneIndex].Rect[0] = left;
				panes[curPaneIndex].Rect[1] = top;
				panes[curPaneIndex].Rect[2] = perPaneExtents.pane_px_right[curPaneIndex] - left;
				panes[curPaneIndex].Rect[3] = perPaneExtents.pane_px_bottom[curPaneIndex] - top;
				curPaneIndex++;
			}
		},
		update: function RuntimeData$Update(localStore) {
			this.$finalDataStore = this.$fixLocalStore(localStore);
			this.$paneStoreTable = null;
			this.$labelsPaneStoreTable = null;
		},
		$parseFinalDataStore: function RuntimeData$ParseFinalDataStore() {
			if (ss.isNullOrUndefined(this.$finalStore) || this.$finalStore.length === 0) {
				this.$finalDataStore = {};
				return;
			}
			if (this.$finalStore.charCodeAt(0) === 123) {
				{
					var mc = tabBootstrap.MetricsController.createContext('RTCONV'.toString(), 16, null);
					try {
						this.$finalDataStore = JSON.parse(this.$finalStore);
					}
					finally {
						if (ss.isValue(mc)) {
							mc.dispose();
						}
					}
				}
			}
			else {
				this.$finalDataStore = $tab_JsHeapMarshaller.unmarshallHex(this.$finalStore);
			}
			if (tab.ObjectCoverage.shouldTrack('runtime-datastore')) {
				this.$finalDataStore = (new tab.ObjectCoverage('runtime-datastore')).instrument(this.get_finalDataStore(), '');
			}
		},
		$cacheAnnexedData: function RuntimeData$CacheAnnexedData() {
			if (!tab.MiscUtil.isNullOrEmpty$2(this.$finalDataStore.AnnexedData)) {
				this.$annexedData = this.$finalDataStore.AnnexedData;
			}
		},
		$cacheGeometries: function RuntimeData$CacheGeometries() {
			var pdMarks = this.$finalDataStore.PDMarks;
			var $t1 = _.keys(pdMarks);
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var pdMarksKey = $t1[$t2];
				var markLayoutOutput = pdMarks[pdMarksKey];
				var geometries = markLayoutOutput.MarkLayoutData.geoTable;
				if (!ss.isValue(geometries)) {
					continue;
				}
				this.$geometries[pdMarksKey] = geometries;
			}
		},
		$fixLocalStore: function RuntimeData$FixLocalStore(localStore) {
			localStore.TickPlacement = this.$finalDataStore.TickPlacement;
			localStore.RefLines = this.$finalDataStore.RefLines;
			this.$removeLabels(localStore.InstantRefLines);
			return localStore;
		},
		$removeLabels: function RuntimeData$RemoveLabels(refLines) {
			if (ss.isValue(refLines)) {
				var $t1 = new ss.ObjectEnumerator(refLines);
				try {
					while ($t1.moveNext()) {
						var kv = $t1.current();
						kv.value.TextRun = null;
					}
				}
				finally {
					$t1.dispose();
				}
			}
		}
	});
	ss.initClass($tab_RuntimeFormattingHooks, $asm, {});
	ss.initClass($tab_RuntimeHandles, $asm, {
		get_VM: function RuntimeHandles$get_VM() {
			return this.$1$VMField;
		},
		set_VM: function RuntimeHandles$set_VM(value) {
			this.$1$VMField = value;
		},
		get_initialStore: function RuntimeHandles$get_InitialStore() {
			return this.$1$InitialStoreField;
		},
		set_initialStore: function RuntimeHandles$set_InitialStore(value) {
			this.$1$InitialStoreField = value;
		},
		get_finalStore: function RuntimeHandles$get_FinalStore() {
			return this.$1$FinalStoreField;
		},
		set_finalStore: function RuntimeHandles$set_FinalStore(value) {
			this.$1$FinalStoreField = value;
		}
	});
	ss.initClass($tab_RuntimeTextMeasurementHooks, $asm, {});
	ss.initClass($tab_RuntimeUtil, $asm, {});
	ss.initClass($tab_RuntimeWebHost, $asm, {
		executeVM: function RuntimeWebHost$ExecuteVM(vmHandle) {
			var deferred = $.Deferred();
			var callPromise = this.$callMethod('ExecuteVM', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', vmHandle.handleValue)]);
			callPromise.done(ss.mkdel(this, function(callResult) {
				var result = new $tab_DatastoreHandle(callResult.value, ss.mkdel(this, function(handleValue) {
					this.$callMethod('HandleManagerReleaseDatastoreHandle', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('void', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', handleValue)]);
				}));
				deferred.resolve(result);
			}));
			return deferred.promise();
		},
		buildVMHex: function RuntimeWebHost$BuildVMHex(vtlAsHex, dsHandle) {
			var deferred = $.Deferred();
			var callPromise = this.$callMethod('BuildVM', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('hex', vtlAsHex), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', dsHandle.handleValue)]);
			callPromise.done(ss.mkdel(this, function(callResult) {
				var result = new $tab_VMHandle(callResult.value, ss.mkdel(this, function(handleValue) {
					this.$callMethod('HandleManagerReleaseVMHandle', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('void', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', handleValue)]);
				}));
				deferred.resolve(result);
			}));
			return deferred.promise();
		},
		loadBinaryDatastoreHex: function RuntimeWebHost$LoadBinaryDatastoreHex(bufferAsHex) {
			var deferred = $.Deferred();
			var callPromise = this.$callMethod('LoadBinaryDatastore', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('hex', bufferAsHex)]);
			callPromise.done(ss.mkdel(this, function(callResult) {
				var result = new $tab_DatastoreHandle(callResult.value, ss.mkdel(this, function(handleValue) {
					this.$callMethod('HandleManagerReleaseDatastoreHandle', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('void', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', handleValue)]);
				}));
				deferred.resolve(result);
			}));
			return deferred.promise();
		},
		initializeRuntime: function RuntimeWebHost$InitializeRuntime() {
			var deferred = $.Deferred();
			var callPromise = this.$callMethod('InitializeRuntime', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('void', '')]);
			callPromise.done(function(callResult) {
				deferred.resolve();
			});
			return deferred.promise();
		},
		marshallDatastore: function RuntimeWebHost$MarshallDatastore(dsHandle) {
			var deferred = $.Deferred();
			var callPromise = this.$callMethod('MarshallDatastore', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('hex', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', dsHandle.handleValue)]);
			callPromise.done(function(callResult) {
				var result = $tab_JsHeapMarshaller.unmarshallHex(callResult.value);
				deferred.resolve(result);
			});
			return deferred.promise();
		},
		marshallDatastoreSubKeyHex: function RuntimeWebHost$MarshallDatastoreSubKeyHex(dsHandle, subKeyAsHex) {
			var deferred = $.Deferred();
			var callPromise = this.$callMethod('MarshallDatastoreSubKey', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('hex', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', dsHandle.handleValue), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('hex', subKeyAsHex)]);
			callPromise.done(function(callResult) {
				var result = $tab_JsHeapMarshaller.unmarshallHex(callResult.value);
				deferred.resolve(result);
			});
			return deferred.promise();
		},
		loadAndApplyDataStoreUpdaterHex: function RuntimeWebHost$LoadAndApplyDataStoreUpdaterHex(bufferAsHex, vmHandle) {
			var deferred = $.Deferred();
			var callPromise = this.$callMethod('LoadAndApplyDataStoreUpdater', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('hex', bufferAsHex), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', vmHandle.handleValue)]);
			callPromise.done(ss.mkdel(this, function(callResult) {
				var result = new $tab_DatastoreHandle(callResult.value, ss.mkdel(this, function(handleValue) {
					this.$callMethod('HandleManagerReleaseDatastoreHandle', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('void', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', handleValue)]);
				}));
				deferred.resolve(result);
			}));
			return deferred.promise();
		},
		localPanCommand: function RuntimeWebHost$LocalPanCommand(vmHandle, initialDataStoreHandle, dataStoreHandle, deltaX, deltaY) {
			var deferred = $.Deferred();
			var callPromise = this.$callMethod('LocalPanCommand', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', vmHandle.handleValue), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', initialDataStoreHandle.handleValue), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', dataStoreHandle.handleValue), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('double', deltaX), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('double', deltaY)]);
			callPromise.done(ss.mkdel(this, function(callResult) {
				var result = new $tab_DatastoreHandle(callResult.value, ss.mkdel(this, function(handleValue) {
					this.$callMethod('HandleManagerReleaseDatastoreHandle', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('void', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', handleValue)]);
				}));
				deferred.resolve(result);
			}));
			return deferred.promise();
		},
		localZoomCommand: function RuntimeWebHost$LocalZoomCommand(vmHandle, initialDataStoreHandle, dataStoreHandle, x, y, w, h, isZoomIn) {
			var deferred = $.Deferred();
			var callPromise = this.$callMethod('LocalZoomCommand', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', vmHandle.handleValue), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', initialDataStoreHandle.handleValue), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', dataStoreHandle.handleValue), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', x), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', y), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', w), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', h), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('bool', isZoomIn)]);
			callPromise.done(ss.mkdel(this, function(callResult) {
				var result = new $tab_DatastoreHandle(callResult.value, ss.mkdel(this, function(handleValue) {
					this.$callMethod('HandleManagerReleaseDatastoreHandle', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('void', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', handleValue)]);
				}));
				deferred.resolve(result);
			}));
			return deferred.promise();
		},
		localZoomFactorCommand: function RuntimeWebHost$LocalZoomFactorCommand(vmHandle, initialDataStoreHandle, dataStoreHandle, x, y, zoomFactor) {
			var deferred = $.Deferred();
			var callPromise = this.$callMethod('LocalZoomFactorCommand', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', vmHandle.handleValue), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', initialDataStoreHandle.handleValue), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', dataStoreHandle.handleValue), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', x), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', y), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('double', zoomFactor)]);
			callPromise.done(ss.mkdel(this, function(callResult) {
				var result = new $tab_DatastoreHandle(callResult.value, ss.mkdel(this, function(handleValue) {
					this.$callMethod('HandleManagerReleaseDatastoreHandle', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('void', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', handleValue)]);
				}));
				deferred.resolve(result);
			}));
			return deferred.promise();
		},
		rueUpdateCommandHex: function RuntimeWebHost$RueUpdateCommandHex(vmHandle, rueUpdateAsHex) {
			var deferred = $.Deferred();
			var callPromise = this.$callMethod('RueUpdateCommand', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', vmHandle.handleValue), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('hex', rueUpdateAsHex)]);
			callPromise.done(ss.mkdel(this, function(callResult) {
				var result = new $tab_DatastoreHandle(callResult.value, ss.mkdel(this, function(handleValue) {
					this.$callMethod('HandleManagerReleaseDatastoreHandle', [$tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('void', ''), $tab_$RuntimeWebHost$RuntimeWebHostArg.$ctor('int', handleValue)]);
				}));
				deferred.resolve(result);
			}));
			return deferred.promise();
		},
		$callMethod: function RuntimeWebHost$CallMethod(methodName, args) {
			var deferred = $.Deferred();
			var argsSerialized = [];
			for (var $t1 = 0; $t1 < args.length; $t1++) {
				var a = args[$t1];
				argsSerialized.push(a);
			}
			var xhr = new XMLHttpRequest();
			xhr.open('POST', this.$hostUrl + '/callMethod/' + methodName);
			xhr.setRequestHeader('Accept', 'text/javascript');
			xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
			xhr.onloadend = function(e) {
				deferred.resolve(JSON.parse(e.target.responseText));
			};
			xhr.onerror = function(e1) {
				deferred.reject(e1);
			};
			xhr.send(JSON.stringify(argsSerialized));
			return deferred;
		},
		$restartServer: function RuntimeWebHost$RestartServer() {
			var xhr = new XMLHttpRequest();
			xhr.open('POST', this.$hostUrl + '/restart', false);
			xhr.setRequestHeader('Accept', 'text/javascript');
			xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
			xhr.send(JSON.stringify('restart'));
		}
	}, null, [$tab_IRuntimeWebModule]);
	ss.initClass($tab_RuntimeWebHostSupport, $asm, {
		byteBufferToHeap: function RuntimeWebHostSupport$ByteBufferToHeap(buffer) {
			var response = {};
			response.type = 'bytebuffer';
			response.value = $tab_HexEncoder.encodeBufferToHex(new Uint8Array(buffer));
			return response;
		},
		paramToByteBuffer: function RuntimeWebHostSupport$ParamToByteBuffer(param) {
			var hex = param['value'];
			var unpacked = new Uint8Array($tab_HexHeapDecoder.decodedLength(hex));
			$tab_HexHeapDecoder.run(0, unpacked, hex);
			return unpacked.buffer;
		},
		paramToString: function RuntimeWebHostSupport$ParamToString(param) {
			return param['value'];
		},
		stringToHeap: function RuntimeWebHostSupport$StringToHeap(str) {
			var response = {};
			response.type = 'string';
			response.value = str;
			return response;
		}
	}, null, [$tab_IRWALSupport]);
	ss.initClass($tab_RuntimeWebModule, $asm, {});
	ss.initClass($tab_SceneMarginLayoutTableKeys, $asm, {
		headerDepth: function SceneMarginLayoutTableKeys$HeaderDepth() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HeaderDepth'));
		},
		isAxis: function SceneMarginLayoutTableKeys$IsAxis() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsAxis'));
		},
		sceneMarginLocation: function SceneMarginLayoutTableKeys$SceneMarginLocation() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SceneMarginLocation'));
		},
		pixelOffset: function SceneMarginLayoutTableKeys$PixelOffset() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PixelOffset'));
		},
		pixelSize: function SceneMarginLayoutTableKeys$PixelSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('PixelSize'));
		}
	}, $tab_KeyPath);
	$tab_SceneMarginLayoutTableKeys.$ctor1.prototype = $tab_SceneMarginLayoutTableKeys.prototype;
	ss.initClass($tab_SceneMarginLeafElementLayoutsKeys, $asm, {
		leftLeafElementLayout: function SceneMarginLeafElementLayoutsKeys$LeftLeafElementLayout() {
			return new $tab_SceneMarginLeafElementLayoutTableKeys.$ctor1(this.get_base().add('LeftLeafElementLayout'));
		},
		rightLeafElementLayout: function SceneMarginLeafElementLayoutsKeys$RightLeafElementLayout() {
			return new $tab_SceneMarginLeafElementLayoutTableKeys.$ctor1(this.get_base().add('RightLeafElementLayout'));
		},
		topLeafElementLayout: function SceneMarginLeafElementLayoutsKeys$TopLeafElementLayout() {
			return new $tab_SceneMarginLeafElementLayoutTableKeys.$ctor1(this.get_base().add('TopLeafElementLayout'));
		},
		bottomLeafElementLayout: function SceneMarginLeafElementLayoutsKeys$BottomLeafElementLayout() {
			return new $tab_SceneMarginLeafElementLayoutTableKeys.$ctor1(this.get_base().add('BottomLeafElementLayout'));
		}
	}, $tab_KeyPath);
	$tab_SceneMarginLeafElementLayoutsKeys.$ctor1.prototype = $tab_SceneMarginLeafElementLayoutsKeys.prototype;
	ss.initClass($tab_SceneMarginLeafElementLayoutTableKeys, $asm, {
		headerIndex: function SceneMarginLeafElementLayoutTableKeys$HeaderIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HeaderIndex'));
		},
		alongAxisPixelOffset: function SceneMarginLeafElementLayoutTableKeys$AlongAxisPixelOffset() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('AlongAxisPixelOffset'));
		},
		alongAxisPixelSize: function SceneMarginLeafElementLayoutTableKeys$AlongAxisPixelSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('AlongAxisPixelSize'));
		}
	}, $tab_KeyPath);
	$tab_SceneMarginLeafElementLayoutTableKeys.$ctor1.prototype = $tab_SceneMarginLeafElementLayoutTableKeys.prototype;
	ss.initClass($tab_SelectionProducerInputKeys, $asm, {
		tupleSelection: function SelectionProducerInputKeys$TupleSelection() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TupleSelection'));
		}
	}, $tab_KeyPath);
	$tab_SelectionProducerInputKeys.$ctor1.prototype = $tab_SelectionProducerInputKeys.prototype;
	ss.initClass($tab_SetLabelFormatsOutputKeys, $asm, {
		formatters: function SetLabelFormatsOutputKeys$Formatters() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Formatters'));
		},
		formatterIndex: function SetLabelFormatsOutputKeys$FormatterIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FormatterIndex'));
		}
	}, $tab_KeyPath);
	$tab_SetLabelFormatsOutputKeys.$ctor1.prototype = $tab_SetLabelFormatsOutputKeys.prototype;
	ss.initClass($tab_SizeEncodingOutputKeys, $asm, {
		size: function SizeEncodingOutputKeys$Size() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Size'));
		},
		unscaledSize: function SizeEncodingOutputKeys$UnscaledSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UnscaledSize'));
		},
		width: function SizeEncodingOutputKeys$Width() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Width'));
		},
		height: function SizeEncodingOutputKeys$Height() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Height'));
		},
		hasPerMarkEncoding: function SizeEncodingOutputKeys$HasPerMarkEncoding() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasPerMarkEncoding'));
		}
	}, $tab_KeyPath);
	$tab_SizeEncodingOutputKeys.$ctor1.prototype = $tab_SizeEncodingOutputKeys.prototype;
	ss.initClass($tab_SolutionResultsTableKeys, $asm, {
		variableID: function SolutionResultsTableKeys$VariableID() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VariableID'));
		},
		value: function SolutionResultsTableKeys$Value() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Value'));
		}
	}, $tab_KeyPath);
	$tab_SolutionResultsTableKeys.$ctor1.prototype = $tab_SolutionResultsTableKeys.prototype;
	ss.initClass($tab_SpatialProjectorKeys, $asm, {
		isMap: function SpatialProjectorKeys$IsMap() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsMap'));
		},
		uName: function SpatialProjectorKeys$UName() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UName'));
		},
		vName: function SpatialProjectorKeys$VName() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VName'));
		}
	}, $tab_KeyPath);
	$tab_SpatialProjectorKeys.$ctor1.prototype = $tab_SpatialProjectorKeys.prototype;
	ss.initClass($tab_StackedMarkAttributesKeys, $asm, {
		hasCurrStackValue: function StackedMarkAttributesKeys$HasCurrStackValue() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasCurrStackValue'));
		},
		hasPrevStackValue: function StackedMarkAttributesKeys$HasPrevStackValue() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasPrevStackValue'));
		},
		hasPrevLowerValue: function StackedMarkAttributesKeys$HasPrevLowerValue() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasPrevLowerValue'));
		},
		hasNextLowerValue: function StackedMarkAttributesKeys$HasNextLowerValue() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasNextLowerValue'));
		}
	}, $tab_KeyPath);
	$tab_StackedMarkAttributesKeys.$ctor1.prototype = $tab_StackedMarkAttributesKeys.prototype;
	ss.initClass($tab_TextComposerStyleTableKeys, $asm, {
		font: function TextComposerStyleTableKeys$Font() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Font'));
		},
		fontSize: function TextComposerStyleTableKeys$FontSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FontSize'));
		},
		fontStyle: function TextComposerStyleTableKeys$FontStyle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FontStyle'));
		},
		fontWeight: function TextComposerStyleTableKeys$FontWeight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FontWeight'));
		},
		hAlign: function TextComposerStyleTableKeys$HAlign() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HAlign'));
		},
		strikethrough: function TextComposerStyleTableKeys$Strikethrough() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Strikethrough'));
		},
		textAlignment: function TextComposerStyleTableKeys$TextAlignment() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextAlignment'));
		},
		textDecoration: function TextComposerStyleTableKeys$TextDecoration() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextDecoration'));
		},
		textOrientation: function TextComposerStyleTableKeys$TextOrientation() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextOrientation'));
		},
		textStyleColor: function TextComposerStyleTableKeys$TextStyleColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextStyleColor'));
		},
		textWrapMode: function TextComposerStyleTableKeys$TextWrapMode() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextWrapMode'));
		},
		underline: function TextComposerStyleTableKeys$Underline() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Underline'));
		},
		vAlign: function TextComposerStyleTableKeys$VAlign() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VAlign'));
		},
		leftMargin: function TextComposerStyleTableKeys$LeftMargin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LeftMargin'));
		},
		rightMargin: function TextComposerStyleTableKeys$RightMargin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('RightMargin'));
		}
	}, $tab_KeyPath);
	$tab_TextComposerStyleTableKeys.$ctor1.prototype = $tab_TextComposerStyleTableKeys.prototype;
	ss.initClass($tab_TextCompositionInputKeys, $asm, {
		isTextTable: function TextCompositionInputKeys$IsTextTable() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsTextTable'));
		},
		hPad: function TextCompositionInputKeys$HPad() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HPad'));
		},
		vPad: function TextCompositionInputKeys$VPad() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VPad'));
		},
		textScaleFactor: function TextCompositionInputKeys$TextScaleFactor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextScaleFactor'));
		},
		textRangeFactor: function TextCompositionInputKeys$TextRangeFactor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRangeFactor'));
		},
		textFontMin: function TextCompositionInputKeys$TextFontMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextFontMin'));
		},
		textFitStyle: function TextCompositionInputKeys$TextFitStyle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextFitStyle'));
		},
		textRunPosition: function TextCompositionInputKeys$TextRunPosition() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunPosition'));
		},
		formattedText: function TextCompositionInputKeys$FormattedText() {
			return new $tab_FormattedTextInputKeys.$ctor1(this.get_base().add('FormattedText'));
		}
	}, $tab_KeyPath);
	$tab_TextCompositionInputKeys.$ctor1.prototype = $tab_TextCompositionInputKeys.prototype;
	ss.initClass($tab_TextEncodingTableKeys, $asm, {
		cellX: function TextEncodingTableKeys$CellX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellX'));
		},
		cellY: function TextEncodingTableKeys$CellY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('CellY'));
		},
		height: function TextEncodingTableKeys$Height() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Height'));
		},
		markFlags: function TextEncodingTableKeys$MarkFlags() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MarkFlags'));
		},
		textRunCount: function TextEncodingTableKeys$TextRunCount() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunCount'));
		},
		textRunOffset: function TextEncodingTableKeys$TextRunOffset() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunOffset'));
		},
		tupleId: function TextEncodingTableKeys$TupleId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TupleId'));
		},
		userPaneCol: function TextEncodingTableKeys$UserPaneCol() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UserPaneCol'));
		},
		userPaneRow: function TextEncodingTableKeys$UserPaneRow() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UserPaneRow'));
		},
		width: function TextEncodingTableKeys$Width() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Width'));
		},
		x: function TextEncodingTableKeys$X() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('X'));
		},
		y: function TextEncodingTableKeys$Y() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Y'));
		}
	}, $tab_KeyPath);
	$tab_TextEncodingTableKeys.$ctor1.prototype = $tab_TextEncodingTableKeys.prototype;
	ss.initClass($tab_TextRunTableKeys, $asm, {
		hasFontSizeOverride: function TextRunTableKeys$HasFontSizeOverride() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HasFontSizeOverride'));
		},
		textRunString: function TextRunTableKeys$TextRunString() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunString'));
		},
		textRunX: function TextRunTableKeys$TextRunX() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunX'));
		},
		textRunXRemote: function TextRunTableKeys$TextRunXRemote() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunXRemote'));
		},
		textRunY: function TextRunTableKeys$TextRunY() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunY'));
		},
		textRunYRemote: function TextRunTableKeys$TextRunYRemote() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextRunYRemote'));
		},
		textStyleId: function TextRunTableKeys$TextStyleId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextStyleId'));
		}
	}, $tab_KeyPath);
	$tab_TextRunTableKeys.$ctor1.prototype = $tab_TextRunTableKeys.prototype;
	ss.initClass($tab_TextStyleKeys, $asm, {
		font: function TextStyleKeys$Font() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Font'));
		},
		fontSize: function TextStyleKeys$FontSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FontSize'));
		},
		fontStyle: function TextStyleKeys$FontStyle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FontStyle'));
		},
		fontWeight: function TextStyleKeys$FontWeight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FontWeight'));
		},
		hAlign: function TextStyleKeys$HAlign() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HAlign'));
		},
		strikethrough: function TextStyleKeys$Strikethrough() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Strikethrough'));
		},
		textAlignment: function TextStyleKeys$TextAlignment() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextAlignment'));
		},
		textDecoration: function TextStyleKeys$TextDecoration() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextDecoration'));
		},
		textOrientation: function TextStyleKeys$TextOrientation() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextOrientation'));
		},
		textStyleColor: function TextStyleKeys$TextStyleColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextStyleColor'));
		},
		textWrapMode: function TextStyleKeys$TextWrapMode() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextWrapMode'));
		},
		underline: function TextStyleKeys$Underline() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Underline'));
		},
		vAlign: function TextStyleKeys$VAlign() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VAlign'));
		}
	}, $tab_KeyPath);
	$tab_TextStyleKeys.$ctor1.prototype = $tab_TextStyleKeys.prototype;
	ss.initClass($tab_TextStyleTableKeys, $asm, {
		font: function TextStyleTableKeys$Font() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Font'));
		},
		fontSize: function TextStyleTableKeys$FontSize() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FontSize'));
		},
		fontStyle: function TextStyleTableKeys$FontStyle() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FontStyle'));
		},
		fontWeight: function TextStyleTableKeys$FontWeight() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('FontWeight'));
		},
		hAlign: function TextStyleTableKeys$HAlign() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HAlign'));
		},
		strikethrough: function TextStyleTableKeys$Strikethrough() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Strikethrough'));
		},
		textAlignment: function TextStyleTableKeys$TextAlignment() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextAlignment'));
		},
		textDecoration: function TextStyleTableKeys$TextDecoration() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextDecoration'));
		},
		textOrientation: function TextStyleTableKeys$TextOrientation() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextOrientation'));
		},
		textStyleColor: function TextStyleTableKeys$TextStyleColor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextStyleColor'));
		},
		textWrapMode: function TextStyleTableKeys$TextWrapMode() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextWrapMode'));
		},
		underline: function TextStyleTableKeys$Underline() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Underline'));
		},
		vAlign: function TextStyleTableKeys$VAlign() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VAlign'));
		}
	}, $tab_KeyPath);
	$tab_TextStyleTableKeys.$ctor1.prototype = $tab_TextStyleTableKeys.prototype;
	ss.initClass($tab_TickProducerArrayConstantsKeys, $asm, {
		daysPossibleFreqs: function TickProducerArrayConstantsKeys$DaysPossibleFreqs() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DaysPossibleFreqs'));
		},
		hoursPossibleFreqs: function TickProducerArrayConstantsKeys$HoursPossibleFreqs() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('HoursPossibleFreqs'));
		},
		monthsPossibleFreqs: function TickProducerArrayConstantsKeys$MonthsPossibleFreqs() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MonthsPossibleFreqs'));
		},
		minutesPossibleFreqs: function TickProducerArrayConstantsKeys$MinutesPossibleFreqs() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('MinutesPossibleFreqs'));
		},
		quartersPossibleFreqs: function TickProducerArrayConstantsKeys$QuartersPossibleFreqs() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('QuartersPossibleFreqs'));
		},
		secondsPossibleFreqs: function TickProducerArrayConstantsKeys$SecondsPossibleFreqs() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SecondsPossibleFreqs'));
		},
		weeksPossibleFreqs: function TickProducerArrayConstantsKeys$WeeksPossibleFreqs() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('WeeksPossibleFreqs'));
		},
		yearsPossibleFreqs: function TickProducerArrayConstantsKeys$YearsPossibleFreqs() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YearsPossibleFreqs'));
		}
	}, $tab_KeyPath);
	$tab_TickProducerArrayConstantsKeys.$ctor1.prototype = $tab_TickProducerArrayConstantsKeys.prototype;
	ss.initClass($tab_TickProducerInputKeys, $asm, {
		qPerHeaderData: function TickProducerInputKeys$QPerHeaderData() {
			return new $tab_QuantitativeTickPerHeaderInputTableKeys.$ctor1(this.get_base().add('QPerHeaderData'));
		},
		dateTimePerHeaderData: function TickProducerInputKeys$DateTimePerHeaderData() {
			return new $tab_DateTimeTickPerHeaderInputTableKeys.$ctor1(this.get_base().add('DateTimePerHeaderData'));
		},
		logPerHeaderData: function TickProducerInputKeys$LogPerHeaderData() {
			return new $tab_LogTickPerHeaderInputTableKeys.$ctor1(this.get_base().add('LogPerHeaderData'));
		},
		noneTickPerHeaderData: function TickProducerInputKeys$NoneTickPerHeaderData() {
			return new $tab_NoneTickPerHeaderInputTableKeys.$ctor1(this.get_base().add('NoneTickPerHeaderData'));
		},
		arrayConstants: function TickProducerInputKeys$ArrayConstants() {
			return new $tab_TickProducerArrayConstantsKeys.$ctor1(this.get_base().add('ArrayConstants'));
		},
		columnFormat: function TickProducerInputKeys$ColumnFormat() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ColumnFormat'));
		},
		labelFont: function TickProducerInputKeys$LabelFont() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelFont'));
		},
		numericFormatDivisor: function TickProducerInputKeys$NumericFormatDivisor() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('NumericFormatDivisor'));
		},
		numericFormatSuffix: function TickProducerInputKeys$NumericFormatSuffix() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('NumericFormatSuffix'));
		},
		tickLengthMajorPixels: function TickProducerInputKeys$TickLengthMajorPixels() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TickLengthMajorPixels'));
		},
		tickLengthMinorPixels: function TickProducerInputKeys$TickLengthMinorPixels() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TickLengthMinorPixels'));
		},
		isLabelNudgeable: function TickProducerInputKeys$IsLabelNudgeable() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsLabelNudgeable'));
		}
	}, $tab_KeyPath);
	$tab_TickProducerInputKeys.$ctor1.prototype = $tab_TickProducerInputKeys.prototype;
	ss.initClass($tab_TickProducerOutputKeys, $asm, {
		perHeaderMajorTickPlacement: function TickProducerOutputKeys$PerHeaderMajorTickPlacement() {
			return new $tab_TickProducerPerHeaderOutputTableKeys.$ctor1(this.get_base().add('PerHeaderMajorTickPlacement'));
		},
		perHeaderMinorTickPlacement: function TickProducerOutputKeys$PerHeaderMinorTickPlacement() {
			return new $tab_TickProducerPerHeaderOutputTableKeys.$ctor1(this.get_base().add('PerHeaderMinorTickPlacement'));
		},
		encodedTickPositions: function TickProducerOutputKeys$EncodedTickPositions() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('EncodedTickPositions'));
		},
		encodedMinorTickPositions: function TickProducerOutputKeys$EncodedMinorTickPositions() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('EncodedMinorTickPositions'));
		},
		labelFont: function TickProducerOutputKeys$LabelFont() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelFont'));
		},
		columnFormat: function TickProducerOutputKeys$ColumnFormat() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ColumnFormat'));
		},
		updatedColumnFormat: function TickProducerOutputKeys$UpdatedColumnFormat() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UpdatedColumnFormat'));
		},
		tickLengthMajorPixels: function TickProducerOutputKeys$TickLengthMajorPixels() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TickLengthMajorPixels'));
		},
		tickLengthMinorPixels: function TickProducerOutputKeys$TickLengthMinorPixels() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TickLengthMinorPixels'));
		},
		isLabelNudgeable: function TickProducerOutputKeys$IsLabelNudgeable() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IsLabelNudgeable'));
		}
	}, $tab_KeyPath);
	$tab_TickProducerOutputKeys.$ctor1.prototype = $tab_TickProducerOutputKeys.prototype;
	ss.initClass($tab_TickProducerPerHeaderOutputTableKeys, $asm, {
		encodedTickPositionsIndex: function TickProducerPerHeaderOutputTableKeys$EncodedTickPositionsIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('EncodedTickPositionsIndex'));
		},
		spacing: function TickProducerPerHeaderOutputTableKeys$Spacing() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Spacing'));
		},
		origin: function TickProducerPerHeaderOutputTableKeys$Origin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Origin'));
		},
		includeViewEdges: function TickProducerPerHeaderOutputTableKeys$IncludeViewEdges() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('IncludeViewEdges'));
		},
		dateTimeSpacing: function TickProducerPerHeaderOutputTableKeys$DateTimeSpacing() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DateTimeSpacing'));
		},
		dateTimeSpacingUnit: function TickProducerPerHeaderOutputTableKeys$DateTimeSpacingUnit() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DateTimeSpacingUnit'));
		},
		dateTimeOrigin: function TickProducerPerHeaderOutputTableKeys$DateTimeOrigin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('DateTimeOrigin'));
		},
		encodingMin: function TickProducerPerHeaderOutputTableKeys$EncodingMin() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('EncodingMin'));
		},
		encodingMax: function TickProducerPerHeaderOutputTableKeys$EncodingMax() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('EncodingMax'));
		},
		labelFontIndex: function TickProducerPerHeaderOutputTableKeys$LabelFontIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('LabelFontIndex'));
		},
		columnFormatIndex: function TickProducerPerHeaderOutputTableKeys$ColumnFormatIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('ColumnFormatIndex'));
		},
		updatedColumnFormatIndex: function TickProducerPerHeaderOutputTableKeys$UpdatedColumnFormatIndex() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('UpdatedColumnFormatIndex'));
		},
		targetTickSpacing: function TickProducerPerHeaderOutputTableKeys$TargetTickSpacing() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TargetTickSpacing'));
		}
	}, $tab_KeyPath);
	$tab_TickProducerPerHeaderOutputTableKeys.$ctor1.prototype = $tab_TickProducerPerHeaderOutputTableKeys.prototype;
	ss.initClass($tab_TupleDatastoreConversions, $asm, {});
	ss.initClass($tab_UpdatedTextStyleTableResultKeys, $asm, {
		textStyleTable: function UpdatedTextStyleTableResultKeys$TextStyleTable() {
			return new $tab_TextStyleTableKeys.$ctor1(this.get_base().add('TextStyleTable'));
		},
		textStyleId: function UpdatedTextStyleTableResultKeys$TextStyleId() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('TextStyleId'));
		}
	}, $tab_KeyPath);
	$tab_UpdatedTextStyleTableResultKeys.$ctor1.prototype = $tab_UpdatedTextStyleTableResultKeys.prototype;
	ss.initClass($tab_UserPaneInfoKeys, $asm, {
		xCellOffsets: function UserPaneInfoKeys$XCellOffsets() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XCellOffsets'));
		},
		xPixelOffsets: function UserPaneInfoKeys$XPixelOffsets() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XPixelOffsets'));
		},
		yCellOffsets: function UserPaneInfoKeys$YCellOffsets() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YCellOffsets'));
		},
		yPixelOffsets: function UserPaneInfoKeys$YPixelOffsets() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YPixelOffsets'));
		},
		xCellWidths: function UserPaneInfoKeys$XCellWidths() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XCellWidths'));
		},
		xPixelWidths: function UserPaneInfoKeys$XPixelWidths() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('XPixelWidths'));
		},
		yCellHeights: function UserPaneInfoKeys$YCellHeights() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YCellHeights'));
		},
		yPixelHeights: function UserPaneInfoKeys$YPixelHeights() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('YPixelHeights'));
		}
	}, $tab_KeyPath);
	$tab_UserPaneInfoKeys.$ctor1.prototype = $tab_UserPaneInfoKeys.prototype;
	ss.initClass($tab_Utf8TextDecoder, $asm, {});
	ss.initClass($tab_Utf8TextEncoder, $asm, {});
	ss.initClass($tab_VariableNameTableKeys, $asm, {
		variableID: function VariableNameTableKeys$VariableID() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('VariableID'));
		},
		name: function VariableNameTableKeys$Name() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('Name'));
		}
	}, $tab_KeyPath);
	$tab_VariableNameTableKeys.$ctor1.prototype = $tab_VariableNameTableKeys.prototype;
	ss.initClass($tab_ViewParametersDataKeys, $asm, {
		activePages: function ViewParametersDataKeys$ActivePages() {
			return new $tab_ActivePagesKeys.$ctor1(this.get_base().add('ActivePages'));
		},
		layoutSize: function ViewParametersDataKeys$LayoutSize() {
			return new $tab_LayoutSizeKeys.$ctor1(this.get_base().add('LayoutSize'));
		}
	}, $tab_KeyPath);
	$tab_ViewParametersDataKeys.$ctor1.prototype = $tab_ViewParametersDataKeys.prototype;
	ss.initClass($tab_ViewParametersKeys, $asm, {
		activePages: function ViewParametersKeys$ActivePages() {
			return new $tab_ActivePagesKeys.$ctor1(this.get_base().add('ActivePages'));
		}
	}, $tab_KeyPath);
	$tab_ViewParametersKeys.$ctor1.prototype = $tab_ViewParametersKeys.prototype;
	ss.initClass($tab_ViewpointKeys, $asm, {
		mapLayersModelUpdate: function ViewpointKeys$MapLayersModelUpdate() {
			return new $tab_MapLayersModelUpdateKeys.$ctor1(this.get_base().add('MapLayersModelUpdate'));
		},
		perPaneExtents: function ViewpointKeys$PerPaneExtents() {
			return new $tab_PaneExtentsTableKeys.$ctor1(this.get_base().add('PerPaneExtents'));
		}
	}, $tab_KeyPath);
	$tab_ViewpointKeys.$ctor1.prototype = $tab_ViewpointKeys.prototype;
	ss.initClass($tab_VisualKeys, $asm, {});
	ss.initClass($tab_VisualLayoutProducerInputKeys, $asm, {
		sceneMarginLayout: function VisualLayoutProducerInputKeys$SceneMarginLayout() {
			return new $tab_SceneMarginLayoutTableKeys.$ctor1(this.get_base().add('SceneMarginLayout'));
		},
		sceneMarginLeafLayouts: function VisualLayoutProducerInputKeys$SceneMarginLeafLayouts() {
			return new $tab_SceneMarginLeafElementLayoutsKeys.$ctor1(this.get_base().add('SceneMarginLeafLayouts'));
		},
		sceneMarginSupport: function VisualLayoutProducerInputKeys$SceneMarginSupport() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SceneMarginSupport'));
		}
	}, $tab_KeyPath);
	$tab_VisualLayoutProducerInputKeys.$ctor1.prototype = $tab_VisualLayoutProducerInputKeys.prototype;
	ss.initClass($tab_VisualLayoutResultsKeys, $asm, {
		sceneMarginLayout: function VisualLayoutResultsKeys$SceneMarginLayout() {
			return new $tab_SceneMarginLayoutTableKeys.$ctor1(this.get_base().add('SceneMarginLayout'));
		},
		sceneMarginLeafLayouts: function VisualLayoutResultsKeys$SceneMarginLeafLayouts() {
			return new $tab_SceneMarginLeafElementLayoutsKeys.$ctor1(this.get_base().add('SceneMarginLeafLayouts'));
		},
		sceneMarginSupport: function VisualLayoutResultsKeys$SceneMarginSupport() {
			return new $tab_KeyPath.$ctor2(this.get_base().add('SceneMarginSupport'));
		}
	}, $tab_KeyPath);
	$tab_VisualLayoutResultsKeys.$ctor1.prototype = $tab_VisualLayoutResultsKeys.prototype;
	ss.initClass($tab_VMHandle, $asm, {
		get_typeCode: function VMHandle$get_TypeCode() {
			return 17;
		}
	}, $tab_OpaqueHandle, [ss.IDisposable]);
	(function() {
		$tab_$ObjectBuilder.$useWriteDetector = BrowserSupport.BrowserSupport.ProxyObjectSupport() && !(tab.FeatureParamsLookup.getInt(54) !== -1);
	})();
	(function() {
		$tab_KeyPath.$separtor = '/';
	})();
	(function() {
		$tab_Base64HeapDecoder.$supportedChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
		$tab_Base64HeapDecoder.$charLookup = null;
	})();
	(function() {
		$tab_Utf8TextDecoder.$decoder = null;
		$tab_Utf8TextDecoder.$useFallBack = !(typeof(TextDecoder) !== 'undefined');
		if (!$tab_Utf8TextDecoder.$useFallBack) {
			$tab_Utf8TextDecoder.$decoder = new TextDecoder();
		}
	})();
	(function() {
		$tab_EnumConversions.$tableauFontStyleArray = null;
		$tab_EnumConversions.$textDecorationArray = null;
		$tab_EnumConversions.$fontWeightArray = null;
		$tab_EnumConversions.$textOrientArray = null;
		$tab_EnumConversions.$datePeriodTypeArray = null;
		$tab_EnumConversions.$labelHAlignmentArray = null;
		$tab_EnumConversions.$labelVAlignmentArray = null;
		$tab_EnumConversions.$linePatternArray = null;
		$tab_EnumConversions.$lineCapArray = null;
		$tab_EnumConversions.$lineJoinArray = null;
		$tab_EnumConversions.$primitiveArray = null;
		$tab_EnumConversions.$vizTypeArray = null;
		$tab_EnumConversions.$visualPartArray = null;
	})();
	(function() {
		$tab_HexEncoder.$byteLookup = null;
		$tab_HexEncoder.$initialized = false;
	})();
	(function() {
		$tab_HexHeapDecoder.$decoderLookup = new Uint8Array(256);
		for (var i = 0; i < 10; i++) {
			$tab_HexHeapDecoder.$decoderLookup[48 + i] = i;
		}
		for (var i1 = 10; i1 < 16; i1++) {
			$tab_HexHeapDecoder.$decoderLookup[97 + (i1 - 10)] = i1;
		}
		for (var i2 = 10; i2 < 16; i2++) {
			$tab_HexHeapDecoder.$decoderLookup[65 + (i2 - 10)] = i2;
		}
	})();
	(function() {
		$tab_JsHeapMarshaller.$decoderCache = {};
	})();
	(function() {
		$tab_Utf8TextEncoder.$encoder = null;
		$tab_Utf8TextEncoder.$useFallBack = !(typeof(TextEncoder) !== 'undefined');
		if (!$tab_Utf8TextEncoder.$useFallBack) {
			$tab_Utf8TextEncoder.$encoder = new TextEncoder();
		}
	})();
	(function() {
		$tab_RuntimeUtil.$emscriptenAborted = false;
	})();
	(function() {
		$tab_RuntimeFormattingHooks.$registeredFormatters = {};
		$tab_RuntimeFormattingHooks.$formatterId = 0;
	})();
	(function() {
		$tab_RuntimeTextMeasurementHooks.$marshalledTextStyleKey = 'TextStyle';
		$tab_RuntimeTextMeasurementHooks.$registeredTextStyles = {};
		$tab_RuntimeTextMeasurementHooks.$textStyleId = 0;
	})();
	(function() {
		$tab_RuntimeWebModule.proxy = null;
		$tab_RuntimeWebModule.support = null;
		var runtimeWebHost = tab.FeatureParamsLookup.getString(51);
		if (!ss.isNullOrUndefined(runtimeWebHost)) {
			$tab_RuntimeWebModule.proxy = new $tab_RuntimeWebHost(runtimeWebHost);
			$tab_RuntimeWebModule.support = new $tab_RuntimeWebHostSupport();
		}
		else {
			$tab_RuntimeWebModule.proxy = new $tab_LocalEmscripten();
			$tab_RuntimeWebModule.support = new $tab_LocalEmscriptenSupport();
		}
	})();
	(function() {
		$tab_VisualKeys.tupleId = 'tuple_id';
		$tab_VisualKeys.groupId = 'group_id';
		$tab_VisualKeys.trailId = 'trail_id';
		$tab_VisualKeys.primitiveId = 'primitive_id';
		$tab_VisualKeys.paneIndex = 'pane_index';
		$tab_VisualKeys.paneCol = 'pane_col';
		$tab_VisualKeys.paneRow = 'pane_row';
		$tab_VisualKeys.paneLayer = 'pane_layer';
		$tab_VisualKeys.panePage = 'pane_page';
		$tab_VisualKeys.rangeMin = 'range_min';
		$tab_VisualKeys.rangeMax = 'range_max';
		$tab_VisualKeys.domainMin = 'domain_min';
		$tab_VisualKeys.domainMax = 'domain_max';
		$tab_VisualKeys.xDomains = 'x_domains_lookup';
		$tab_VisualKeys.yDomains = 'y_domains_lookup';
		$tab_VisualKeys.lookup = 'lookup';
		$tab_VisualKeys.xNumberMap = 'x_numbermap';
		$tab_VisualKeys.yNumberMap = 'y_numbermap';
		$tab_VisualKeys.dataType = 'dataType';
		$tab_VisualKeys.fieldType = 'fieldType';
		$tab_VisualKeys.cellX = 'cell_x';
		$tab_VisualKeys.cellY = 'cell_y';
		$tab_VisualKeys.markFirst = 'mark_first';
		$tab_VisualKeys.markLast = 'mark_last';
		$tab_VisualKeys.x = 'x';
		$tab_VisualKeys.y = 'y';
		$tab_VisualKeys.x1 = 'x1';
		$tab_VisualKeys.y1 = 'y1';
		$tab_VisualKeys.width = 'width';
		$tab_VisualKeys.height = 'height';
		$tab_VisualKeys.size = 'size';
		$tab_VisualKeys.sizeLabel = 'size_label';
		$tab_VisualKeys.hasPerMarkSizeEncoding = 'has_per_mark_size_encoding';
		$tab_VisualKeys.rho = 'rho';
		$tab_VisualKeys.rho1 = 'rho1';
		$tab_VisualKeys.theta = 'theta';
		$tab_VisualKeys.theta1 = 'theta1';
		$tab_VisualKeys.xPrev = 'x_prev';
		$tab_VisualKeys.yPrev = 'y_prev';
		$tab_VisualKeys.xNext = 'x_next';
		$tab_VisualKeys.yNext = 'y_next';
		$tab_VisualKeys.color = 'color';
		$tab_VisualKeys.hasPerMarkColorEncoding = 'has_per_mark_color_encoding';
		$tab_VisualKeys.alpha = 'alpha';
		$tab_VisualKeys.haloColor = 'halo_color';
		$tab_VisualKeys.haloAlpha = 'halo_alpha';
		$tab_VisualKeys.hasHalos = 'has_halos';
		$tab_VisualKeys.shapeId = 'shape_id';
		$tab_VisualKeys.clipWidth = 'clip_width';
		$tab_VisualKeys.clipHeight = 'clip_height';
		$tab_VisualKeys.userPaneCol = 'user_pane_col';
		$tab_VisualKeys.userPaneRow = 'user_pane_row';
		$tab_VisualKeys.userPaneIndex = 'user_pane_index';
		$tab_VisualKeys.xCellOffsets = 'x_cell_offsets';
		$tab_VisualKeys.yCellOffsets = 'y_cell_offsets';
		$tab_VisualKeys.xPixelOffsets = 'x_pixel_offsets';
		$tab_VisualKeys.yPixelOffsets = 'y_pixel_offsets';
		$tab_VisualKeys.xCellWidths = 'x_cell_widths';
		$tab_VisualKeys.yCellHeights = 'y_cell_heights';
		$tab_VisualKeys.xPixelWidths = 'x_pixel_widths';
		$tab_VisualKeys.yPixelHeights = 'y_pixel_heights';
		$tab_VisualKeys.userPaneInfo = 'user_pane_info';
		$tab_VisualKeys.minBarHeight = 'min_bar_height';
		$tab_VisualKeys.minBarWidth = 'min_bar_width';
		$tab_VisualKeys.drawBorder = 'draw_border';
		$tab_VisualKeys.borderColor = 'border_color';
		$tab_VisualKeys.selectedHaloColor = 'selected_halo_color';
		$tab_VisualKeys.selectedMultiPrimHaloColor = 'selected_multi_prim_halo_color';
		$tab_VisualKeys.highlightedHaloColor = 'highlighted_halo_color';
		$tab_VisualKeys.backgroundColor = 'background_color';
		$tab_VisualKeys.wrapDomain = 'wrap_domain';
		$tab_VisualKeys.hasFoldedAxis = 'has_folded_axis';
		$tab_VisualKeys.markFlags = 'mark_flags';
		$tab_VisualKeys.paneFlags = 'pane_flags';
		$tab_VisualKeys.handleSpecialsX = 'handle_specials_x';
		$tab_VisualKeys.handleSpecialsY = 'handle_specials_y';
		$tab_VisualKeys.scaleTypeX = 'scale_type_x';
		$tab_VisualKeys.scaleTypeY = 'scale_type_y';
		$tab_VisualKeys.hasEmptyOrEqualAxis = 'has_empty_or_equal_axis';
		$tab_VisualKeys.hasSortEncoding = 'has_sort_encoding';
		$tab_VisualKeys.independentAxis = 'independent_axis';
		$tab_VisualKeys.dropLineFlags = 'drop_line_flags';
		$tab_VisualKeys.lineInterpolation = 'line_interp';
		$tab_VisualKeys.markStackIndex = 'tc_stack_index';
		$tab_VisualKeys.isMarkStacked = 'is_mark_stacked';
		$tab_VisualKeys.currStackedVal = 'tc_curr_stack_value';
		$tab_VisualKeys.prevStackedVal = 'tc_prev_stack_value';
		$tab_VisualKeys.scaledStartPoint = 'scaled_start_point';
		$tab_VisualKeys.scaledEndPoint = 'scaled_end_point';
		$tab_VisualKeys.exclPrevLowerStackedVal = 'tc_prev_excl_stack_value';
		$tab_VisualKeys.exclNextLowerStackedVal = 'tc_next_excl_stack_value';
		$tab_VisualKeys.isMarkTotal = 'is_mark_total';
		$tab_VisualKeys.xProj = 'x_proj';
		$tab_VisualKeys.yProj = 'y_proj';
		$tab_VisualKeys.paneHasBackground = 'pane_has_background';
		$tab_VisualKeys.panePxLeft = 'pane_px_left';
		$tab_VisualKeys.panePxRight = 'pane_px_right';
		$tab_VisualKeys.panePxTop = 'pane_px_top';
		$tab_VisualKeys.panePxBottom = 'pane_px_bottom';
		$tab_VisualKeys.textRunOffset = 'text_run_offset';
		$tab_VisualKeys.textRunCount = 'text_run_count';
		$tab_VisualKeys.formattedTextRunOffset = 'formatted_text_run_offset';
		$tab_VisualKeys.formattedTextRunCount = 'formatted_text_run_count';
		$tab_VisualKeys.geometry = 'geometry';
		$tab_VisualKeys.geometryTable = 'geoTable';
		$tab_VisualKeys.pageTrailMarksToTrail = 'page_trail_marks_to_trail';
		$tab_VisualKeys.markTrailCount = 'mark_trail_count';
		$tab_VisualKeys.markTrailAutoColor = 'mark_trail_auto_color';
		$tab_VisualKeys.markTrailColor = 'mark_trail_color';
		$tab_VisualKeys.markTrailTransparency = 'mark_trail_transparency';
		$tab_VisualKeys.markTrailStartEffect = 'mark_trail_start_effect';
		$tab_VisualKeys.markTrailEndEffect = 'mark_trail_end_effect';
		$tab_VisualKeys.isTextTable = 'is_text_table';
		$tab_VisualKeys.textMaxWidth = 'text_max_width';
		$tab_VisualKeys.textMaxHeight = 'text_max_height';
		$tab_VisualKeys.textScaleFactor = 'text_scale_factor';
		$tab_VisualKeys.textRangeFactor = 'text_range_factor';
		$tab_VisualKeys.textFontMin = 'text_font_min';
		$tab_VisualKeys.textFitStyle = 'text_fit_style';
		$tab_VisualKeys.textRunPosition = 'text_run_position';
		$tab_VisualKeys.textCompositionOutput = 'text_composition_output';
		$tab_VisualKeys.textRunTable = 'TextRunTable';
		$tab_VisualKeys.formattedTextRunTable = 'FormattedTextRunTable';
		$tab_VisualKeys.textRun = 'text_run';
		$tab_VisualKeys.textRunX = 'text_run_x';
		$tab_VisualKeys.textRunY = 'text_run_y';
		$tab_VisualKeys.textRunXRemote = 'text_run_x_remote';
		$tab_VisualKeys.textRunYRemote = 'text_run_y_remote';
		$tab_VisualKeys.textStyleID = 'text_style_id';
		$tab_VisualKeys.hasFontSizeOverride = 'has_font_size_override';
		$tab_VisualKeys.textStyleTable = 'TextStyleTable';
		$tab_VisualKeys.formattedTextStyleTable = 'FormattedTextStyleTable';
		$tab_VisualKeys.font = 'font';
		$tab_VisualKeys.fontSize = 'font_size';
		$tab_VisualKeys.textStyleColor = 'text_style_color';
		$tab_VisualKeys.fontStyle = 'font_style';
		$tab_VisualKeys.fontWeight = 'font_weight';
		$tab_VisualKeys.textDecoration = 'text_decoration';
		$tab_VisualKeys.textOrientation = 'text_orientation';
		$tab_VisualKeys.textAlignment = 'text_alignment';
		$tab_VisualKeys.underline = 'underline';
		$tab_VisualKeys.strikethrough = 'strikethrough';
		$tab_VisualKeys.ascent = 'ascent';
		$tab_VisualKeys.leading = 'leading';
		$tab_VisualKeys.fontHeight = 'font_height';
		$tab_VisualKeys.hAlign = 'hAlign';
		$tab_VisualKeys.vAlign = 'vAlign';
		$tab_VisualKeys.textWrapMode = 'text_wrap_mode';
		$tab_VisualKeys.labelTargetPrimitiveId = 'label_target_primitive_id';
		$tab_VisualKeys.labelOnePerGroup = 'label_one_per_group';
		$tab_VisualKeys.showLabels = 'ShowLabels';
		$tab_VisualKeys.showRunningOrderLabels = 'ShowRunningOrderLabels';
		$tab_VisualKeys.labelMode = 'LabelMode';
		$tab_VisualKeys.predictionIntervalUpperEnd = 'prediction_interval_upper_end';
		$tab_VisualKeys.predictionIntervalLowerEnd = 'prediction_interval_lower_end';
		$tab_VisualKeys.predictionIntervalUpperEndMeasure = 'prediction_interval_upper_end_measure';
		$tab_VisualKeys.predictionIntervalLowerEndMeasure = 'prediction_interval_lower_end_measure';
		$tab_VisualKeys.predictionWhiskerWidth = 'prediction_whisker_width';
		$tab_VisualKeys.colors = 'Colors';
		$tab_VisualKeys.column = 'Column';
		$tab_VisualKeys.encodingDomains = 'EncodingDomains';
		$tab_VisualKeys.defaultParamID = 'DefaultParamID';
		$tab_VisualKeys.domain = 'Domain';
		$tab_VisualKeys.domainExtents = 'DomainExtents';
		$tab_VisualKeys.domainOrigin = 'DomainOrigin';
		$tab_VisualKeys.drawFirsts = 'DrawFirsts';
		$tab_VisualKeys.drawLasts = 'DrawLasts';
		$tab_VisualKeys.drawPanes = 'DrawPanes';
		$tab_VisualKeys.encodings = 'Encodings';
		$tab_VisualKeys.endIndex = 'EndIndex';
		$tab_VisualKeys.geometries = 'Geometries';
		$tab_VisualKeys.left = 'Left';
		$tab_VisualKeys.lineTupleIds = 'LineTupleIds';
		$tab_VisualKeys.lowerEnds = 'LowerEnds';
		$tab_VisualKeys.mapDomainExtents = 'MapDomainExtents';
		$tab_VisualKeys.markType = 'MarkType';
		$tab_VisualKeys.maxAlpha = 'MaxAlpha';
		$tab_VisualKeys.oppositeAxes = 'OppositeAxes';
		$tab_VisualKeys.pageIndexes = 'PageIndexes';
		$tab_VisualKeys.paneId = 'PaneId';
		$tab_VisualKeys.paneKey = 'PaneKey';
		$tab_VisualKeys.panes = 'Panes';
		$tab_VisualKeys.part = 'Part';
		$tab_VisualKeys.pixelExtents = 'PixelExtents';
		$tab_VisualKeys.presModel = 'PresModel';
		$tab_VisualKeys.rect = 'Rect';
		$tab_VisualKeys.renderNodes = 'RenderNodes';
		$tab_VisualKeys.renderOnTop = 'RenderOnTop';
		$tab_VisualKeys.row = 'Row';
		$tab_VisualKeys.startIndex = 'StartIndex';
		$tab_VisualKeys.textAttributes = 'TextAttributes';
		$tab_VisualKeys.textTable = 'TextTable';
		$tab_VisualKeys.textTableHelper = 'TextTableHelper';
		$tab_VisualKeys.textEncodingTable = 'TextEncodingTable';
		$tab_VisualKeys.top = 'Top';
		$tab_VisualKeys.trailOverrides = 'TrailOverrides';
		$tab_VisualKeys.tupleIds = 'TupleIds';
		$tab_VisualKeys.type = 'Type';
		$tab_VisualKeys.upperEnds = 'UpperEnds';
		$tab_VisualKeys.useYAxis = 'UseYAxis';
		$tab_VisualKeys.vizType = 'VizType';
		$tab_VisualKeys.widths = 'Widths';
		$tab_VisualKeys.extendedDomain = 'ExtendedDomain';
		$tab_VisualKeys.markLayoutTempKeys = 'MarkLayoutTempKeys';
		$tab_VisualKeys.partition = 'Partition';
		$tab_VisualKeys.pdMarks = 'PDMarks';
		$tab_VisualKeys.axisEncodings = 'AxisEncodings';
		$tab_VisualKeys.inheritedSceneBackgroundColor = 'SceneBGColor';
		$tab_VisualKeys.isSceneBackgroundOpaque = 'IsSceneBGOpaque';
		$tab_VisualKeys.labelStore = 'LabelStore';
		$tab_VisualKeys.primitiveType = 'PrimitiveType';
		$tab_VisualKeys.mapPackage = 'MapPackage';
		$tab_VisualKeys.mappedImageModel = 'MappedImageModel';
		$tab_VisualKeys.modelNumber = 'ModelNumber';
		$tab_VisualKeys.waitForImages = 'WaitForImages';
		$tab_VisualKeys.waitTileFill = 'WaitTileFill';
		$tab_VisualKeys.wrapCount = 'WrapCount';
		$tab_VisualKeys.mapCode = 'MapCode';
		$tab_VisualKeys.sourceName = 'SourceName';
		$tab_VisualKeys.mapProvider = 'MapProvider';
		$tab_VisualKeys.mapLayersModel = 'MapLayersModel';
		$tab_VisualKeys.markLabelPadding = 'mark_label_padding';
	})();
})();
// END UI
