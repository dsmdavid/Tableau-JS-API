/*! BEGIN AuthoringDomain */

(function() {
	'dont use strict';
	var $asm = {};
	global.tab = global.tab || {};
	ss.initAssembly($asm, 'vqlauthoringdomain');
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ShelfDropClientCommand
	var $tab_$ShelfDropClientCommand = function(doLocal, remoteDropCommand, shelfType, isDroppingRelativeFilter) {
		this.$origDropCommand = null;
		this.$dropShelfType = null;
		this.$droppingRelativeFilter = true;
		this.$prepared = false;
		tab.ClientCommand.call(this, 'immediately', doLocal, null, null, null);
		this.$origDropCommand = remoteDropCommand;
		this.$dropShelfType = shelfType;
		this.$droppingRelativeFilter = isDroppingRelativeFilter;
		var cmdParams = this.$origDropCommand.commandParams;
		var prepareDropCmd = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'drop-prepare' }, cmdParams);
		$tab_ShelfClientCommands.setCommandParams(prepareDropCmd, cmdParams);
		cmdParams['allowDuplicateFieldDropOnFilterShelf'] = false;
		this.enqueueCommand(prepareDropCmd);
	};
	$tab_$ShelfDropClientCommand.__typeName = 'tab.$ShelfDropClientCommand';
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.AssignCategoricalColorPaletteCmd
	var $tab_AssignCategoricalColorPaletteCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_AssignCategoricalColorPaletteCmd$Response]).call(this);
	};
	$tab_AssignCategoricalColorPaletteCmd.__typeName = 'tab.AssignCategoricalColorPaletteCmd';
	global.tab.AssignCategoricalColorPaletteCmd = $tab_AssignCategoricalColorPaletteCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.AssignCategoricalColorPaletteCmd.Response
	var $tab_AssignCategoricalColorPaletteCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_AssignCategoricalColorPaletteCmd$Response.__typeName = 'tab.AssignCategoricalColorPaletteCmd$Response';
	global.tab.AssignCategoricalColorPaletteCmd$Response = $tab_AssignCategoricalColorPaletteCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.BuildMainMenuCmd
	var $tab_BuildMainMenuCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_BuildMainMenuCmd$Response]).call(this);
	};
	$tab_BuildMainMenuCmd.__typeName = 'tab.BuildMainMenuCmd';
	global.tab.BuildMainMenuCmd = $tab_BuildMainMenuCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.BuildMainMenuCmd.Response
	var $tab_BuildMainMenuCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_BuildMainMenuCmd$Response.__typeName = 'tab.BuildMainMenuCmd$Response';
	global.tab.BuildMainMenuCmd$Response = $tab_BuildMainMenuCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.BuildShelfItemContextMenuCmd
	var $tab_BuildShelfItemContextMenuCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_BuildShelfItemContextMenuCmd$Response]).call(this);
	};
	$tab_BuildShelfItemContextMenuCmd.__typeName = 'tab.BuildShelfItemContextMenuCmd';
	global.tab.BuildShelfItemContextMenuCmd = $tab_BuildShelfItemContextMenuCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.BuildShelfItemContextMenuCmd.Response
	var $tab_BuildShelfItemContextMenuCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_BuildShelfItemContextMenuCmd$Response.__typeName = 'tab.BuildShelfItemContextMenuCmd$Response';
	global.tab.BuildShelfItemContextMenuCmd$Response = $tab_BuildShelfItemContextMenuCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ClientCommands.CalcApplyResponse
	var $tab_CalcApplyResponse = function(resultType) {
		this.$resultType = null;
		this.$errorMessage = null;
		this.$resultType = resultType;
	};
	$tab_CalcApplyResponse.__typeName = 'tab.CalcApplyResponse';
	$tab_CalcApplyResponse.fromApplyCalculationResult = function CalcApplyResponse$FromApplyCalculationResult(result, model) {
		var resultType = (_.isString(result) ? ss.cast(result, String) : result['calculationApplyResult'.toString()]);
		var response = new $tab_CalcApplyResponse(resultType);
		switch (response.get_resultType()) {
			case 'invalid-formula': {
				response.set_errorMessage(model.get_errorSummary());
				break;
			}
			case 'invalid-caption-for-new-calc': {
				response.set_errorMessage(result['errorString'.toString()]);
				break;
			}
		}
		return response;
	};
	global.tab.CalcApplyResponse = $tab_CalcApplyResponse;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.CalculationAutoCompleteItemModel
	var $tab_CalculationAutoCompleteItemModel = function(parent, pm) {
		tab.Model.call(this, parent, new tab.PresModelPathItem('autocompleteItem'.toString(), null));
		this.swapPresModel(pm);
	};
	$tab_CalculationAutoCompleteItemModel.__typeName = 'tab.CalculationAutoCompleteItemModel';
	global.tab.CalculationAutoCompleteItemModel = $tab_CalculationAutoCompleteItemModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.CalculationAutoCompleteModel
	var $tab_CalculationAutoCompleteModel = function(pm) {
		this.$itemModels = [];
		tab.Model.call(this, null, new tab.PresModelPathItem('calculationAutocompleteContextMenu'.toString(), null));
		this.swapPresModel(pm);
		var $t1 = pm.autocompleteItemList || [];
		for (var $t2 = 0; $t2 < $t1.length; $t2++) {
			var itemPm = $t1[$t2];
			this.$itemModels.push(new $tab_CalculationAutoCompleteItemModel(this, itemPm));
		}
	};
	$tab_CalculationAutoCompleteModel.__typeName = 'tab.CalculationAutoCompleteModel';
	global.tab.CalculationAutoCompleteModel = $tab_CalculationAutoCompleteModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ClientCommands.CalculationCommands
	var $tab_CalculationCommands = function() {
	};
	$tab_CalculationCommands.__typeName = 'tab.CalculationCommands';
	$tab_CalculationCommands.registerCommandInterceptors = function CalculationCommands$RegisterCommandInterceptors() {
		tab.ServerCommands.addCommandInterceptor($tab_CalculationCommands.$handleEditPillCommand, 'tabdoc', { ns: 'tabdoc', cmd: 'edit-pill' }.cmd);
		tab.ServerCommands.addCommandInterceptor($tab_CalculationCommands.$interceptCreateCalc, 'tabdoc', { ns: 'tabdoc', cmd: 'create-calc' }.cmd);
		tab.ServerCommands.addCommandInterceptor($tab_CalculationCommands.$interceptEditCalc, 'tabdoc', { ns: 'tabdoc', cmd: 'edit-calc' }.cmd);
		tab.ServerCommands.addCommandInterceptor($tab_CalculationCommands.$interceptEditCopyCalc, 'tabdoc', { ns: 'tabdoc', cmd: 'edit-copy-calc' }.cmd);
	};
	$tab_CalculationCommands.$interceptCreateCalc = function CalculationCommands$InterceptCreateCalc(c) {
		if (ss.keyExists(c.commandParams, 'fn')) {
			$tab_CalculationCommands.createCalculation(c.commandParams['datasource'], c.commandParams['fn']);
		}
		else {
			$tab_CalculationCommands.createCalculation(c.commandParams['datasource'], null);
		}
		return 1;
	};
	$tab_CalculationCommands.$interceptEditCalc = function CalculationCommands$InterceptEditCalc(c) {
		$tab_CalculationCommands.editCalculation(c.commandParams['fn'], { ns: 'tabdoc', cmd: 'edit-calc' });
		return 1;
	};
	$tab_CalculationCommands.$interceptEditCopyCalc = function CalculationCommands$InterceptEditCopyCalc(c) {
		$tab_CalculationCommands.editCalculation(c.commandParams['fn'], { ns: 'tabdoc', cmd: 'edit-copy-calc' });
		return 1;
	};
	$tab_CalculationCommands.$handleEditPillCommand = function CalculationCommands$HandleEditPillCommand(c) {
		var cmdParams = c.commandParams;
		$tab_CalculationCommands.editPill(ss.cast(cmdParams['fn'], String), ss.cast(cmdParams['shelfType'], String), parseInt(ss.cast(cmdParams['shelfPosIndex'], String)), parseInt(ss.cast(cmdParams['paneSpec'], String)));
		return 1;
	};
	$tab_CalculationCommands.createCalculation = function CalculationCommands$CreateCalculation(datasource, fn) {
		var cmdParams = {};
		cmdParams['datasource'] = datasource;
		if (ss.isValue(fn)) {
			cmdParams['fn'] = fn;
		}
		var cmd = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'create-calc' }, cmdParams);
		tab.CommandController.SendCommand(new tab.ClientCommand('immediately', function(t) {
			var pm = { datasource: datasource, pendingCalcName: '__temporary calc name__' };
			$tab_CalculationCommands.$addCalcPresModelNotificationToTransaction(t, pm, 'doc:calculation-dialog-event'.toString());
		}, cmd, null, null));
	};
	$tab_CalculationCommands.editCalculation = function CalculationCommands$EditCalculation(fn, cmdType) {
		var cmdParams = {};
		cmdParams['fn'] = fn;
		var cmd = tab.CommandUtils.newCommand(cmdType, cmdParams);
		var caption = '';
		var dataSourceName = '';
		var ds = tab.ApplicationModel.get_instance().get_workbook().get_dataSchema().findDataSourceFromGlobalFieldName(fn);
		ss.Debug.assert(ss.isValue(ds), 'DataSource should always be found');
		if (ss.isValue(ds)) {
			dataSourceName = ds.get_name();
			var f = ds.findField(fn);
			ss.Debug.assert(ss.isValue(f), 'Field should always be found');
			if (ss.isValue(f)) {
				caption = f.get_displayName();
			}
		}
		tab.CommandController.SendCommand(new tab.ClientCommand('immediately', function(t) {
			var pm = { fn: fn, calculationCaption: caption, datasource: dataSourceName, pendingCalcName: '__temporary calc name__' };
			$tab_CalculationCommands.$addCalcPresModelNotificationToTransaction(t, pm, 'doc:calculation-dialog-event'.toString());
		}, cmd, null, null));
	};
	$tab_CalculationCommands.editPill = function CalculationCommands$EditPill(fieldName, shelfType, shelfPosition, paneSpec) {
		var cmdParams = {};
		cmdParams['fn'] = fieldName;
		cmdParams['paneSpec'] = paneSpec;
		cmdParams['shelfType'] = shelfType;
		cmdParams['shelfPosIndex'] = shelfPosition;
		var cmd = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'edit-pill' }, cmdParams);
		return $tab_CalculationCommands.$sendShelfCalcCommand(shelfType, cmd, $tab_CalculationCommands.$createTypeInPillLocalCommand(shelfType, shelfPosition, paneSpec));
	};
	$tab_CalculationCommands.createAdHocCalculation = function CalculationCommands$CreateAdHocCalculation(activeDatasource, shelfType, shelfPosition, paneSpec) {
		if (ss.isNullOrEmptyString(activeDatasource)) {
			return $.Deferred();
		}
		var cmdParams = {};
		cmdParams['datasource'] = activeDatasource;
		cmdParams['paneSpec'] = paneSpec;
		cmdParams['shelfType'] = shelfType;
		cmdParams['shelfPosIndex'] = shelfPosition;
		var cmd = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'create-type-in-pill' }, cmdParams);
		return $tab_CalculationCommands.$sendShelfCalcCommand(shelfType, cmd, $tab_CalculationCommands.$createTypeInPillLocalCommand(shelfType, shelfPosition, paneSpec));
	};
	$tab_CalculationCommands.$createTypeInPillLocalCommand = function CalculationCommands$CreateTypeInPillLocalCommand(shelfType, shelfPosition, paneSpec) {
		return function(t) {
			var pm = { datasource: '__fake ds name__', pendingCalcName: '__temporary calc name__', shelfType: shelfType, shelfPosIndex: shelfPosition, paneSpec: paneSpec };
			$tab_CalculationCommands.$addCalcPresModelNotificationToTransaction(t, pm, 'doc:type-in-pill-event'.toString());
		};
	};
	$tab_CalculationCommands.$sendShelfCalcCommand = function CalculationCommands$SendShelfCalcCommand(shelfType, cmd, localCommand) {
		var deferred = $.Deferred();
		if (!$tab_CalculationCommands.isValidShelfForCalcs(shelfType)) {
			return deferred.reject();
		}
		tab.CommandController.SendCommand(new tab.ClientCommand('immediately', localCommand, cmd, function(pm) {
			var cmdPM = pm;
			deferred.resolve(ss.isValue(cmdPM) && (ss.isNullOrUndefined(cmdPM.valid) || cmdPM.valid));
		}, function(e) {
			deferred.reject();
		}));
		return deferred;
	};
	$tab_CalculationCommands.requestAutoCompleteInfo = function CalculationCommands$RequestAutoCompleteInfo(model, formula, position) {
		var deferred = $.Deferred();
		var $t1 = new tab.CalculationAutoCompleteCmd();
		$t1.cmdParams['acSubstring'] = formula;
		$t1.cmdParams['position'] = position | 0;
		$t1.cmdParams['calculation'] = { datasource: model.get_dataSourceName(), fn: model.get_fieldName(), calculationContext: model.get_calculationContext(), useParameters: model.get_useParameters(), joinOnCalcInfo: model.get_joinOnCalcInfoPresModel() };
		$t1.set_noExceptionDialog(true);
		$t1.invoke().done(function(response) {
			deferred.resolve(new $tab_CalculationAutoCompleteModel(response.$$cmdParams['calculationAutocompleteContextMenu']));
		}).fail(function(response1) {
			deferred.reject();
		});
		return deferred.promise();
	};
	$tab_CalculationCommands.applyCalculation = function CalculationCommands$ApplyCalculation(model, fieldCaption, calcText, skipValidation, isFinished) {
		var deferred = $.Deferred();
		var cmdParams = {};
		var docCmd;
		if (model.get_isAdhoc()) {
			docCmd = { ns: 'tabdoc', cmd: 'apply-type-in-pill' };
			cmdParams['datasource'] = model.get_dataSourceName();
			cmdParams['updatedCalculationFormula'] = calcText;
			cmdParams['isFullStyling'] = true;
			cmdParams['isTypeinFinished'] = isFinished;
		}
		else {
			docCmd = { ns: 'tabdoc', cmd: 'apply-calculation' };
			cmdParams['updatedCalculationCaption'] = fieldCaption;
			cmdParams['updatedCalculationFormula'] = calcText;
			cmdParams['isFullStyling'] = true;
		}
		var localTransaction = function(t) {
			if (model.get_isAdhoc() && isFinished) {
				var calcModel = { calculationCaption: null, pendingCalcName: null, datasource: null };
				$tab_CalculationCommands.$addCalcPresModelNotificationToTransaction(t, calcModel, 'doc:type-in-pill-event'.toString());
			}
		};
		tab.CommandController.SendCommand(new tab.ClientCommand('immediately', localTransaction, tab.CommandUtils.newCommand(docCmd, cmdParams), function(pm) {
			deferred.resolve($tab_CalcApplyResponse.fromApplyCalculationResult(pm, model));
		}, function(e) {
			tab.Logger.getLogger($tab_CalculationCommands, null).debug('Exception applying calculation: %s', [e.get_message()]);
			deferred.reject();
		}));
		return deferred;
	};
	$tab_CalculationCommands.cancelCalculation = function CalculationCommands$CancelCalculation(model) {
		var cmdParams = null;
		if (model.get_isAdhoc()) {
			cmdParams = {};
			cmdParams['isTypeInPill'] = true;
		}
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'clear-calculation-model' }, cmdParams);
		tab.CommandController.SendCommand(new tab.ClientCommand('none', function(t) {
			var pm = { calculationCaption: null, pendingCalcName: null, datasource: null };
			$tab_CalculationCommands.$addCalcPresModelNotificationToTransaction(t, pm, (model.get_isAdhoc() ? 'doc:type-in-pill-event'.toString() : 'doc:calculation-dialog-event'.toString()));
		}, c, null, null));
	};
	$tab_CalculationCommands.validateCalculation = function CalculationCommands$ValidateCalculation(model, fieldCaption, calcText) {
		var deferred = $.Deferred();
		var docCmd;
		var cmdParams = {};
		cmdParams['updatedCalculationFormula'] = calcText;
		cmdParams['isFullStyling'] = true;
		if (model.get_isAdhoc()) {
			docCmd = { ns: 'tabdoc', cmd: 'validate-type-in-pill' };
			cmdParams['datasource'] = model.get_dataSourceName();
		}
		else {
			docCmd = { ns: 'tabdoc', cmd: 'validate-formula' };
			cmdParams['updatedCalculationCaption'] = fieldCaption;
		}
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(tab.CommandUtils.newCommand(docCmd, cmdParams), 'none', function(_) {
			deferred.resolve();
		}, function(_1) {
			deferred.reject();
		}));
		return deferred.promise();
	};
	$tab_CalculationCommands.startDraggingText = function CalculationCommands$StartDraggingText(text) {
		var deferred = $.Deferred();
		var cmdParams = {};
		cmdParams['sheet'] = tsConfig.current_sheet_name;
		cmdParams['isRightDrag'] = false;
		cmdParams['text'] = text;
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'get-drag-pres-model-for-text' }, cmdParams), 'none', function(pm) {
			deferred.resolve(pm);
		}, function(e) {
			deferred.reject();
		}));
		return deferred;
	};
	$tab_CalculationCommands.dropOnCalcEditor = function CalculationCommands$DropOnCalcEditor(fieldNames, dropPosition, dragSource, textSelection, context, draggedText) {
		var deferred = $.Deferred();
		var cmdParams = {};
		cmdParams['fieldVector'] = fieldNames;
		cmdParams['calcEditorDropPos'] = dropPosition;
		cmdParams['dragSource'] = dragSource;
		if (ss.isValue(textSelection)) {
			cmdParams['calcEditorTextSelection'] = textSelection;
		}
		cmdParams['isFullStyling'] = true;
		cmdParams['calculationContext'] = context;
		if (ss.isValue(draggedText)) {
			cmdParams['text'] = draggedText;
		}
		var cmd = new tab.RemoteClientCommand(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'drop-on-calc-editor' }, cmdParams), 'immediately', function(pm) {
			deferred.resolve(pm);
		}, function(e) {
			deferred.reject();
		});
		tab.CommandController.SendCommand(cmd);
		return deferred.promise();
	};
	$tab_CalculationCommands.insertFunctionInFormula = function CalculationCommands$InsertFunctionInFormula(funcModel, formula, selection) {
		var deferred = $.Deferred();
		if (ss.isNullOrUndefined(selection) || ss.isNullOrUndefined(funcModel)) {
			return deferred.reject();
		}
		var cmdParams = {};
		cmdParams['expressionFunc'] = funcModel;
		cmdParams['calculationFormula'] = formula;
		cmdParams['selectionStart'] = selection.calcEditorTextSelectionStartPos;
		cmdParams['selectionEnd'] = selection.calcEditorTextSelectionEndPos;
		var cmd = new tab.RemoteClientCommand(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'insert-function-in-formula' }, cmdParams), 'immediately', function(pm) {
			deferred.resolve(pm);
		}, function(e) {
			deferred.reject();
		});
		tab.CommandController.SendCommand(cmd);
		return deferred.promise();
	};
	$tab_CalculationCommands.isValidShelfForCalcs = function CalculationCommands$IsValidShelfForCalcs(type) {
		return type === 'columns-shelf' || type === 'rows-shelf' || type === 'encoding-shelf' || type === 'measures-shelf';
	};
	$tab_CalculationCommands.$addCalcPresModelNotificationToTransaction = function CalculationCommands$AddCalcPresModelNotificationToTransaction(t, calcPM, notificationId) {
		var $t1 = {};
		$t1['genCalculationPresModel'] = calcPM;
		var calcPresModelHolder = $t1;
		var notification = { keyId: notificationId, presModelHolder: calcPresModelHolder };
		var notifications = new Array(1);
		notifications[0] = notification;
		var pm = t.makeMutablePresModel(tab.ApplicationModel.get_instance(), false);
		pm.presentationLayerNotification = notifications;
	};
	global.tab.CalculationCommands = $tab_CalculationCommands;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.CategoricalColorEditorDialogModel
	var $tab_CategoricalColorEditorDialogModel = function(parent) {
		this.$2$ShowOrUpdateDialogField = null;
		tab.Model.call(this, parent, new tab.PresModelPathItem('doc:web-categorical-color-dialog-event'.toString(), null));
	};
	$tab_CategoricalColorEditorDialogModel.__typeName = 'tab.CategoricalColorEditorDialogModel';
	global.tab.CategoricalColorEditorDialogModel = $tab_CategoricalColorEditorDialogModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ChangeLineInterpolationCmd
	var $tab_ChangeLineInterpolationCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_ChangeLineInterpolationCmd$Response]).call(this);
	};
	$tab_ChangeLineInterpolationCmd.__typeName = 'tab.ChangeLineInterpolationCmd';
	global.tab.ChangeLineInterpolationCmd = $tab_ChangeLineInterpolationCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ChangeLineInterpolationCmd.Response
	var $tab_ChangeLineInterpolationCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_ChangeLineInterpolationCmd$Response.__typeName = 'tab.ChangeLineInterpolationCmd$Response';
	global.tab.ChangeLineInterpolationCmd$Response = $tab_ChangeLineInterpolationCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.CloseAuthoringCmd
	var $tab_CloseAuthoringCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_CloseAuthoringCmd$Response]).call(this);
	};
	$tab_CloseAuthoringCmd.__typeName = 'tab.CloseAuthoringCmd';
	$tab_CloseAuthoringCmd.get_commandName = function CloseAuthoringCmd$get_CommandName() {
		return 'close-authoring';
	};
	global.tab.CloseAuthoringCmd = $tab_CloseAuthoringCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.CloseAuthoringCmd.Response
	var $tab_CloseAuthoringCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_CloseAuthoringCmd$Response.__typeName = 'tab.CloseAuthoringCmd$Response';
	global.tab.CloseAuthoringCmd$Response = $tab_CloseAuthoringCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.CloseDataSourceErrorDialogModel
	var $tab_CloseDataSourceErrorDialogModel = function(parent) {
		this.$2$NewErrorField = null;
		tab.Model.call(this, parent, new tab.PresModelPathItem('doc:close-data-source-error-dialog-event'.toString(), null));
	};
	$tab_CloseDataSourceErrorDialogModel.__typeName = 'tab.CloseDataSourceErrorDialogModel';
	global.tab.CloseDataSourceErrorDialogModel = $tab_CloseDataSourceErrorDialogModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.CloseRefLineEditorCmd
	var $tab_CloseRefLineEditorCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_CloseRefLineEditorCmd$Response]).call(this);
	};
	$tab_CloseRefLineEditorCmd.__typeName = 'tab.CloseRefLineEditorCmd';
	global.tab.CloseRefLineEditorCmd = $tab_CloseRefLineEditorCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.CloseRefLineEditorCmd.Response
	var $tab_CloseRefLineEditorCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_CloseRefLineEditorCmd$Response.__typeName = 'tab.CloseRefLineEditorCmd$Response';
	global.tab.CloseRefLineEditorCmd$Response = $tab_CloseRefLineEditorCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.CommandBuilder
	var $tab_CommandBuilder = function(command) {
		this.$1$CommandField = null;
		this.set_command(command);
	};
	$tab_CommandBuilder.__typeName = 'tab.CommandBuilder';
	global.tab.CommandBuilder = $tab_CommandBuilder;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.DashboardZoneCommands
	var $tab_DashboardZoneCommands = function() {
	};
	$tab_DashboardZoneCommands.__typeName = 'tab.DashboardZoneCommands';
	$tab_DashboardZoneCommands.moveZone = function DashboardZoneCommands$MoveZone(zoneId, dropPos, grabPoint, floating) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'move-zone' }, null);
		c.commandParams = {};
		c.commandParams['zoneId'] = zoneId;
		c.commandParams['addAsFloating'] = floating;
		c.commandParams['dashboard'] = tsConfig.current_sheet_name;
		c.commandParams['dropLocation'] = { x: dropPos.x | 0, y: dropPos.y | 0 };
		c.commandParams['grabLocation'] = { x: grabPoint.x | 0, y: grabPoint.y | 0 };
		return tab.CommandController.SendCommandWithDeferredReturn(c, 'immediately');
	};
	$tab_DashboardZoneCommands.hideZone = function DashboardZoneCommands$HideZone(zoneId) {
		var $t1 = new $tab_HideZoneCmd();
		$t1.cmdParams['dashboard'] = tsConfig.current_sheet_name;
		$t1.cmdParams['zoneId'] = zoneId | 0;
		$t1.cmdParams['deleteOrphans'] = false;
		$t1.set_uiBlocking('immediately');
		return $t1.invoke();
	};
	$tab_DashboardZoneCommands.replaceZone = function DashboardZoneCommands$ReplaceZone(zoneId, newWorksheet) {
		var $t1 = new $tab_ReplaceZoneCmd();
		$t1.cmdParams['dashboard'] = tsConfig.current_sheet_name;
		$t1.cmdParams['zoneId'] = zoneId | 0;
		$t1.cmdParams['worksheet'] = newWorksheet;
		$t1.set_uiBlocking('immediately');
		return $t1.invoke();
	};
	$tab_DashboardZoneCommands.selectZoneParent = function DashboardZoneCommands$SelectZoneParent(zoneId) {
		var $t1 = new $tab_SelectZoneParentCmd();
		$t1.cmdParams['zoneId'] = zoneId | 0;
		$t1.cmdParams['dashboard'] = tsConfig.current_sheet_name;
		$t1.invoke();
	};
	$tab_DashboardZoneCommands.getZoneResizeInfo = function DashboardZoneCommands$GetZoneResizeInfo(dashboardX, dashboardY) {
		var $t1 = new $tab_GetDragZoneResizeCmd();
		$t1.cmdParams['dashboard'] = tsConfig.current_sheet_name;
		$t1.cmdParams['x'] = dashboardX | 0;
		$t1.cmdParams['y'] = dashboardY | 0;
		var cmd = $t1;
		return cmd.invoke();
	};
	$tab_DashboardZoneCommands.resizeTiledZone = function DashboardZoneCommands$ResizeTiledZone(edge, containerId, destPix, dragHorz, moveType) {
		var $t1 = new $tab_MoveDashboardEdgeCmd();
		$t1.cmdParams['zoneEdgePp'] = edge;
		$t1.cmdParams['zoneId'] = containerId | 0;
		$t1.cmdParams['destPix'] = destPix | 0;
		$t1.cmdParams['dragHorz'] = dragHorz;
		$t1.cmdParams['zoneEdgeMoveType'] = moveType;
		$t1.set_uiBlocking('immediately');
		$t1.invoke();
	};
	$tab_DashboardZoneCommands.resizeFreeFormZone = function DashboardZoneCommands$ResizeFreeFormZone(zone, x, y, width, height) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'move-free-form-zone' }, null);
		c.commandParams = {};
		c.commandParams['dashboard'] = tsConfig.current_sheet_name;
		var zoneId = (ss.isNullOrUndefined(zone) ? tab.ZoneModel.rootZoneID : zone.get_zoneId());
		c.commandParams['zoneId'] = zoneId;
		c.commandParams['x'] = x | 0;
		c.commandParams['y'] = y | 0;
		c.commandParams['w'] = width | 0;
		c.commandParams['h'] = height | 0;
		var deferredResult = tab.CommandController.SendCommandWithDeferredReturn(c, 'immediately');
		deferredResult.always(function() {
			tab.Model.nonWorldUpdate(ss.mkdel(zone, zone.resetZoneAndChildrenLocalChanges));
		});
		return deferredResult;
	};
	$tab_DashboardZoneCommands.setZoneStyle = function DashboardZoneCommands$SetZoneStyle(zoneId, zoneStyle, dashboard) {
		var $t1 = new $tab_SetZoneStyleCmd();
		$t1.cmdParams['zoneId'] = zoneId | 0;
		$t1.cmdParams['styledBox'] = zoneStyle;
		$t1.cmdParams['dashboard'] = dashboard;
		$t1.set_uiBlocking('immediately');
		return $t1.invoke();
	};
	$tab_DashboardZoneCommands.toggleZoneTitle = function DashboardZoneCommands$ToggleZoneTitle(zoneId) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'toggle-zone-title' }, null);
		c.commandParams = {};
		c.commandParams['zoneId'] = zoneId;
		c.commandParams['dashboard'] = tsConfig.current_sheet_name;
		tab.CommandController.SendCommand(tab.RemoteClientCommand.create(c, 'immediately', null, null));
	};
	$tab_DashboardZoneCommands.toggleFreeFormZone = function DashboardZoneCommands$ToggleFreeFormZone(zoneId) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'toggle-freeform-zone' }, null);
		c.commandParams = {};
		c.commandParams['zoneId'] = zoneId;
		c.commandParams['dashboard'] = tsConfig.current_sheet_name;
		tab.CommandController.SendCommand(tab.RemoteClientCommand.create(c, 'immediately', null, null));
	};
	$tab_DashboardZoneCommands.editWebZoneUrl = function DashboardZoneCommands$EditWebZoneUrl(zoneId, url) {
		var $t1 = new $tab_EditWebZoneUrlCmd();
		$t1.cmdParams['dashboard'] = tsConfig.current_sheet_name;
		$t1.cmdParams['zoneId'] = zoneId | 0;
		$t1.cmdParams['urlString'] = url;
		$t1.set_uiBlocking('immediately');
		var cmd = $t1;
		cmd.invoke();
	};
	$tab_DashboardZoneCommands.modifyZoneZOrder = function DashboardZoneCommands$ModifyZoneZOrder(zoneId, type, delta) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'modify-zone-z-order' }, null);
		c.commandParams = {};
		c.commandParams['zoneId'] = zoneId;
		c.commandParams['modifyZoneZOrderType'] = type;
		if (ss.isValue(delta)) {
			c.commandParams['position'] = delta;
		}
		tab.CommandController.SendCommand(tab.RemoteClientCommand.create(c, 'immediately', null, null));
	};
	global.tab.DashboardZoneCommands = $tab_DashboardZoneCommands;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.DistributionModel
	var $tab_DistributionModel = function(parent) {
		this.$2$ModelUpdatedField = null;
		this.$2$ValidLabelTypesField = null;
		this.$2$ValidTooltipTypesField = null;
		this.$2$ValidCustomLabelTagsField = null;
		this.$2$DistributionPercentagesModelField = null;
		this.$2$DistributionPercentilesModelField = null;
		this.$2$DistributionQuantilesModelField = null;
		this.$2$DistributionStandardDeviationModelField = null;
		tab.Model.call(this, parent, new tab.PresModelPathItem('referenceLine'.toString(), null));
		this.pm = {};
		this.set_distributionPercentagesModel(new $tab_DistributionPercentagesModel(this));
		this.set_distributionPercentilesModel(new $tab_DistributionPercentilesModel(this));
		this.set_distributionQuantilesModel(new $tab_DistributionQuantilesModel(this));
		this.set_distributionStandardDeviationModel(new $tab_DistributionStandardDeviationModel(this));
	};
	$tab_DistributionModel.__typeName = 'tab.DistributionModel';
	global.tab.DistributionModel = $tab_DistributionModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.DistributionPercentagesModel
	var $tab_DistributionPercentagesModel = function(parent) {
		this.$2$ModelUpdatedField = null;
		this.$2$VisualIDField = null;
		this.$2$RefLineIDField = null;
		this.$2$ValidFormulaTypesField = null;
		this.$2$FieldPickerComboField = null;
		tab.Model.call(this, parent, new tab.PresModelPathItem('distributionPercentages'.toString(), null));
		this.pm = {};
		this.set_fieldPickerCombo(new $tab_FieldPickerComboModel(this));
		this.set_validFormulaTypes([]);
	};
	$tab_DistributionPercentagesModel.__typeName = 'tab.DistributionPercentagesModel';
	global.tab.DistributionPercentagesModel = $tab_DistributionPercentagesModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.DistributionPercentilesModel
	var $tab_DistributionPercentilesModel = function(parent) {
		this.$2$ModelUpdatedField = null;
		this.$2$VisualIDField = null;
		this.$2$RefLineIDField = null;
		this.$2$PercentileComboModelField = null;
		tab.Model.call(this, parent, new tab.PresModelPathItem('distributionPercentiles'.toString(), null));
		this.pm = {};
		this.set_percentileComboModel(new tab.EditValueWidgetModel(this, 'distributionPercentilesLevelCombo'));
	};
	$tab_DistributionPercentilesModel.__typeName = 'tab.DistributionPercentilesModel';
	global.tab.DistributionPercentilesModel = $tab_DistributionPercentilesModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.DistributionQuantilesModel
	var $tab_DistributionQuantilesModel = function(parent) {
		this.$2$ModelUpdatedField = null;
		this.$2$VisualIDField = null;
		this.$2$DistributionQuantilesComboField = null;
		this.$2$RefLineIDField = null;
		tab.Model.call(this, parent, new tab.PresModelPathItem('distributionQuantiles'.toString(), null));
		this.pm = {};
		this.set_distributionQuantilesCombo(new tab.EditValueWidgetModel(this, 'distributionQuantilesLevelCombo'));
	};
	$tab_DistributionQuantilesModel.__typeName = 'tab.DistributionQuantilesModel';
	global.tab.DistributionQuantilesModel = $tab_DistributionQuantilesModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.DistributionStandardDeviationModel
	var $tab_DistributionStandardDeviationModel = function(parent) {
		this.$2$ModelUpdatedField = null;
		this.$2$VisualIDField = null;
		this.$2$RefLineIDField = null;
		this.$2$ValidStDevTypesField = null;
		tab.Model.call(this, parent, new tab.PresModelPathItem('distributionStddev'.toString(), null));
		this.pm = {};
	};
	$tab_DistributionStandardDeviationModel.__typeName = 'tab.DistributionStandardDeviationModel';
	global.tab.DistributionStandardDeviationModel = $tab_DistributionStandardDeviationModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.Utility.DragToShowMeInfo
	var $tab_DragToShowMeInfo = function(fieldModel, encodingType) {
		this.fieldModel = null;
		this.encodingType = null;
		this.fieldModel = fieldModel;
		this.encodingType = encodingType;
	};
	$tab_DragToShowMeInfo.__typeName = 'tab.DragToShowMeInfo';
	global.tab.DragToShowMeInfo = $tab_DragToShowMeInfo;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.Utility.DragToShowMeInfoWrapper
	var $tab_DragToShowMeInfoWrapper = function(isFromDataSchemaPane, isCopyDrag, isShiftDrag) {
		this.infoList = [];
		this.isFromDataSchemaPane = false;
		this.isCopyDrag = false;
		this.isShiftDrag = false;
		this.isFromDataSchemaPane = isFromDataSchemaPane;
		this.isCopyDrag = isCopyDrag;
		this.isShiftDrag = isShiftDrag;
	};
	$tab_DragToShowMeInfoWrapper.__typeName = 'tab.DragToShowMeInfoWrapper';
	global.tab.DragToShowMeInfoWrapper = $tab_DragToShowMeInfoWrapper;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.DropReferenceLineOnFilterShelfCmd
	var $tab_DropReferenceLineOnFilterShelfCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_DropReferenceLineOnFilterShelfCmd$Response]).call(this);
	};
	$tab_DropReferenceLineOnFilterShelfCmd.__typeName = 'tab.DropReferenceLineOnFilterShelfCmd';
	global.tab.DropReferenceLineOnFilterShelfCmd = $tab_DropReferenceLineOnFilterShelfCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.DropReferenceLineOnFilterShelfCmd.Response
	var $tab_DropReferenceLineOnFilterShelfCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_DropReferenceLineOnFilterShelfCmd$Response.__typeName = 'tab.DropReferenceLineOnFilterShelfCmd$Response';
	global.tab.DropReferenceLineOnFilterShelfCmd$Response = $tab_DropReferenceLineOnFilterShelfCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.DropReferenceLineOnSchemaViewerCmd
	var $tab_DropReferenceLineOnSchemaViewerCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_DropReferenceLineOnSchemaViewerCmd$Response]).call(this);
	};
	$tab_DropReferenceLineOnSchemaViewerCmd.__typeName = 'tab.DropReferenceLineOnSchemaViewerCmd';
	global.tab.DropReferenceLineOnSchemaViewerCmd = $tab_DropReferenceLineOnSchemaViewerCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.DropReferenceLineOnSchemaViewerCmd.Response
	var $tab_DropReferenceLineOnSchemaViewerCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_DropReferenceLineOnSchemaViewerCmd$Response.__typeName = 'tab.DropReferenceLineOnSchemaViewerCmd$Response';
	global.tab.DropReferenceLineOnSchemaViewerCmd$Response = $tab_DropReferenceLineOnSchemaViewerCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.DropReferenceLineOnShelfCmd
	var $tab_DropReferenceLineOnShelfCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_DropReferenceLineOnShelfCmd$Response]).call(this);
	};
	$tab_DropReferenceLineOnShelfCmd.__typeName = 'tab.DropReferenceLineOnShelfCmd';
	global.tab.DropReferenceLineOnShelfCmd = $tab_DropReferenceLineOnShelfCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.DropReferenceLineOnShelfCmd.Response
	var $tab_DropReferenceLineOnShelfCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_DropReferenceLineOnShelfCmd$Response.__typeName = 'tab.DropReferenceLineOnShelfCmd$Response';
	global.tab.DropReferenceLineOnShelfCmd$Response = $tab_DropReferenceLineOnShelfCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.AuthoringDomain.DialogCommands.EditAxisDialogCommands
	var $tab_EditAxisDialogCommands = function() {
	};
	$tab_EditAxisDialogCommands.__typeName = 'tab.EditAxisDialogCommands';
	$tab_EditAxisDialogCommands.getServerAxisContextMenu = function EditAxisDialogCommands$GetServerAxisContextMenu(visualId, pt, imageRegion, callback) {
		var $t1 = new tab.BuildServerAxisContextMenuCmd();
		$t1.cmdParams['visualIdPresModel'] = visualId;
		$t1.cmdParams['regionPoint'] = tab.PointUtil.toPresModel(pt);
		$t1.cmdParams['r'] = imageRegion;
		var cmd = $t1;
		cmd.invoke().then(callback);
	};
	$tab_EditAxisDialogCommands.showEditAxisDialogInBrowserRenderedMode = function EditAxisDialogCommands$ShowEditAxisDialogInBrowserRenderedMode(node) {
		var $t1 = new tab.ShowEditAxisDialogCmd();
		$t1.cmdParams['fn'] = node.fn;
		$t1.cmdParams['axisOrientation'] = node.axisOrientation;
		$t1.cmdParams['duplicateIndex'] = node.duplicateIndex | 0;
		$t1.invoke();
		tab.AxisAuthoringTelemetry.logDoubleTapAxisEvent();
	};
	$tab_EditAxisDialogCommands.showEditAxisDialogInServerRenderedMode = function EditAxisDialogCommands$ShowEditAxisDialogInServerRenderedMode(visualId, pt, imageRegion) {
		var $t1 = new tab.DoubleClickRegionNoReturnServerCmd();
		$t1.cmdParams['visualIdPresModel'] = visualId;
		$t1.cmdParams['regionPoint'] = tab.PointUtil.toPresModel(pt);
		$t1.cmdParams['r'] = imageRegion;
		$t1.invoke();
		tab.AxisAuthoringTelemetry.logDoubleTapAxisEvent();
	};
	global.tab.EditAxisDialogCommands = $tab_EditAxisDialogCommands;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.EditWebZoneUrlCmd
	var $tab_EditWebZoneUrlCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_EditWebZoneUrlCmd$Response]).call(this);
	};
	$tab_EditWebZoneUrlCmd.__typeName = 'tab.EditWebZoneUrlCmd';
	global.tab.EditWebZoneUrlCmd = $tab_EditWebZoneUrlCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.EditWebZoneUrlCmd.Response
	var $tab_EditWebZoneUrlCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_EditWebZoneUrlCmd$Response.__typeName = 'tab.EditWebZoneUrlCmd$Response';
	global.tab.EditWebZoneUrlCmd$Response = $tab_EditWebZoneUrlCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.Models.FieldPickerComboModel
	var $tab_FieldPickerComboModel = function(parent) {
		this.$2$ModelUpdatedField = null;
		tab.Model.call(this, parent, new tab.PresModelPathItem('fieldPickerCombo'.toString(), null));
	};
	$tab_FieldPickerComboModel.__typeName = 'tab.FieldPickerComboModel';
	global.tab.FieldPickerComboModel = $tab_FieldPickerComboModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.Models.FieldPickerFieldModel
	var $tab_FieldPickerFieldModel = function(presModel) {
		this.fieldName = null;
		this.fieldCaption = null;
		this.fieldSummary = null;
		this.isInPrimaryDataSource = false;
		this.isFieldParameter = false;
		this.isTableCalc = false;
		this.fieldName = presModel.fn;
		this.fieldCaption = presModel.fieldCaption;
		this.fieldSummary = presModel.fieldSummary;
		this.isInPrimaryDataSource = presModel.isInPrimaryDataSource;
		this.isFieldParameter = presModel.isFieldParameter;
		this.isTableCalc = presModel.isTableCalc;
	};
	$tab_FieldPickerFieldModel.__typeName = 'tab.FieldPickerFieldModel';
	global.tab.FieldPickerFieldModel = $tab_FieldPickerFieldModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.FormatCommands
	var $tab_FormatCommands = function() {
	};
	$tab_FormatCommands.__typeName = 'tab.FormatCommands';
	$tab_FormatCommands.showFormatPane = function FormatCommands$ShowFormatPane() {
		tab.FormatContainerModel.get_formatPaneModel().set_isVisible(true);
	};
	$tab_FormatCommands.hideFormatPane = function FormatCommands$HideFormatPane() {
		tab.FormatContainerModel.get_formatPaneModel().set_isVisible(false);
	};
	global.tab.FormatCommands = $tab_FormatCommands;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.GetDensityColorPalettesCmd
	var $tab_GetDensityColorPalettesCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_GetDensityColorPalettesCmd$Response]).call(this);
	};
	$tab_GetDensityColorPalettesCmd.__typeName = 'tab.GetDensityColorPalettesCmd';
	global.tab.GetDensityColorPalettesCmd = $tab_GetDensityColorPalettesCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.GetDensityColorPalettesCmd.Response
	var $tab_GetDensityColorPalettesCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_GetDensityColorPalettesCmd$Response.__typeName = 'tab.GetDensityColorPalettesCmd$Response';
	global.tab.GetDensityColorPalettesCmd$Response = $tab_GetDensityColorPalettesCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.GetDragZoneResizeCmd
	var $tab_GetDragZoneResizeCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_GetDragZoneResizeCmd$Response]).call(this);
	};
	$tab_GetDragZoneResizeCmd.__typeName = 'tab.GetDragZoneResizeCmd';
	global.tab.GetDragZoneResizeCmd = $tab_GetDragZoneResizeCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.GetDragZoneResizeCmd.Response
	var $tab_GetDragZoneResizeCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_GetDragZoneResizeCmd$Response.__typeName = 'tab.GetDragZoneResizeCmd$Response';
	global.tab.GetDragZoneResizeCmd$Response = $tab_GetDragZoneResizeCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.GetRefLineDragInfoCmd
	var $tab_GetRefLineDragInfoCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_GetRefLineDragInfoCmd$Response]).call(this);
	};
	$tab_GetRefLineDragInfoCmd.__typeName = 'tab.GetRefLineDragInfoCmd';
	global.tab.GetRefLineDragInfoCmd = $tab_GetRefLineDragInfoCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.GetRefLineDragInfoCmd.Response
	var $tab_GetRefLineDragInfoCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_GetRefLineDragInfoCmd$Response.__typeName = 'tab.GetRefLineDragInfoCmd$Response';
	global.tab.GetRefLineDragInfoCmd$Response = $tab_GetRefLineDragInfoCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.GetRefLineFormulaCmd
	var $tab_GetRefLineFormulaCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_GetRefLineFormulaCmd$Response]).call(this);
	};
	$tab_GetRefLineFormulaCmd.__typeName = 'tab.GetRefLineFormulaCmd';
	global.tab.GetRefLineFormulaCmd = $tab_GetRefLineFormulaCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.GetRefLineFormulaCmd.Response
	var $tab_GetRefLineFormulaCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_GetRefLineFormulaCmd$Response.__typeName = 'tab.GetRefLineFormulaCmd$Response';
	global.tab.GetRefLineFormulaCmd$Response = $tab_GetRefLineFormulaCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.GetTrendLineDragInfoCmd
	var $tab_GetTrendLineDragInfoCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_GetTrendLineDragInfoCmd$Response]).call(this);
	};
	$tab_GetTrendLineDragInfoCmd.__typeName = 'tab.GetTrendLineDragInfoCmd';
	global.tab.GetTrendLineDragInfoCmd = $tab_GetTrendLineDragInfoCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.GetTrendLineDragInfoCmd.Response
	var $tab_GetTrendLineDragInfoCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_GetTrendLineDragInfoCmd$Response.__typeName = 'tab.GetTrendLineDragInfoCmd$Response';
	global.tab.GetTrendLineDragInfoCmd$Response = $tab_GetTrendLineDragInfoCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.HideZoneCmd
	var $tab_HideZoneCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_HideZoneCmd$Response]).call(this);
	};
	$tab_HideZoneCmd.__typeName = 'tab.HideZoneCmd';
	global.tab.HideZoneCmd = $tab_HideZoneCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.HideZoneCmd.Response
	var $tab_HideZoneCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_HideZoneCmd$Response.__typeName = 'tab.HideZoneCmd$Response';
	global.tab.HideZoneCmd$Response = $tab_HideZoneCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.MenuBarClientCommands
	var $tab_MenuBarClientCommands = function() {
	};
	$tab_MenuBarClientCommands.__typeName = 'tab.MenuBarClientCommands';
	$tab_MenuBarClientCommands.getMainMenu = function MenuBarClientCommands$GetMainMenu(item, callback) {
		switch (item) {
			case 'file':
			case 'data':
			case 'worksheet':
			case 'dashboard':
			case 'map':
			case 'format':
			case 'window': {
				var cmd = new $tab_BuildMainMenuCmd();
				cmd.cmdParams['isMobile'] = tsConfig.is_mobile;
				cmd.cmdParams['menuItemId'] = item;
				cmd.invoke().then(callback);
				break;
			}
			default: {
				ss.Debug.assert(false, 'Calling general menu helper for non-general menu');
				break;
			}
		}
	};
	$tab_MenuBarClientCommands.getAnalysisMainMenu = function MenuBarClientCommands$GetAnalysisMainMenu(callback, dataSource) {
		var cmd = new $tab_BuildMainMenuCmd();
		cmd.cmdParams['menuItemId'] = 'analysis';
		if (!ss.isNullOrEmptyString(dataSource)) {
			cmd.cmdParams['datasource'] = dataSource;
		}
		cmd.invoke().then(callback);
	};
	global.tab.MenuBarClientCommands = $tab_MenuBarClientCommands;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.MoveDashboardEdgeCmd
	var $tab_MoveDashboardEdgeCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_MoveDashboardEdgeCmd$Response]).call(this);
	};
	$tab_MoveDashboardEdgeCmd.__typeName = 'tab.MoveDashboardEdgeCmd';
	global.tab.MoveDashboardEdgeCmd = $tab_MoveDashboardEdgeCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.MoveDashboardEdgeCmd.Response
	var $tab_MoveDashboardEdgeCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_MoveDashboardEdgeCmd$Response.__typeName = 'tab.MoveDashboardEdgeCmd$Response';
	global.tab.MoveDashboardEdgeCmd$Response = $tab_MoveDashboardEdgeCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.AuthoringDomain.Utility.NavigationUtil
	var $tab_NavigationUtil = function() {
	};
	$tab_NavigationUtil.__typeName = 'tab.NavigationUtil';
	$tab_NavigationUtil.closeWindowIfOpenedByTableau = function NavigationUtil$CloseWindowIfOpenedByTableau(logger) {
		var window = tab.WindowHelper.get_windowSelf();
		var opener = tab.WindowHelper.getOpener(window);
		if (ss.isValue(opener)) {
			try {
				var openerLocation = tab.WindowHelper.getLocation(opener);
				var isNlpExplorationPageUri = tab.FeatureFlags.isEnabled('NLBox') && tab.VizUriModel.createForCurrentWindowLocation(opener).get_isNlpExplorationPageUri();
				if (ss.isValue(openerLocation.href) && !isNlpExplorationPageUri) {
					tab.WindowHelper.close(window);
				}
			}
			catch ($t1) {
				logger.debug("The authoring session's new window is not from embedded view.", []);
			}
		}
	};
	$tab_NavigationUtil.redirectToDataSources = function NavigationUtil$RedirectToDataSources(queryParams) {
		var newUrl = tsConfig.site_root + '/datasources';
		tab.WindowHelper.setLocationHref(tab.WindowHelper.get_windowSelf(), tab.MiscUtil.replaceUriQueryParameters(newUrl, queryParams));
	};
	global.tab.NavigationUtil = $tab_NavigationUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.NotificationForwarder
	var $tab_NotificationForwarder = function(id) {
		this.$queuedNotifications = [];
		this.$receiver = null;
		this.$notificationId = null;
		this.$notificationId = id;
		tab.ApplicationModel.get_instance().registerNotificationHandler(id, ss.mkdel(this, this.$handler));
	};
	$tab_NotificationForwarder.__typeName = 'tab.NotificationForwarder';
	global.tab.NotificationForwarder = $tab_NotificationForwarder;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.PaneClientCommands
	var $tab_PaneClientCommands = function() {
	};
	$tab_PaneClientCommands.__typeName = 'tab.PaneClientCommands';
	$tab_PaneClientCommands.setPanePrimitive = function PaneClientCommands$SetPanePrimitive(model, type) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-primitive' }, null);
		c.commandParams = $tab_PaneClientCommands.$createCommonPaneClientCommandParams(model);
		c.commandParams['primitiveType'] = type.toString();
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
	};
	$tab_PaneClientCommands.getDefaultShapeType = function PaneClientCommands$GetDefaultShapeType(layer, callback) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'get-default-shape' }, null);
		c.commandParams = $tab_PaneClientCommands.$createCommonPaneClientCommandParams(layer);
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'none', function(pm) {
			callback((_.isString(pm) ? tab.ShapeModel.fromString(pm.toString()) : null));
		}, function() {
			callback(null);
		}));
	};
	$tab_PaneClientCommands.setDefaultShapeType = function PaneClientCommands$SetDefaultShapeType(layer, shape) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-default-shape' }, null);
		c.commandParams = $tab_PaneClientCommands.$createCommonPaneClientCommandParams(layer);
		c.commandParams['shapeName'] = $tab_PaneClientCommands.$shapeModelToString(shape);
		if (tab.FeatureFlags.isEnabled('RuntimeWebAuthoringIU')) {
			var clientCommand = new tab.ClientCommand(((tab.ApplicationModel.get_instance().get_renderMode() === 'render-mode-client') ? 'none' : 'immediately'), function(t) {
				$tab_PaneClientCommands.$setDefaultShapeTypeLocal(t, shape);
			}, c, null, null);
			tab.CommandController.SendCommand(clientCommand);
		}
		else {
			tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
		}
	};
	$tab_PaneClientCommands.$setDefaultShapeTypeLocal = function PaneClientCommands$SetDefaultShapeTypeLocal(t, shape) {
		if (ss.isValue(shape.get_palette()) && ss.unbox(shape.get_palette()) !== 'filled') {
			return;
		}
		var encoded = tab.SceneDataUtil.convertShapeToNumber(shape);
		var visualModel = tab.ModelUtils.getVisualModel(tab.ApplicationModel.get_instance(), tsConfig.current_sheet_name);
		visualModel.updateRuntimeHandles(t, 3, $tab_PaneClientCommands.$updatePaneStylesLocal(function(paneStyles) {
			paneStyles.DefaultShape = [encoded];
		}));
	};
	$tab_PaneClientCommands.toggleMarkLabels = function PaneClientCommands$ToggleMarkLabels(layer) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'toggle-mark-labels' }, null);
		c.commandParams = {};
		c.commandParams['worksheet'] = tsConfig.current_sheet_name;
		if (ss.isValue(layer) && layer.get_id() > 0) {
			c.commandParams['paneSpec'] = layer.get_id().toString();
		}
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
	};
	$tab_PaneClientCommands.setMarkSize = function PaneClientCommands$SetMarkSize(layer, newSize) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-mark-size' }, null);
		c.commandParams = {};
		c.commandParams = $tab_PaneClientCommands.$createCommonPaneClientCommandParams(layer);
		c.commandParams['markScale'] = newSize.toString();
		if (tab.FeatureFlags.isEnabled('RuntimeWebAuthoringIU')) {
			var clientCommand = new tab.ClientCommand(((tab.ApplicationModel.get_instance().get_renderMode() === 'render-mode-client') ? 'none' : 'immediately'), function(t) {
				$tab_PaneClientCommands.$setMarkSizeLocal(t, newSize);
			}, c, null, null);
			tab.CommandController.SendCommand(clientCommand);
		}
		else {
			tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
		}
	};
	$tab_PaneClientCommands.$setMarkSizeLocal = function PaneClientCommands$SetMarkSizeLocal(t, newSize) {
		var visualModel = tab.ModelUtils.getVisualModel(tab.ApplicationModel.get_instance(), tsConfig.current_sheet_name);
		visualModel.updateRuntimeHandles(t, 4, $tab_PaneClientCommands.$updatePaneStylesLocal(function(paneStyles) {
			paneStyles.DefaultSize = [newSize];
		}));
	};
	$tab_PaneClientCommands.resetTooltip = function PaneClientCommands$ResetTooltip(layer) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'reset-tooltip' }, null);
		c.commandParams = {};
		c.commandParams['worksheet'] = tsConfig.current_sheet_name;
		if (ss.isValue(layer) && layer.get_id() > 0) {
			c.commandParams['paneSpec'] = layer.get_id().toString();
		}
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
	};
	$tab_PaneClientCommands.getDefaultColor = function PaneClientCommands$GetDefaultColor(layer, callback) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'get-default-color' }, null);
		c.commandParams = $tab_PaneClientCommands.$createCommonPaneClientCommandParams(layer);
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'none', function(pm) {
			callback((_.isString(pm) ? tab.ColorModel.fromColorCode(pm.toString()) : null));
		}, function() {
			callback(null);
		}));
	};
	$tab_PaneClientCommands.setDefaultColor = function PaneClientCommands$SetDefaultColor(layer, color) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-default-color' }, null);
		c.commandParams = $tab_PaneClientCommands.$createCommonPaneClientCommandParams(layer);
		c.commandParams['defaultColor'] = color.toRgba255();
		if (tab.FeatureFlags.isEnabled('RuntimeWebAuthoringIU')) {
			var clientCommand = new tab.ClientCommand(((tab.ApplicationModel.get_instance().get_renderMode() === 'render-mode-client') ? 'none' : 'immediately'), function(t) {
				$tab_PaneClientCommands.$setDefaultColorLocal(t, color);
			}, c, null, null);
			tab.CommandController.SendCommand(clientCommand);
		}
		else {
			tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
		}
	};
	$tab_PaneClientCommands.$setDefaultColorLocal = function PaneClientCommands$SetDefaultColorLocal(t, color) {
		var encoded = color.toArgbInt();
		var visualModel = tab.ModelUtils.getVisualModel(tab.ApplicationModel.get_instance(), tsConfig.current_sheet_name);
		visualModel.updateRuntimeHandles(t, 2, $tab_PaneClientCommands.$updatePaneStylesLocal(function(paneStyles) {
			paneStyles.DefaultMarkColor = [encoded];
		}));
	};
	$tab_PaneClientCommands.setSteppedColor = function PaneClientCommands$SetSteppedColor(layer, stepCount) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-quantitative-color' }, null);
		c.commandParams = $tab_PaneClientCommands.$createCommonPaneClientCommandParams(layer);
		c.commandParams['steps'] = stepCount.toString();
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
	};
	$tab_PaneClientCommands.reverseColor = function PaneClientCommands$ReverseColor(layer, newValue) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-quantitative-color' }, null);
		c.commandParams = $tab_PaneClientCommands.$createCommonPaneClientCommandParams(layer);
		c.commandParams['isReversed'] = newValue.toString();
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
	};
	$tab_PaneClientCommands.setTotalsInEncoding = function PaneClientCommands$SetTotalsInEncoding(layer, totalsInclusion) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-quantitative-color' }, null);
		c.commandParams = $tab_PaneClientCommands.$createCommonPaneClientCommandParams(layer);
		c.commandParams['totalsInclusionValue'] = totalsInclusion.toString();
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
	};
	$tab_PaneClientCommands.setQuantColorPalette = function PaneClientCommands$SetQuantColorPalette(layer, newPaletteId) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-quantitative-color' }, null);
		c.commandParams = $tab_PaneClientCommands.$createCommonPaneClientCommandParams(layer);
		c.commandParams['colorPaletteId'] = newPaletteId;
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
	};
	$tab_PaneClientCommands.setCatColorPalette = function PaneClientCommands$SetCatColorPalette(layer, newPaletteId) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-categorical-color' }, null);
		c.commandParams = $tab_PaneClientCommands.$createCommonPaneClientCommandParams(layer);
		c.commandParams['colorPaletteId'] = newPaletteId;
		var isInstance = true;
		c.commandParams['isInstance'] = isInstance.toString();
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
	};
	$tab_PaneClientCommands.setColorAlphaLevel = function PaneClientCommands$SetColorAlphaLevel(layer, newAlphaLevel) {
		if (isNaN(newAlphaLevel)) {
			return;
		}
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'change-alpha-level' }, null);
		c.commandParams = $tab_PaneClientCommands.$createCommonPaneClientCommandParams(layer);
		c.commandParams['alphaLevel'] = newAlphaLevel.toString();
		if (tab.FeatureFlags.isEnabled('RuntimeWebAuthoringIU')) {
			var clientCommand = new tab.ClientCommand(((tab.ApplicationModel.get_instance().get_renderMode() === 'render-mode-client') ? 'none' : 'immediately'), function(t) {
				$tab_PaneClientCommands.$setColorAlphaLevelLocal(t, newAlphaLevel, layer.get_paneDescriptorKeys());
			}, c, null, null);
			tab.CommandController.SendCommand(clientCommand);
		}
		else {
			tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
		}
	};
	$tab_PaneClientCommands.$setColorAlphaLevelLocal = function PaneClientCommands$SetColorAlphaLevelLocal(t, newAlphaLevel, paneDescriptors) {
		var visualModel = tab.ModelUtils.getVisualModel(tab.ApplicationModel.get_instance(), tsConfig.current_sheet_name);
		var encoded = ss.Int32.trunc(newAlphaLevel);
		var localWork = function(handles) {
			var newDataStoreHandle = $.Deferred();
			var rp = new tab.RuePacker();
			for (var $t1 = 0; $t1 < paneDescriptors.length; $t1++) {
				var paneDescriptor = paneDescriptors[$t1];
				rp.addInt32((new tab.LayoutInputStoreKeys()).pdMarksData(paneDescriptor).parameters().alpha().toString(), encoded);
			}
			tab.RuntimeWebModule.proxy.rueUpdateCommandHex(handles.get_VM(), tab.HexEncoder.encodeBufferToHex(rp.pack())).done(function(dataStoreHandle) {
				newDataStoreHandle.resolve(dataStoreHandle);
			}).fail(function(dataStoreHandle1) {
				newDataStoreHandle.reject();
			});
			return newDataStoreHandle;
		};
		visualModel.updateRuntimeHandles(t, 0, localWork);
	};
	$tab_PaneClientCommands.setMarksBorderColor = function PaneClientCommands$SetMarksBorderColor(layer, color, isAuto, isNone) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'change-border' }, null);
		c.commandParams = {};
		c.commandParams['worksheet'] = tsConfig.current_sheet_name;
		c.commandParams['paneSpec'] = layer.get_id().toString();
		c.commandParams['color'] = color.toString();
		c.commandParams['isAuto'] = isAuto.toString();
		c.commandParams['isNone'] = isNone.toString();
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
	};
	$tab_PaneClientCommands.setMarksHaloColor = function PaneClientCommands$SetMarksHaloColor(layer, color, isAuto, isNone) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'change-halo' }, null);
		c.commandParams = {};
		c.commandParams['worksheet'] = tsConfig.current_sheet_name;
		c.commandParams['paneSpec'] = layer.get_id().toString();
		c.commandParams['color'] = color.toString();
		c.commandParams['isAuto'] = isAuto.toString();
		c.commandParams['isNone'] = isNone.toString();
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
	};
	$tab_PaneClientCommands.setReferenceLineConstantValue = function PaneClientCommands$SetReferenceLineConstantValue(constantValue, refLineId) {
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-reference-line-constant-value' }, null);
		c.commandParams = {};
		c.commandParams['constantValue'] = constantValue;
		c.commandParams['referenceLineId'] = refLineId;
		tab.CommandController.SendCommand(new tab.RemoteClientCommand(c, 'immediately', null, null));
	};
	$tab_PaneClientCommands.setDensityColorEncoding = function PaneClientCommands$SetDensityColorEncoding(layer, paletteId) {
		var $t1 = new $tab_SetDensityColorEncodingCmd();
		$t1.cmdParams['worksheet'] = tsConfig.current_sheet_name;
		$t1.cmdParams['paneSpec'] = layer.get_id() | 0;
		$t1.cmdParams['densityColorPalette'] = paletteId;
		$t1.invoke();
	};
	$tab_PaneClientCommands.setDensityKernelSize = function PaneClientCommands$SetDensityKernelSize(layer, kernelSize) {
		var $t1 = new $tab_SetDensityKernelSizeCmd();
		$t1.cmdParams['worksheet'] = tsConfig.current_sheet_name;
		$t1.cmdParams['paneSpec'] = layer.get_id() | 0;
		$t1.cmdParams['densityKernelSize'] = kernelSize;
		$t1.invoke();
	};
	$tab_PaneClientCommands.setDensityIntensity = function PaneClientCommands$SetDensityIntensity(layer, intensityPercentage) {
		var $t1 = new $tab_SetDensityIntensityCmd();
		$t1.cmdParams['worksheet'] = tsConfig.current_sheet_name;
		$t1.cmdParams['paneSpec'] = layer.get_id() | 0;
		$t1.cmdParams['densityIntensityPercentage'] = intensityPercentage;
		$t1.invoke();
	};
	$tab_PaneClientCommands.getHeatmapColorPalettes = function PaneClientCommands$GetHeatmapColorPalettes(layer, callback) {
		var onSuccess = function(response) {
			callback(response.$$cmdParams['colorPalettes']);
		};
		var onFail = function(response1) {
			callback([]);
		};
		var $t1 = new $tab_GetDensityColorPalettesCmd();
		$t1.cmdParams['worksheet'] = tsConfig.current_sheet_name;
		$t1.cmdParams['paneSpec'] = layer.get_id() | 0;
		$t1.invoke().then(onSuccess, onFail);
	};
	$tab_PaneClientCommands.$createCommonPaneClientCommandParams = function PaneClientCommands$CreateCommonPaneClientCommandParams(layer) {
		var commandParams = {};
		commandParams['worksheet'] = tsConfig.current_sheet_name;
		commandParams['paneSpec'] = layer.get_id().toString();
		return commandParams;
	};
	$tab_PaneClientCommands.$shapeModelToString = function PaneClientCommands$ShapeModelToString(shape) {
		if (ss.isNullOrUndefined(shape)) {
			return null;
		}
		return shape.toString();
	};
	$tab_PaneClientCommands.$getPaneStylesStringDict = function PaneClientCommands$GetPaneStylesStringDict(paneStyles) {
		return paneStyles['PaneStyles'];
	};
	$tab_PaneClientCommands.$updatePaneStylesLocal = function PaneClientCommands$UpdatePaneStylesLocal(updatePaneStyles) {
		return function(handles) {
			var newDataStoreHandle = $.Deferred();
			tab.RuntimeWebModule.proxy.marshallDatastoreSubKeyHex(handles.get_finalStore(), tab.HexEncoder.encodeBufferToHex(tab.Utf8TextEncoder.encode('PaneStyles'))).done(function(paneStyles) {
				var newPaneStyles = $tab_PaneClientCommands.$getPaneStylesStringDict(paneStyles);
				updatePaneStyles(newPaneStyles);
				var packedStyles = tab.PaneStylesTableUtils.toRuePacker('PaneStylesData', newPaneStyles);
				tab.RuntimeWebModule.proxy.rueUpdateCommandHex(handles.get_VM(), tab.HexEncoder.encodeBufferToHex(packedStyles.pack())).done(function(dataStoreHandle) {
					newDataStoreHandle.resolve(dataStoreHandle);
				}).fail(function(dataStoreHandle1) {
					newDataStoreHandle.reject();
				});
			}).fail(function(paneStyles1) {
				newDataStoreHandle.reject();
			});
			return newDataStoreHandle;
		};
	};
	global.tab.PaneClientCommands = $tab_PaneClientCommands;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.QuantitativeColorEditorDialogModel
	var $tab_QuantitativeColorEditorDialogModel = function() {
		this.$2$ModelUpdatedField = null;
		this.$2$StopNotifyingField = null;
		tab.Model.call(this, null, new tab.PresModelPathItem('doc:web-quantitative-color-dialog-event'.toString(), null));
	};
	$tab_QuantitativeColorEditorDialogModel.__typeName = 'tab.QuantitativeColorEditorDialogModel';
	global.tab.QuantitativeColorEditorDialogModel = $tab_QuantitativeColorEditorDialogModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.QuickSortAscendingCmd
	var $tab_QuickSortAscendingCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_QuickSortAscendingCmd$Response]).call(this);
	};
	$tab_QuickSortAscendingCmd.__typeName = 'tab.QuickSortAscendingCmd';
	$tab_QuickSortAscendingCmd.get_commandName = function QuickSortAscendingCmd$get_CommandName() {
		return 'quick-sort-ascending';
	};
	global.tab.QuickSortAscendingCmd = $tab_QuickSortAscendingCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.QuickSortAscendingCmd.Response
	var $tab_QuickSortAscendingCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_QuickSortAscendingCmd$Response.__typeName = 'tab.QuickSortAscendingCmd$Response';
	global.tab.QuickSortAscendingCmd$Response = $tab_QuickSortAscendingCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.QuickSortDescendingCmd
	var $tab_QuickSortDescendingCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_QuickSortDescendingCmd$Response]).call(this);
	};
	$tab_QuickSortDescendingCmd.__typeName = 'tab.QuickSortDescendingCmd';
	$tab_QuickSortDescendingCmd.get_commandName = function QuickSortDescendingCmd$get_CommandName() {
		return 'quick-sort-descending';
	};
	global.tab.QuickSortDescendingCmd = $tab_QuickSortDescendingCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.QuickSortDescendingCmd.Response
	var $tab_QuickSortDescendingCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_QuickSortDescendingCmd$Response.__typeName = 'tab.QuickSortDescendingCmd$Response';
	global.tab.QuickSortDescendingCmd$Response = $tab_QuickSortDescendingCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ReferenceBandModel
	var $tab_ReferenceBandModel = function(parent) {
		this.$2$ModelUpdatedField = null;
		this.$2$ValidFormulaTypesField = null;
		this.$2$ValidPairedFormulaTypesField = null;
		this.$2$FromFieldPickerComboField = null;
		this.$2$ToFieldPickerComboField = null;
		tab.Model.call(this, parent, new tab.PresModelPathItem('referenceLine'.toString(), null));
		this.pm = {};
		this.set_fromFieldPickerCombo(new $tab_FieldPickerComboModel(this));
		this.set_toFieldPickerCombo(new $tab_FieldPickerComboModel(this));
		this.set_validFormulaTypes([]);
		this.set_validPairedFormulaTypes([]);
	};
	$tab_ReferenceBandModel.__typeName = 'tab.ReferenceBandModel';
	global.tab.ReferenceBandModel = $tab_ReferenceBandModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ReferenceLineEditorModel
	var $tab_ReferenceLineEditorModel = function(parent) {
		this.$2$ModelUpdatedField = null;
		this.$2$ActivePaneField = null;
		this.$2$ActiveModelField = null;
		this.$2$LineModelField = null;
		this.$2$BandModelField = null;
		this.$2$DistributionModelField = null;
		tab.Model.call(this, parent, new tab.PresModelPathItem('referenceLineEditor'.toString(), null));
		this.pm = {};
		this.set_activeModel(null);
		this.set_activePane('line');
		this.set_lineModel(new $tab_ReferenceLineModel(this));
		this.set_bandModel(new $tab_ReferenceBandModel(this));
		this.set_distributionModel(new $tab_DistributionModel(this));
	};
	$tab_ReferenceLineEditorModel.__typeName = 'tab.ReferenceLineEditorModel';
	global.tab.ReferenceLineEditorModel = $tab_ReferenceLineEditorModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ReferenceLineModel
	var $tab_ReferenceLineModel = function(parent) {
		this.$2$ModelUpdatedField = null;
		this.$2$ValidFormulaTypesField = null;
		this.$2$FieldPickerComboField = null;
		this.$2$ConfidenceLevelComboField = null;
		tab.Model.call(this, parent, new tab.PresModelPathItem('referenceLine'.toString(), null));
		this.pm = {};
		this.set_fieldPickerCombo(new $tab_FieldPickerComboModel(this));
		this.set_confidenceLevelCombo(new tab.EditValueWidgetModel(this, 'confidenceLevelCombo'));
	};
	$tab_ReferenceLineModel.__typeName = 'tab.ReferenceLineModel';
	global.tab.ReferenceLineModel = $tab_ReferenceLineModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ReleaseComponentCmd
	var $tab_ReleaseComponentCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_ReleaseComponentCmd$Response]).call(this);
	};
	$tab_ReleaseComponentCmd.__typeName = 'tab.ReleaseComponentCmd';
	global.tab.ReleaseComponentCmd = $tab_ReleaseComponentCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ReleaseComponentCmd.Response
	var $tab_ReleaseComponentCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_ReleaseComponentCmd$Response.__typeName = 'tab.ReleaseComponentCmd$Response';
	global.tab.ReleaseComponentCmd$Response = $tab_ReleaseComponentCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ReorderSheetsCmd
	var $tab_ReorderSheetsCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_ReorderSheetsCmd$Response]).call(this);
	};
	$tab_ReorderSheetsCmd.__typeName = 'tab.ReorderSheetsCmd';
	global.tab.ReorderSheetsCmd = $tab_ReorderSheetsCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ReorderSheetsCmd.Response
	var $tab_ReorderSheetsCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_ReorderSheetsCmd$Response.__typeName = 'tab.ReorderSheetsCmd$Response';
	global.tab.ReorderSheetsCmd$Response = $tab_ReorderSheetsCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ReplaceDataSourceWithDataServerDataSourceServerCmd
	var $tab_ReplaceDataSourceWithDataServerDataSourceServerCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_ReplaceDataSourceWithDataServerDataSourceServerCmd$Response]).call(this);
	};
	$tab_ReplaceDataSourceWithDataServerDataSourceServerCmd.__typeName = 'tab.ReplaceDataSourceWithDataServerDataSourceServerCmd';
	global.tab.ReplaceDataSourceWithDataServerDataSourceServerCmd = $tab_ReplaceDataSourceWithDataServerDataSourceServerCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ReplaceDataSourceWithDataServerDataSourceServerCmd.Response
	var $tab_ReplaceDataSourceWithDataServerDataSourceServerCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_ReplaceDataSourceWithDataServerDataSourceServerCmd$Response.__typeName = 'tab.ReplaceDataSourceWithDataServerDataSourceServerCmd$Response';
	global.tab.ReplaceDataSourceWithDataServerDataSourceServerCmd$Response = $tab_ReplaceDataSourceWithDataServerDataSourceServerCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ReplaceZoneCmd
	var $tab_ReplaceZoneCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_ReplaceZoneCmd$Response]).call(this);
	};
	$tab_ReplaceZoneCmd.__typeName = 'tab.ReplaceZoneCmd';
	global.tab.ReplaceZoneCmd = $tab_ReplaceZoneCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ReplaceZoneCmd.Response
	var $tab_ReplaceZoneCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_ReplaceZoneCmd$Response.__typeName = 'tab.ReplaceZoneCmd$Response';
	global.tab.ReplaceZoneCmd$Response = $tab_ReplaceZoneCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ResetCategoricalColorMapCmd
	var $tab_ResetCategoricalColorMapCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_ResetCategoricalColorMapCmd$Response]).call(this);
	};
	$tab_ResetCategoricalColorMapCmd.__typeName = 'tab.ResetCategoricalColorMapCmd';
	global.tab.ResetCategoricalColorMapCmd = $tab_ResetCategoricalColorMapCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ResetCategoricalColorMapCmd.Response
	var $tab_ResetCategoricalColorMapCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_ResetCategoricalColorMapCmd$Response.__typeName = 'tab.ResetCategoricalColorMapCmd$Response';
	global.tab.ResetCategoricalColorMapCmd$Response = $tab_ResetCategoricalColorMapCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SaveAsCmd
	var $tab_SaveAsCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_SaveAsCmd$Response]).call(this);
	};
	$tab_SaveAsCmd.__typeName = 'tab.SaveAsCmd';
	$tab_SaveAsCmd.get_commandName = function SaveAsCmd$get_CommandName() {
		return 'save-as';
	};
	global.tab.SaveAsCmd = $tab_SaveAsCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SaveAsCmd.Response
	var $tab_SaveAsCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_SaveAsCmd$Response.__typeName = 'tab.SaveAsCmd$Response';
	global.tab.SaveAsCmd$Response = $tab_SaveAsCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SaveCmd
	var $tab_SaveCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_SaveCmd$Response]).call(this);
	};
	$tab_SaveCmd.__typeName = 'tab.SaveCmd';
	$tab_SaveCmd.get_commandName = function SaveCmd$get_CommandName() {
		return 'save';
	};
	global.tab.SaveCmd = $tab_SaveCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SaveCmd.Response
	var $tab_SaveCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_SaveCmd$Response.__typeName = 'tab.SaveCmd$Response';
	global.tab.SaveCmd$Response = $tab_SaveCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SaveDatasourceDialogModel
	var $tab_SaveDatasourceDialogModel = function(parent) {
		this.$2$ModelUpdatedField = null;
		this.$2$StopNotifyingField = null;
		tab.Model.call(this, parent, new tab.PresModelPathItem('doc:web-save-datasource-dialog-event'.toString(), null));
		var pm = {};
		pm.saveDatasourceDialog = {};
		this.pm = pm;
	};
	$tab_SaveDatasourceDialogModel.__typeName = 'tab.SaveDatasourceDialogModel';
	global.tab.SaveDatasourceDialogModel = $tab_SaveDatasourceDialogModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SaveOrSaveAsCmd
	var $tab_SaveOrSaveAsCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_SaveOrSaveAsCmd$Response]).call(this);
	};
	$tab_SaveOrSaveAsCmd.__typeName = 'tab.SaveOrSaveAsCmd';
	$tab_SaveOrSaveAsCmd.get_commandName = function SaveOrSaveAsCmd$get_CommandName() {
		return 'save-or-save-as';
	};
	global.tab.SaveOrSaveAsCmd = $tab_SaveOrSaveAsCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SaveOrSaveAsCmd.Response
	var $tab_SaveOrSaveAsCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_SaveOrSaveAsCmd$Response.__typeName = 'tab.SaveOrSaveAsCmd$Response';
	global.tab.SaveOrSaveAsCmd$Response = $tab_SaveOrSaveAsCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SelectZoneParentCmd
	var $tab_SelectZoneParentCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SelectZoneParentCmd$Response]).call(this);
	};
	$tab_SelectZoneParentCmd.__typeName = 'tab.SelectZoneParentCmd';
	global.tab.SelectZoneParentCmd = $tab_SelectZoneParentCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SelectZoneParentCmd.Response
	var $tab_SelectZoneParentCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_SelectZoneParentCmd$Response.__typeName = 'tab.SelectZoneParentCmd$Response';
	global.tab.SelectZoneParentCmd$Response = $tab_SelectZoneParentCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SetCategoricalLegendItemColorCmd
	var $tab_SetCategoricalLegendItemColorCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SetCategoricalLegendItemColorCmd$Response]).call(this);
	};
	$tab_SetCategoricalLegendItemColorCmd.__typeName = 'tab.SetCategoricalLegendItemColorCmd';
	global.tab.SetCategoricalLegendItemColorCmd = $tab_SetCategoricalLegendItemColorCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SetCategoricalLegendItemColorCmd.Response
	var $tab_SetCategoricalLegendItemColorCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_SetCategoricalLegendItemColorCmd$Response.__typeName = 'tab.SetCategoricalLegendItemColorCmd$Response';
	global.tab.SetCategoricalLegendItemColorCmd$Response = $tab_SetCategoricalLegendItemColorCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SetDensityColorEncodingCmd
	var $tab_SetDensityColorEncodingCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SetDensityColorEncodingCmd$Response]).call(this);
	};
	$tab_SetDensityColorEncodingCmd.__typeName = 'tab.SetDensityColorEncodingCmd';
	global.tab.SetDensityColorEncodingCmd = $tab_SetDensityColorEncodingCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SetDensityColorEncodingCmd.Response
	var $tab_SetDensityColorEncodingCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_SetDensityColorEncodingCmd$Response.__typeName = 'tab.SetDensityColorEncodingCmd$Response';
	global.tab.SetDensityColorEncodingCmd$Response = $tab_SetDensityColorEncodingCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SetDensityIntensityCmd
	var $tab_SetDensityIntensityCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SetDensityIntensityCmd$Response]).call(this);
	};
	$tab_SetDensityIntensityCmd.__typeName = 'tab.SetDensityIntensityCmd';
	global.tab.SetDensityIntensityCmd = $tab_SetDensityIntensityCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SetDensityIntensityCmd.Response
	var $tab_SetDensityIntensityCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_SetDensityIntensityCmd$Response.__typeName = 'tab.SetDensityIntensityCmd$Response';
	global.tab.SetDensityIntensityCmd$Response = $tab_SetDensityIntensityCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SetDensityKernelSizeCmd
	var $tab_SetDensityKernelSizeCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SetDensityKernelSizeCmd$Response]).call(this);
	};
	$tab_SetDensityKernelSizeCmd.__typeName = 'tab.SetDensityKernelSizeCmd';
	global.tab.SetDensityKernelSizeCmd = $tab_SetDensityKernelSizeCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SetDensityKernelSizeCmd.Response
	var $tab_SetDensityKernelSizeCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_SetDensityKernelSizeCmd$Response.__typeName = 'tab.SetDensityKernelSizeCmd$Response';
	global.tab.SetDensityKernelSizeCmd$Response = $tab_SetDensityKernelSizeCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SetSelectedLegendItemsCmd
	var $tab_SetSelectedLegendItemsCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SetSelectedLegendItemsCmd$Response]).call(this);
	};
	$tab_SetSelectedLegendItemsCmd.__typeName = 'tab.SetSelectedLegendItemsCmd';
	global.tab.SetSelectedLegendItemsCmd = $tab_SetSelectedLegendItemsCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SetSelectedLegendItemsCmd.Response
	var $tab_SetSelectedLegendItemsCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_SetSelectedLegendItemsCmd$Response.__typeName = 'tab.SetSelectedLegendItemsCmd$Response';
	global.tab.SetSelectedLegendItemsCmd$Response = $tab_SetSelectedLegendItemsCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SetZoneStyleCmd
	var $tab_SetZoneStyleCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SetZoneStyleCmd$Response]).call(this);
	};
	$tab_SetZoneStyleCmd.__typeName = 'tab.SetZoneStyleCmd';
	global.tab.SetZoneStyleCmd = $tab_SetZoneStyleCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SetZoneStyleCmd.Response
	var $tab_SetZoneStyleCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_SetZoneStyleCmd$Response.__typeName = 'tab.SetZoneStyleCmd$Response';
	global.tab.SetZoneStyleCmd$Response = $tab_SetZoneStyleCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.Utility.SheetThumbnailCache
	var $tab_SheetThumbnailCache = function() {
		this.$thumbnailCache = null;
		this.$thumbnailCache = new (ss.makeGenericType(tab.LruCache$2, [String, String]))($tab_SheetThumbnailCache.$maxCacheEntries);
	};
	$tab_SheetThumbnailCache.__typeName = 'tab.SheetThumbnailCache';
	global.tab.SheetThumbnailCache = $tab_SheetThumbnailCache;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.ShelfClientCommands
	var $tab_ShelfClientCommands = function() {
	};
	$tab_ShelfClientCommands.__typeName = 'tab.ShelfClientCommands';
	$tab_ShelfClientCommands.get_$log = function ShelfClientCommands$get_Log() {
		return tab.Logger.getLoggerWithName(ss.getTypeName($tab_ShelfClientCommands) + tsConfig.layoutid);
	};
	$tab_ShelfClientCommands.setItemEncodingType = function ShelfClientCommands$SetItemEncodingType(sm, pm, et) {
		var cmdParams = {};
		tab.CommandUtils.addVisualIdToCommand(cmdParams, $tab_ShelfClientCommands.$getVisualIdForCurrentContext());
		cmdParams['paneSpec'] = sm.get_paneId().toString();
		cmdParams['position'] = ss.indexOf(sm.get_pills(), pm).toString();
		cmdParams['encodingType'] = et.toString();
		cmdParams['shelfType'] = sm.get_shelfType().toString();
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-item-encoding-type' }, cmdParams);
		tab.ServerCommands.executeServerCommand(c, 'immediately', null, null);
	};
	$tab_ShelfClientCommands.startDrag = function ShelfClientCommands$StartDrag(f, t, activePaneSpecId, isRightDrag) {
		var deferred = $.Deferred();
		var cmdParams = {};
		cmdParams['worksheet'] = tsConfig.current_sheet_name;
		cmdParams['isRightDrag'] = JSON.stringify(isRightDrag);
		if (ss.isValue(activePaneSpecId)) {
			cmdParams['paneSpec'] = JSON.stringify(activePaneSpecId);
		}
		$tab_ShelfClientCommands.$createFieldEncodingPM(cmdParams, f, t);
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'get-drag-pres-model' }, cmdParams);
		tab.ServerCommands.executeServerCommand(c, 'none', function(pm) {
			deferred.resolve(pm);
		}, function(e) {
			deferred.reject();
		});
		return deferred;
	};
	$tab_ShelfClientCommands.executeDragToShowMe = function ShelfClientCommands$ExecuteDragToShowMe(visualId, infoWrapper, activePaneSpecId) {
		ss.Debug.assert(ss.isValue(visualId), 'ShelfClientCommands.ExecuteDragToShowMe: must provide a visualIDPresModel');
		ss.Debug.assert(ss.isValue(infoWrapper), 'ShelfClientCommands.ExecuteDragToShowMe: must provide a DragToShowMeInfoWrapper');
		ss.Debug.assert(ss.isValue(infoWrapper.infoList) && infoWrapper.infoList.length > 0, 'ShelfClientCommands.ExecuteDragToShowMe: the DragToShowMeInfoWraper cannot be empty');
		var deferred = $.Deferred();
		var c = { commandNamespace: { ns: 'tabdoc', cmd: 'drop-on-showme' }.ns, commandName: { ns: 'tabdoc', cmd: 'drop-on-showme' }.cmd, commandParams: {} };
		$tab_ShelfClientCommands.$createFieldEncodingPM(c.commandParams, infoWrapper.get_allFieldModels(), 'invalid-encoding');
		c.commandParams['visualIdPresModel'] = JSON.stringify(visualId);
		c.commandParams['shelfDropContext'] = 'none';
		c.commandParams['isCopy'] = infoWrapper.isCopyDrag;
		c.commandParams['isDeadDrop'] = false;
		c.commandParams['dragSource'] = (infoWrapper.isFromDataSchemaPane ? 'drag-drop-schema' : 'drag-drop-shelf');
		c.commandParams['dropTarget'] = 'drag-drop-viz';
		c.commandParams['dragDescription'] = '';
		c.commandParams['shelfDragSourcePosition'] = $tab_ShelfClientCommands.$createDragSourcePositionForShowMe(infoWrapper);
		c.commandParams['shelfDropTargetPosition'] = $tab_ShelfClientCommands.$createDropTargetPositionForShowMe();
		c.commandParams['isShiftDrag'] = infoWrapper.isShiftDrag;
		c.commandParams['worksheet'] = tsConfig.current_sheet_name;
		c.commandParams['dashboard'] = tab.ModelUtils.findContentDashboard(null).pm.sheetPath;
		c.commandParams['isRightDrag'] = false;
		if (ss.isValue(activePaneSpecId)) {
			c.commandParams['paneSpec'] = ss.unbox(activePaneSpecId);
		}
		var prepareDropCmd = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'drop-prepare' }, c.commandParams);
		tab.ServerCommands.executeServerCommand(prepareDropCmd, 'immediately', function(model) {
			tab.ServerCommands.executeServerCommand(c, 'immediately', function(pm) {
				deferred.resolve(pm);
			}, function(arg) {
				deferred.reject();
			});
		}, function(exception) {
			$tab_ShelfClientCommands.get_$log().error(exception.get_message(), []);
		});
	};
	$tab_ShelfClientCommands.$createDropTargetPositionForShowMe = function ShelfClientCommands$CreateDropTargetPositionForShowMe() {
		return { shelfType: 'show-me-shelf', shelfPosIndex: 0, shelfDropAction: 'replace', isFolded: false, isOverlay: true };
	};
	$tab_ShelfClientCommands.$createDragSourcePositionForShowMe = function ShelfClientCommands$CreateDragSourcePositionForShowMe(infoWrapper) {
		var sourcePos = { shelfPosIndex: (infoWrapper.isFromDataSchemaPane ? -1 : 0), shelfDropAction: (infoWrapper.isFromDataSchemaPane ? 'insert' : 'replace') };
		if (infoWrapper.isFromDataSchemaPane) {
			sourcePos.shelfType = 'none-shelf';
		}
		return sourcePos;
	};
	$tab_ShelfClientCommands.getShelfItemContextMenu = function ShelfClientCommands$GetShelfItemContextMenu(shelfItemId, shelfType, paneId) {
		var $t1 = new $tab_BuildShelfItemContextMenuCmd();
		$t1.cmdParams['shelfItemId'] = shelfItemId | 0;
		$t1.cmdParams['shelfType'] = shelfType;
		$t1.cmdParams['paneSpec'] = paneId | 0;
		return $t1.invoke();
	};
	$tab_ShelfClientCommands.drillOnPill = function ShelfClientCommands$DrillOnPill(shelf, p, index) {
		var cmdParams = {};
		cmdParams['worksheet'] = tsConfig.current_sheet_name;
		cmdParams['shelfType'] = shelf.get_shelfType().toString();
		cmdParams['position'] = index.toString();
		cmdParams['drillDown'] = JSON.stringify(p.get_shouldDrill());
		if (shelf.get_shelfType() === 'encoding-shelf') {
			cmdParams['paneSpec'] = shelf.get_paneId().toString();
		}
		var c = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'level-drill-up-down' }, cmdParams);
		tab.CommandController.SendCommand(tab.RemoteClientCommand.create(c, 'immediately', null, null));
	};
	$tab_ShelfClientCommands.removeShelfPill = function ShelfClientCommands$RemoveShelfPill(shelf, p) {
		var command = $tab_ShelfClientCommands.$createDropOnShelfCommand();
		command.commandName = { ns: 'tabdoc', cmd: 'drop-nowhere' }.cmd;
		var cmdParams = command.commandParams;
		cmdParams['paneSpec'] = shelf.get_paneId();
		cmdParams['dragDescription'] = shelf.get_shelfType().toString();
		$tab_ShelfClientCommands.$setFieldEncoding(cmdParams, p.get_column(), p.get_encodingType());
		cmdParams['shelfSelection'] = [p.pm.shelfItemId];
		cmdParams['dragSource'] = 'drag-drop-shelf';
		var dragPos = cmdParams['shelfDragSourcePosition'];
		dragPos.shelfType = shelf.get_shelfType();
		dragPos.shelfPosIndex = ss.indexOf(shelf.get_pills(), p);
		dragPos.shelfDropAction = 'replace';
		var cc = new tab.ClientCommand('immediately', function(t) {
			$tab_ShelfClientCommands.$removeShelfItem(t.makeMutablePresModel(shelf, false), p.pm);
		}, command, null, null);
		tab.CommandController.SendCommand(cc);
	};
	$tab_ShelfClientCommands.replaceShelfPill = function ShelfClientCommands$ReplaceShelfPill(srcShelf, src, targetShelf, target, dropPos, isRightDrop) {
		var srcIndex = ss.indexOf(srcShelf.get_pills(), src);
		var targetIndex = dropPos.shelfPosIndex;
		var command = $tab_ShelfClientCommands.$createDropOnShelfCommand();
		var cmdParams = command.commandParams;
		$tab_ShelfClientCommands.$setFieldEncoding(cmdParams, src.get_column(), src.get_encodingType());
		cmdParams['shelfSelection'] = [src.pm.shelfItemId];
		cmdParams['dragSource'] = 'drag-drop-shelf';
		var dragPos = cmdParams['shelfDragSourcePosition'];
		dragPos.shelfType = srcShelf.get_shelfType();
		dragPos.shelfPosIndex = srcIndex;
		dragPos.shelfDropAction = 'replace';
		cmdParams['paneSpec'] = targetShelf.get_paneId();
		cmdParams['dropTarget'] = 'drag-drop-shelf';
		if (ss.isNullOrUndefined(dropPos)) {
			dropPos = cmdParams['shelfDropTargetPosition'];
			dropPos.shelfType = targetShelf.get_shelfType();
			dropPos.shelfPosIndex = targetIndex;
			dropPos.encodingType = target.get_encodingType();
			dropPos.shelfDropAction = 'replace';
		}
		else {
			cmdParams['shelfDropTargetPosition'] = dropPos;
		}
		if (isRightDrop) {
			cmdParams['isCopy'] = $tab_ShelfClientCommands.$jsonTrueStr;
		}
		var cc = new $tab_$ShelfDropClientCommand(function(t) {
			if (!isRightDrop) {
				var shelfPm = t.makeMutablePresModel(srcShelf, false);
				$tab_ShelfClientCommands.$removeShelfItem(shelfPm, src.pm);
			}
			var targetShelfPm = t.makeMutablePresModel(targetShelf, false);
			$tab_ShelfClientCommands.$removeShelfItem(targetShelfPm, target.pm);
			var newItem = { displayText: src.pm.displayText, fn: src.pm.fn, encodingType: target.get_encodingType(), encodingUiItems: target.pm.encodingUiItems };
			$tab_ShelfClientCommands.$addShelfItem(targetShelfPm, newItem, dropPos, 0);
		}, command, targetShelf.get_shelfType(), false);
		tab.CommandController.SendCommand(cc);
	};
	$tab_ShelfClientCommands.moveShelfPill = function ShelfClientCommands$MoveShelfPill(srcShelf, targetShelf, p, dropPos, isRightDrop) {
		var command = $tab_ShelfClientCommands.$createDropOnShelfCommand();
		var cmdParams = command.commandParams;
		cmdParams['shelfSelection'] = [p.pm.shelfItemId];
		$tab_ShelfClientCommands.$setFieldEncoding(cmdParams, p.get_column(), p.get_encodingType());
		if (isRightDrop) {
			cmdParams['isCopy'] = $tab_ShelfClientCommands.$jsonTrueStr;
		}
		cmdParams['dragSource'] = 'drag-drop-shelf';
		var dragPos = cmdParams['shelfDragSourcePosition'];
		dragPos.shelfType = srcShelf.get_shelfType();
		dragPos.shelfPosIndex = ss.indexOf(srcShelf.get_pills(), p);
		dragPos.shelfDropAction = 'replace';
		if (ss.isNullOrUndefined(dropPos)) {
			dropPos = cmdParams['shelfDropTargetPosition'];
			dropPos.shelfType = targetShelf.get_shelfType();
			dropPos.shelfPosIndex = 0;
			dropPos.shelfDropAction = (ss.referenceEquals(srcShelf, targetShelf) ? 'swap' : 'insert');
		}
		cmdParams['dropTarget'] = 'drag-drop-shelf';
		cmdParams['paneSpec'] = targetShelf.get_paneId();
		cmdParams['shelfDropTargetPosition'] = dropPos;
		var cc = new $tab_$ShelfDropClientCommand(function(t) {
			var newItem = { displayText: p.pm.displayText, fn: p.pm.fn, encodingType: dropPos.encodingType };
			var targetPm = t.makeMutablePresModel(targetShelf, false);
			$tab_ShelfClientCommands.$addShelfItem(targetPm, newItem, dropPos, 0);
			if (!isRightDrop) {
				var srcPm = t.makeMutablePresModel(srcShelf, false);
				$tab_ShelfClientCommands.$removeShelfItem(srcPm, p.pm);
			}
		}, command, targetShelf.get_shelfType(), false);
		tab.CommandController.SendCommand(cc);
	};
	$tab_ShelfClientCommands.movePillToEncoding = function ShelfClientCommands$MovePillToEncoding(srcShelf, encodingShelf, type, p, isCopyDrop, dropPos) {
		var command = $tab_ShelfClientCommands.$createDropOnShelfCommand();
		var cmdParams = command.commandParams;
		cmdParams['shelfSelection'] = [p.pm.shelfItemId];
		cmdParams['dragSource'] = 'drag-drop-shelf';
		var dragPos = cmdParams['shelfDragSourcePosition'];
		dragPos.shelfType = srcShelf.get_shelfType();
		dragPos.shelfPosIndex = ss.indexOf(srcShelf.get_pills(), p);
		dragPos.encodingType = p.get_encodingType();
		dragPos.shelfDropAction = 'replace';
		dragPos.isOverride = false;
		$tab_ShelfClientCommands.$setFieldEncoding(cmdParams, p.get_column(), p.get_encodingType());
		if (isCopyDrop) {
			cmdParams['isCopy'] = $tab_ShelfClientCommands.$jsonTrueStr;
		}
		if (ss.isNullOrUndefined(dropPos)) {
			dropPos = cmdParams['shelfDropTargetPosition'];
			dropPos.shelfType = 'encoding-shelf';
			dropPos.shelfPosIndex = 0;
			dropPos.shelfDropAction = 'insert';
			dropPos.encodingType = type;
			dropPos.isOverride = true;
		}
		cmdParams['dropTarget'] = 'drag-drop-shelf';
		cmdParams['paneSpec'] = encodingShelf.get_paneId();
		cmdParams['shelfDropTargetPosition'] = JSON.stringify(dropPos);
		var cc = new $tab_$ShelfDropClientCommand(function(t) {
			var shelfPm = t.makeMutablePresModel(srcShelf, false);
			if (!isCopyDrop) {
				$tab_ShelfClientCommands.$removeShelfItem(shelfPm, p.pm);
			}
			var newItem = { displayText: p.get_column().get_description(), fn: p.get_column().get_globalName(), encodingType: type, encodingUiItems: p.pm.encodingUiItems };
			$tab_ShelfClientCommands.$addShelfItem(shelfPm, newItem, dropPos, 0);
		}, command, encodingShelf.get_shelfType(), false);
		tab.CommandController.SendCommand(cc);
	};
	$tab_ShelfClientCommands.addEncodingFields = function ShelfClientCommands$AddEncodingFields(encodingShelf, fieldColumns, type, dropPos, isShiftDrop, isRightDrag, isDroppingRelativeFilter) {
		var command = $tab_ShelfClientCommands.$createDropOnShelfCommand();
		var cmdParams = command.commandParams;
		if (ss.isNullOrUndefined(dropPos)) {
			dropPos = cmdParams['shelfDropTargetPosition'];
			dropPos.shelfType = 'encoding-shelf';
			dropPos.shelfPosIndex = 0;
			dropPos.shelfDropAction = 'insert';
			dropPos.encodingType = type;
		}
		if (isShiftDrop) {
			cmdParams['isShiftDrag'] = $tab_ShelfClientCommands.$jsonTrueStr;
		}
		if (isRightDrag) {
			cmdParams['isRightDrag'] = $tab_ShelfClientCommands.$jsonTrueStr;
		}
		$tab_ShelfClientCommands.$createFieldEncodingPM(cmdParams, fieldColumns, 'invalid-encoding');
		cmdParams['paneSpec'] = encodingShelf.get_paneId();
		cmdParams['dragSource'] = 'drag-drop-schema';
		cmdParams['dropTarget'] = 'drag-drop-shelf';
		cmdParams['shelfDropTargetPosition'] = JSON.stringify(dropPos);
		var cc = new $tab_$ShelfDropClientCommand(function(t) {
			var shelfPm = t.makeMutablePresModel(encodingShelf, false);
			for (var $t1 = 0; $t1 < fieldColumns.length; $t1++) {
				var fieldColumn = fieldColumns[$t1];
				var newItem = { displayText: fieldColumn.get_description(), fn: fieldColumn.get_globalName(), encodingType: type, encodingUiItems: [{}] };
				newItem.encodingUiItems[0].isVisible = true;
				newItem.encodingUiItems[0].isEnabled = true;
				newItem.encodingUiItems[0].encodingType = newItem.encodingType;
				$tab_ShelfClientCommands.$addShelfItem(shelfPm, newItem, dropPos, 0);
			}
		}, command, encodingShelf.get_shelfType(), isDroppingRelativeFilter);
		tab.CommandController.SendCommand(cc);
	};
	$tab_ShelfClientCommands.getFieldAggregationsForDrop = function ShelfClientCommands$GetFieldAggregationsForDrop(fieldName, shelf, success, failure) {
		if (!tab.FeatureFlags.isEnabled('WebAuthoringDragAggregation')) {
			failure();
			return;
		}
		var $t1 = new tab.GetDropFieldAggregationOptionsCmd();
		$t1.cmdParams['shelfType'] = shelf;
		$t1.cmdParams['fn'] = fieldName;
		$t1.set_uiBlocking('immediately');
		var aggregationCommand = $t1;
		aggregationCommand.invoke().done(function(response) {
			success(response.$$cmdParams['filterSelectMeasure']);
		}).fail(failure);
	};
	$tab_ShelfClientCommands.addShelfField = function ShelfClientCommands$AddShelfField(svm, fieldColumns, encoding, dropPos, isRightDrag, isDroppingRelativeFilter) {
		var command = $tab_ShelfClientCommands.$createDropOnShelfCommand();
		var cmdParams = command.commandParams;
		if (ss.isNullOrUndefined(dropPos)) {
			dropPos = cmdParams['shelfDropTargetPosition'];
			dropPos.shelfType = svm.get_shelfType();
			dropPos.shelfPosIndex = 0;
			dropPos.shelfDropAction = 'insert';
			dropPos.encodingType = encoding;
		}
		if (isRightDrag) {
			cmdParams['isRightDrag'] = $tab_ShelfClientCommands.$jsonTrueStr;
		}
		$tab_ShelfClientCommands.$createFieldEncodingPM(cmdParams, fieldColumns, 'invalid-encoding');
		cmdParams['paneSpec'] = svm.get_paneId();
		cmdParams['dragSource'] = 'drag-drop-schema';
		cmdParams['dropTarget'] = 'drag-drop-shelf';
		cmdParams['shelfDropTargetPosition'] = dropPos;
		if (encoding !== 'invalid-encoding') {
			cmdParams['encodingType'] = encoding.toString();
		}
		var cc = new $tab_$ShelfDropClientCommand(function(t) {
			var offset = 0;
			for (var $t1 = 0; $t1 < fieldColumns.length; $t1++) {
				var fieldColumn = fieldColumns[$t1];
				var newItem = { displayText: fieldColumn.get_description(), fn: fieldColumn.get_globalName(), encodingType: ((svm.get_shelfType() === 'encoding-shelf' && encoding === 'invalid-encoding') ? 'level-of-detail-encoding' : encoding) };
				var shelfPm = t.makeMutablePresModel(svm, false);
				$tab_ShelfClientCommands.$addShelfItem(shelfPm, newItem, dropPos, offset);
				offset++;
			}
		}, command, svm.get_shelfType(), isDroppingRelativeFilter);
		tab.CommandController.SendCommand(cc);
	};
	$tab_ShelfClientCommands.replaceShelfPillWithField = function ShelfClientCommands$ReplaceShelfPillWithField(targetShelf, target, src, dropPos, isDroppingRelativeFilter) {
		var command = $tab_ShelfClientCommands.$createDropOnShelfCommand();
		var cmdParams = command.commandParams;
		if (ss.isNullOrUndefined(dropPos)) {
			dropPos = cmdParams['shelfDropTargetPosition'];
			dropPos.shelfType = targetShelf.get_shelfType();
			dropPos.shelfPosIndex = ss.indexOf(targetShelf.get_pills(), target);
			dropPos.shelfDropAction = 'replace';
			dropPos.encodingType = target.get_encodingType();
		}
		$tab_ShelfClientCommands.$createFieldEncodingPM(cmdParams, src, 'invalid-encoding');
		cmdParams['paneSpec'] = targetShelf.get_paneId();
		cmdParams['shelfSelection'] = [];
		cmdParams['dragSource'] = 'drag-drop-schema';
		cmdParams['dropTarget'] = 'drag-drop-shelf';
		cmdParams['shelfDropTargetPosition'] = dropPos;
		var cc = new $tab_$ShelfDropClientCommand(function(t) {
			var targetShelfPm = t.makeMutablePresModel(targetShelf, false);
			var offset = 0;
			for (var $t1 = 0; $t1 < src.length; $t1++) {
				var fieldModel = src[$t1];
				var newItem = { displayText: fieldModel.get_description(), fn: fieldModel.get_globalName(), encodingType: target.get_encodingType(), encodingUiItems: target.pm.encodingUiItems };
				$tab_ShelfClientCommands.$addShelfItem(targetShelfPm, newItem, dropPos, offset);
				offset++;
			}
		}, command, targetShelf.get_shelfType(), isDroppingRelativeFilter);
		tab.CommandController.SendCommand(cc);
	};
	$tab_ShelfClientCommands.setCommandParams = function ShelfClientCommands$SetCommandParams(c, cmdParams) {
		tab.CommandUtils.addVisualIdToCommand(cmdParams, $tab_ShelfClientCommands.$getVisualIdForCurrentContext());
		var $t1 = new ss.ObjectEnumerator(cmdParams);
		try {
			while ($t1.moveNext()) {
				var pair = $t1.current();
				var value = pair.value;
				if (ss.isNullOrUndefined(value) || _.isString(value) || _.isBoolean(value) || _.isNumber(value)) {
				}
				else if (_.isObject(value) || _.isArray(value)) {
					cmdParams[pair.key] = JSON.stringify(value);
				}
			}
		}
		finally {
			$t1.dispose();
		}
		c.commandParams = cmdParams;
	};
	$tab_ShelfClientCommands.$createDropOnShelfCommand = function ShelfClientCommands$CreateDropOnShelfCommand() {
		var cmdParams = {};
		cmdParams['dragSource'] = 'drag-drop-none';
		cmdParams['dropTarget'] = 'drag-drop-none';
		cmdParams['dragDescription'] = '';
		cmdParams['isCopy'] = false;
		cmdParams['isDeadDrop'] = false;
		cmdParams['isRightDrag'] = false;
		cmdParams['shelfDropContext'] = 'none';
		cmdParams['shelfDragSourcePosition'] = {};
		cmdParams['shelfDropTargetPosition'] = {};
		return tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'drop-on-shelf' }, cmdParams);
	};
	$tab_ShelfClientCommands.$getFieldEncodingPresModel = function ShelfClientCommands$GetFieldEncodingPresModel(f, type) {
		var fe = { fn: f.get_globalName() };
		if (ss.isValue(type) && type !== 'invalid-encoding') {
			fe.encodingType = type;
		}
		return fe;
	};
	$tab_ShelfClientCommands.$setFieldEncoding = function ShelfClientCommands$SetFieldEncoding(cmdParams, f, type) {
		cmdParams['fieldEncodings'] = JSON.stringify([$tab_ShelfClientCommands.$getFieldEncodingPresModel(f, type)]);
	};
	$tab_ShelfClientCommands.$createFieldEncodingPM = function ShelfClientCommands$CreateFieldEncodingPM(cmdParams, f, type) {
		var fieldEncodingPresModels = _.map(f, function(fieldModel) {
			return $tab_ShelfClientCommands.$getFieldEncodingPresModel(fieldModel, type);
		});
		cmdParams['fieldEncodings'] = JSON.stringify(fieldEncodingPresModels);
	};
	$tab_ShelfClientCommands.$addShelfItem = function ShelfClientCommands$AddShelfItem(shelfPm, newItem, dropPos, offset) {
		var action = ((offset > 0) ? 'insert' : (dropPos.shelfDropAction || 'insert'));
		switch (action) {
			case 'insert': {
				ss.insert($tab_ShelfClientCommands.$shelfItemsAsList(shelfPm.shelfItems), dropPos.shelfPosIndex + offset, newItem);
				break;
			}
			case 'replace': {
				shelfPm.shelfItems[dropPos.shelfPosIndex] = newItem;
				break;
			}
			case 'replace-all': {
				shelfPm.shelfItems[dropPos.shelfPosIndex] = newItem;
				shelfPm.shelfItems = _.filter(shelfPm.shelfItems, function(pm) {
					return pm.encodingType !== dropPos.encodingType || ss.referenceEquals(pm, newItem);
				});
				break;
			}
		}
	};
	$tab_ShelfClientCommands.$removeShelfItem = function ShelfClientCommands$RemoveShelfItem(shelfPm, item) {
		shelfPm.shelfItems = _.filter(shelfPm.shelfItems, function(model) {
			return !_.isEqual(model, item);
		});
	};
	$tab_ShelfClientCommands.$shelfItemsAsList = function ShelfClientCommands$ShelfItemsAsList(items) {
		return ss.cast(items, Array);
	};
	$tab_ShelfClientCommands.$getVisualIdForCurrentContext = function ShelfClientCommands$GetVisualIdForCurrentContext() {
		return tab.ModelUtils.getVisualId(tsConfig.current_sheet_name);
	};
	global.tab.ShelfClientCommands = $tab_ShelfClientCommands;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SortNestedCmd
	var $tab_SortNestedCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SortNestedCmd$Response]).call(this);
	};
	$tab_SortNestedCmd.__typeName = 'tab.SortNestedCmd';
	global.tab.SortNestedCmd = $tab_SortNestedCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.SortNestedCmd.Response
	var $tab_SortNestedCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_SortNestedCmd$Response.__typeName = 'tab.SortNestedCmd$Response';
	global.tab.SortNestedCmd$Response = $tab_SortNestedCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcAddCmd
	var $tab_TableCalcAddCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcAddCmd$Response]).call(this);
	};
	$tab_TableCalcAddCmd.__typeName = 'tab.TableCalcAddCmd';
	global.tab.TableCalcAddCmd = $tab_TableCalcAddCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcAddCmd.Response
	var $tab_TableCalcAddCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcAddCmd$Response.__typeName = 'tab.TableCalcAddCmd$Response';
	global.tab.TableCalcAddCmd$Response = $tab_TableCalcAddCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcChangeTypeCmd
	var $tab_TableCalcChangeTypeCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcChangeTypeCmd$Response]).call(this);
	};
	$tab_TableCalcChangeTypeCmd.__typeName = 'tab.TableCalcChangeTypeCmd';
	global.tab.TableCalcChangeTypeCmd = $tab_TableCalcChangeTypeCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcChangeTypeCmd.Response
	var $tab_TableCalcChangeTypeCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcChangeTypeCmd$Response.__typeName = 'tab.TableCalcChangeTypeCmd$Response';
	global.tab.TableCalcChangeTypeCmd$Response = $tab_TableCalcChangeTypeCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcCloseCmd
	var $tab_TableCalcCloseCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcCloseCmd$Response]).call(this);
	};
	$tab_TableCalcCloseCmd.__typeName = 'tab.TableCalcCloseCmd';
	global.tab.TableCalcCloseCmd = $tab_TableCalcCloseCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcCloseCmd.Response
	var $tab_TableCalcCloseCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcCloseCmd$Response.__typeName = 'tab.TableCalcCloseCmd$Response';
	global.tab.TableCalcCloseCmd$Response = $tab_TableCalcCloseCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcDialogActivatedCmd
	var $tab_TableCalcDialogActivatedCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcDialogActivatedCmd$Response]).call(this);
	};
	$tab_TableCalcDialogActivatedCmd.__typeName = 'tab.TableCalcDialogActivatedCmd';
	global.tab.TableCalcDialogActivatedCmd = $tab_TableCalcDialogActivatedCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcDialogActivatedCmd.Response
	var $tab_TableCalcDialogActivatedCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcDialogActivatedCmd$Response.__typeName = 'tab.TableCalcDialogActivatedCmd$Response';
	global.tab.TableCalcDialogActivatedCmd$Response = $tab_TableCalcDialogActivatedCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcEditCmd
	var $tab_TableCalcEditCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcEditCmd$Response]).call(this);
	};
	$tab_TableCalcEditCmd.__typeName = 'tab.TableCalcEditCmd';
	global.tab.TableCalcEditCmd = $tab_TableCalcEditCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcEditCmd.Response
	var $tab_TableCalcEditCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcEditCmd$Response.__typeName = 'tab.TableCalcEditCmd$Response';
	global.tab.TableCalcEditCmd$Response = $tab_TableCalcEditCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcEditDefaultsCmd
	var $tab_TableCalcEditDefaultsCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcEditDefaultsCmd$Response]).call(this);
	};
	$tab_TableCalcEditDefaultsCmd.__typeName = 'tab.TableCalcEditDefaultsCmd';
	global.tab.TableCalcEditDefaultsCmd = $tab_TableCalcEditDefaultsCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcEditDefaultsCmd.Response
	var $tab_TableCalcEditDefaultsCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcEditDefaultsCmd$Response.__typeName = 'tab.TableCalcEditDefaultsCmd$Response';
	global.tab.TableCalcEditDefaultsCmd$Response = $tab_TableCalcEditDefaultsCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcEditNestedTableCalcCmd
	var $tab_TableCalcEditNestedTableCalcCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcEditNestedTableCalcCmd$Response]).call(this);
	};
	$tab_TableCalcEditNestedTableCalcCmd.__typeName = 'tab.TableCalcEditNestedTableCalcCmd';
	global.tab.TableCalcEditNestedTableCalcCmd = $tab_TableCalcEditNestedTableCalcCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcEditNestedTableCalcCmd.Response
	var $tab_TableCalcEditNestedTableCalcCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcEditNestedTableCalcCmd$Response.__typeName = 'tab.TableCalcEditNestedTableCalcCmd$Response';
	global.tab.TableCalcEditNestedTableCalcCmd$Response = $tab_TableCalcEditNestedTableCalcCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetAddressingFieldsCmd
	var $tab_TableCalcSetAddressingFieldsCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetAddressingFieldsCmd$Response]).call(this);
	};
	$tab_TableCalcSetAddressingFieldsCmd.__typeName = 'tab.TableCalcSetAddressingFieldsCmd';
	global.tab.TableCalcSetAddressingFieldsCmd = $tab_TableCalcSetAddressingFieldsCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetAddressingFieldsCmd.Response
	var $tab_TableCalcSetAddressingFieldsCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetAddressingFieldsCmd$Response.__typeName = 'tab.TableCalcSetAddressingFieldsCmd$Response';
	global.tab.TableCalcSetAddressingFieldsCmd$Response = $tab_TableCalcSetAddressingFieldsCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetAddressingFieldsOrderCmd
	var $tab_TableCalcSetAddressingFieldsOrderCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetAddressingFieldsOrderCmd$Response]).call(this);
	};
	$tab_TableCalcSetAddressingFieldsOrderCmd.__typeName = 'tab.TableCalcSetAddressingFieldsOrderCmd';
	global.tab.TableCalcSetAddressingFieldsOrderCmd = $tab_TableCalcSetAddressingFieldsOrderCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetAddressingFieldsOrderCmd.Response
	var $tab_TableCalcSetAddressingFieldsOrderCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetAddressingFieldsOrderCmd$Response.__typeName = 'tab.TableCalcSetAddressingFieldsOrderCmd$Response';
	global.tab.TableCalcSetAddressingFieldsOrderCmd$Response = $tab_TableCalcSetAddressingFieldsOrderCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetAtTheLevelFieldCmd
	var $tab_TableCalcSetAtTheLevelFieldCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetAtTheLevelFieldCmd$Response]).call(this);
	};
	$tab_TableCalcSetAtTheLevelFieldCmd.__typeName = 'tab.TableCalcSetAtTheLevelFieldCmd';
	global.tab.TableCalcSetAtTheLevelFieldCmd = $tab_TableCalcSetAtTheLevelFieldCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetAtTheLevelFieldCmd.Response
	var $tab_TableCalcSetAtTheLevelFieldCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetAtTheLevelFieldCmd$Response.__typeName = 'tab.TableCalcSetAtTheLevelFieldCmd$Response';
	global.tab.TableCalcSetAtTheLevelFieldCmd$Response = $tab_TableCalcSetAtTheLevelFieldCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetCompoundRateCmd
	var $tab_TableCalcSetCompoundRateCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetCompoundRateCmd$Response]).call(this);
	};
	$tab_TableCalcSetCompoundRateCmd.__typeName = 'tab.TableCalcSetCompoundRateCmd';
	global.tab.TableCalcSetCompoundRateCmd = $tab_TableCalcSetCompoundRateCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetCompoundRateCmd.Response
	var $tab_TableCalcSetCompoundRateCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetCompoundRateCmd$Response.__typeName = 'tab.TableCalcSetCompoundRateCmd$Response';
	global.tab.TableCalcSetCompoundRateCmd$Response = $tab_TableCalcSetCompoundRateCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetCumulativeOptionsCmd
	var $tab_TableCalcSetCumulativeOptionsCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetCumulativeOptionsCmd$Response]).call(this);
	};
	$tab_TableCalcSetCumulativeOptionsCmd.__typeName = 'tab.TableCalcSetCumulativeOptionsCmd';
	global.tab.TableCalcSetCumulativeOptionsCmd = $tab_TableCalcSetCumulativeOptionsCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetCumulativeOptionsCmd.Response
	var $tab_TableCalcSetCumulativeOptionsCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetCumulativeOptionsCmd$Response.__typeName = 'tab.TableCalcSetCumulativeOptionsCmd$Response';
	global.tab.TableCalcSetCumulativeOptionsCmd$Response = $tab_TableCalcSetCumulativeOptionsCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetNullIfIncompleteCmd
	var $tab_TableCalcSetNullIfIncompleteCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetNullIfIncompleteCmd$Response]).call(this);
	};
	$tab_TableCalcSetNullIfIncompleteCmd.__typeName = 'tab.TableCalcSetNullIfIncompleteCmd';
	global.tab.TableCalcSetNullIfIncompleteCmd = $tab_TableCalcSetNullIfIncompleteCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetNullIfIncompleteCmd.Response
	var $tab_TableCalcSetNullIfIncompleteCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetNullIfIncompleteCmd$Response.__typeName = 'tab.TableCalcSetNullIfIncompleteCmd$Response';
	global.tab.TableCalcSetNullIfIncompleteCmd$Response = $tab_TableCalcSetNullIfIncompleteCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetOrderingTypeCmd
	var $tab_TableCalcSetOrderingTypeCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetOrderingTypeCmd$Response]).call(this);
	};
	$tab_TableCalcSetOrderingTypeCmd.__typeName = 'tab.TableCalcSetOrderingTypeCmd';
	global.tab.TableCalcSetOrderingTypeCmd = $tab_TableCalcSetOrderingTypeCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetOrderingTypeCmd.Response
	var $tab_TableCalcSetOrderingTypeCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetOrderingTypeCmd$Response.__typeName = 'tab.TableCalcSetOrderingTypeCmd$Response';
	global.tab.TableCalcSetOrderingTypeCmd$Response = $tab_TableCalcSetOrderingTypeCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetPercentTotalOptionsCmd
	var $tab_TableCalcSetPercentTotalOptionsCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetPercentTotalOptionsCmd$Response]).call(this);
	};
	$tab_TableCalcSetPercentTotalOptionsCmd.__typeName = 'tab.TableCalcSetPercentTotalOptionsCmd';
	global.tab.TableCalcSetPercentTotalOptionsCmd = $tab_TableCalcSetPercentTotalOptionsCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetPercentTotalOptionsCmd.Response
	var $tab_TableCalcSetPercentTotalOptionsCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetPercentTotalOptionsCmd$Response.__typeName = 'tab.TableCalcSetPercentTotalOptionsCmd$Response';
	global.tab.TableCalcSetPercentTotalOptionsCmd$Response = $tab_TableCalcSetPercentTotalOptionsCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetRankSortDirectionCmd
	var $tab_TableCalcSetRankSortDirectionCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetRankSortDirectionCmd$Response]).call(this);
	};
	$tab_TableCalcSetRankSortDirectionCmd.__typeName = 'tab.TableCalcSetRankSortDirectionCmd';
	global.tab.TableCalcSetRankSortDirectionCmd = $tab_TableCalcSetRankSortDirectionCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetRankSortDirectionCmd.Response
	var $tab_TableCalcSetRankSortDirectionCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetRankSortDirectionCmd$Response.__typeName = 'tab.TableCalcSetRankSortDirectionCmd$Response';
	global.tab.TableCalcSetRankSortDirectionCmd$Response = $tab_TableCalcSetRankSortDirectionCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetRankTypeCmd
	var $tab_TableCalcSetRankTypeCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetRankTypeCmd$Response]).call(this);
	};
	$tab_TableCalcSetRankTypeCmd.__typeName = 'tab.TableCalcSetRankTypeCmd';
	global.tab.TableCalcSetRankTypeCmd = $tab_TableCalcSetRankTypeCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetRankTypeCmd.Response
	var $tab_TableCalcSetRankTypeCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetRankTypeCmd$Response.__typeName = 'tab.TableCalcSetRankTypeCmd$Response';
	global.tab.TableCalcSetRankTypeCmd$Response = $tab_TableCalcSetRankTypeCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetReferenceOptionsCmd
	var $tab_TableCalcSetReferenceOptionsCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetReferenceOptionsCmd$Response]).call(this);
	};
	$tab_TableCalcSetReferenceOptionsCmd.__typeName = 'tab.TableCalcSetReferenceOptionsCmd';
	global.tab.TableCalcSetReferenceOptionsCmd = $tab_TableCalcSetReferenceOptionsCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetReferenceOptionsCmd.Response
	var $tab_TableCalcSetReferenceOptionsCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetReferenceOptionsCmd$Response.__typeName = 'tab.TableCalcSetReferenceOptionsCmd$Response';
	global.tab.TableCalcSetReferenceOptionsCmd$Response = $tab_TableCalcSetReferenceOptionsCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetRestartEveryFieldCmd
	var $tab_TableCalcSetRestartEveryFieldCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetRestartEveryFieldCmd$Response]).call(this);
	};
	$tab_TableCalcSetRestartEveryFieldCmd.__typeName = 'tab.TableCalcSetRestartEveryFieldCmd';
	global.tab.TableCalcSetRestartEveryFieldCmd = $tab_TableCalcSetRestartEveryFieldCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetRestartEveryFieldCmd.Response
	var $tab_TableCalcSetRestartEveryFieldCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetRestartEveryFieldCmd$Response.__typeName = 'tab.TableCalcSetRestartEveryFieldCmd$Response';
	global.tab.TableCalcSetRestartEveryFieldCmd$Response = $tab_TableCalcSetRestartEveryFieldCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetSortAggregationCmd
	var $tab_TableCalcSetSortAggregationCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetSortAggregationCmd$Response]).call(this);
	};
	$tab_TableCalcSetSortAggregationCmd.__typeName = 'tab.TableCalcSetSortAggregationCmd';
	global.tab.TableCalcSetSortAggregationCmd = $tab_TableCalcSetSortAggregationCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetSortAggregationCmd.Response
	var $tab_TableCalcSetSortAggregationCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetSortAggregationCmd$Response.__typeName = 'tab.TableCalcSetSortAggregationCmd$Response';
	global.tab.TableCalcSetSortAggregationCmd$Response = $tab_TableCalcSetSortAggregationCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetSortDirectionCmd
	var $tab_TableCalcSetSortDirectionCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetSortDirectionCmd$Response]).call(this);
	};
	$tab_TableCalcSetSortDirectionCmd.__typeName = 'tab.TableCalcSetSortDirectionCmd';
	global.tab.TableCalcSetSortDirectionCmd = $tab_TableCalcSetSortDirectionCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetSortDirectionCmd.Response
	var $tab_TableCalcSetSortDirectionCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetSortDirectionCmd$Response.__typeName = 'tab.TableCalcSetSortDirectionCmd$Response';
	global.tab.TableCalcSetSortDirectionCmd$Response = $tab_TableCalcSetSortDirectionCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetSortFieldCmd
	var $tab_TableCalcSetSortFieldCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetSortFieldCmd$Response]).call(this);
	};
	$tab_TableCalcSetSortFieldCmd.__typeName = 'tab.TableCalcSetSortFieldCmd';
	global.tab.TableCalcSetSortFieldCmd = $tab_TableCalcSetSortFieldCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetSortFieldCmd.Response
	var $tab_TableCalcSetSortFieldCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetSortFieldCmd$Response.__typeName = 'tab.TableCalcSetSortFieldCmd$Response';
	global.tab.TableCalcSetSortFieldCmd$Response = $tab_TableCalcSetSortFieldCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetSortModeCmd
	var $tab_TableCalcSetSortModeCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetSortModeCmd$Response]).call(this);
	};
	$tab_TableCalcSetSortModeCmd.__typeName = 'tab.TableCalcSetSortModeCmd';
	global.tab.TableCalcSetSortModeCmd = $tab_TableCalcSetSortModeCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetSortModeCmd.Response
	var $tab_TableCalcSetSortModeCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetSortModeCmd$Response.__typeName = 'tab.TableCalcSetSortModeCmd$Response';
	global.tab.TableCalcSetSortModeCmd$Response = $tab_TableCalcSetSortModeCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetWindowOptionsCmd
	var $tab_TableCalcSetWindowOptionsCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetWindowOptionsCmd$Response]).call(this);
	};
	$tab_TableCalcSetWindowOptionsCmd.__typeName = 'tab.TableCalcSetWindowOptionsCmd';
	global.tab.TableCalcSetWindowOptionsCmd = $tab_TableCalcSetWindowOptionsCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcSetWindowOptionsCmd.Response
	var $tab_TableCalcSetWindowOptionsCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcSetWindowOptionsCmd$Response.__typeName = 'tab.TableCalcSetWindowOptionsCmd$Response';
	global.tab.TableCalcSetWindowOptionsCmd$Response = $tab_TableCalcSetWindowOptionsCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcToggleSecondaryCalcCmd
	var $tab_TableCalcToggleSecondaryCalcCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcToggleSecondaryCalcCmd$Response]).call(this);
	};
	$tab_TableCalcToggleSecondaryCalcCmd.__typeName = 'tab.TableCalcToggleSecondaryCalcCmd';
	global.tab.TableCalcToggleSecondaryCalcCmd = $tab_TableCalcToggleSecondaryCalcCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcToggleSecondaryCalcCmd.Response
	var $tab_TableCalcToggleSecondaryCalcCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcToggleSecondaryCalcCmd$Response.__typeName = 'tab.TableCalcToggleSecondaryCalcCmd$Response';
	global.tab.TableCalcToggleSecondaryCalcCmd$Response = $tab_TableCalcToggleSecondaryCalcCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcToggleShowCalcAssistanceCmd
	var $tab_TableCalcToggleShowCalcAssistanceCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcToggleShowCalcAssistanceCmd$Response]).call(this);
	};
	$tab_TableCalcToggleShowCalcAssistanceCmd.__typeName = 'tab.TableCalcToggleShowCalcAssistanceCmd';
	global.tab.TableCalcToggleShowCalcAssistanceCmd = $tab_TableCalcToggleShowCalcAssistanceCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.TableCalcToggleShowCalcAssistanceCmd.Response
	var $tab_TableCalcToggleShowCalcAssistanceCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_TableCalcToggleShowCalcAssistanceCmd$Response.__typeName = 'tab.TableCalcToggleShowCalcAssistanceCmd$Response';
	global.tab.TableCalcToggleShowCalcAssistanceCmd$Response = $tab_TableCalcToggleShowCalcAssistanceCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.UpdateReferenceLineCmd
	var $tab_UpdateReferenceLineCmd = function() {
		ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_UpdateReferenceLineCmd$Response]).call(this);
	};
	$tab_UpdateReferenceLineCmd.__typeName = 'tab.UpdateReferenceLineCmd';
	global.tab.UpdateReferenceLineCmd = $tab_UpdateReferenceLineCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.UpdateReferenceLineCmd.Response
	var $tab_UpdateReferenceLineCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_UpdateReferenceLineCmd$Response.__typeName = 'tab.UpdateReferenceLineCmd$Response';
	global.tab.UpdateReferenceLineCmd$Response = $tab_UpdateReferenceLineCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WarningDialogModel
	var $tab_WarningDialogModel = function(parent) {
		this.$2$NewWarningMessageField = null;
		tab.Model.call(this, parent, new tab.PresModelPathItem('doc:warning-message-event'.toString(), null));
	};
	$tab_WarningDialogModel.__typeName = 'tab.WarningDialogModel';
	global.tab.WarningDialogModel = $tab_WarningDialogModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebConnectDataCmd
	var $tab_WebConnectDataCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebConnectDataCmd$Response]).call(this);
	};
	$tab_WebConnectDataCmd.__typeName = 'tab.WebConnectDataCmd';
	$tab_WebConnectDataCmd.get_commandName = function WebConnectDataCmd$get_CommandName() {
		return 'web-connect-data';
	};
	global.tab.WebConnectDataCmd = $tab_WebConnectDataCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebConnectDataCmd.Response
	var $tab_WebConnectDataCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_WebConnectDataCmd$Response.__typeName = 'tab.WebConnectDataCmd$Response';
	global.tab.WebConnectDataCmd$Response = $tab_WebConnectDataCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebEditDataSourceCmd
	var $tab_WebEditDataSourceCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebEditDataSourceCmd$Response]).call(this);
	};
	$tab_WebEditDataSourceCmd.__typeName = 'tab.WebEditDataSourceCmd';
	$tab_WebEditDataSourceCmd.get_commandName = function WebEditDataSourceCmd$get_CommandName() {
		return 'web-edit-data-source';
	};
	global.tab.WebEditDataSourceCmd = $tab_WebEditDataSourceCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebEditDataSourceCmd.Response
	var $tab_WebEditDataSourceCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_WebEditDataSourceCmd$Response.__typeName = 'tab.WebEditDataSourceCmd$Response';
	global.tab.WebEditDataSourceCmd$Response = $tab_WebEditDataSourceCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebEditObjectCaptionCmd
	var $tab_WebEditObjectCaptionCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebEditObjectCaptionCmd$Response]).call(this);
	};
	$tab_WebEditObjectCaptionCmd.__typeName = 'tab.WebEditObjectCaptionCmd';
	$tab_WebEditObjectCaptionCmd.get_commandName = function WebEditObjectCaptionCmd$get_CommandName() {
		return 'web-edit-object-caption';
	};
	global.tab.WebEditObjectCaptionCmd = $tab_WebEditObjectCaptionCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebEditObjectCaptionCmd.Response
	var $tab_WebEditObjectCaptionCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_WebEditObjectCaptionCmd$Response.__typeName = 'tab.WebEditObjectCaptionCmd$Response';
	global.tab.WebEditObjectCaptionCmd$Response = $tab_WebEditObjectCaptionCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebExportCrossTabCmd
	var $tab_WebExportCrossTabCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebExportCrossTabCmd$Response]).call(this);
	};
	$tab_WebExportCrossTabCmd.__typeName = 'tab.WebExportCrossTabCmd';
	$tab_WebExportCrossTabCmd.get_commandName = function WebExportCrossTabCmd$get_CommandName() {
		return 'web-export-cross-tab';
	};
	global.tab.WebExportCrossTabCmd = $tab_WebExportCrossTabCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebExportCrossTabCmd.Response
	var $tab_WebExportCrossTabCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_WebExportCrossTabCmd$Response.__typeName = 'tab.WebExportCrossTabCmd$Response';
	global.tab.WebExportCrossTabCmd$Response = $tab_WebExportCrossTabCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebExportDataCmd
	var $tab_WebExportDataCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebExportDataCmd$Response]).call(this);
	};
	$tab_WebExportDataCmd.__typeName = 'tab.WebExportDataCmd';
	$tab_WebExportDataCmd.get_commandName = function WebExportDataCmd$get_CommandName() {
		return 'web-export-data';
	};
	global.tab.WebExportDataCmd = $tab_WebExportDataCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebExportDataCmd.Response
	var $tab_WebExportDataCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_WebExportDataCmd$Response.__typeName = 'tab.WebExportDataCmd$Response';
	global.tab.WebExportDataCmd$Response = $tab_WebExportDataCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebExportPdfCmd
	var $tab_WebExportPdfCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebExportPdfCmd$Response]).call(this);
	};
	$tab_WebExportPdfCmd.__typeName = 'tab.WebExportPdfCmd';
	$tab_WebExportPdfCmd.get_commandName = function WebExportPdfCmd$get_CommandName() {
		return 'web-export-pdf';
	};
	global.tab.WebExportPdfCmd = $tab_WebExportPdfCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebExportPdfCmd.Response
	var $tab_WebExportPdfCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_WebExportPdfCmd$Response.__typeName = 'tab.WebExportPdfCmd$Response';
	global.tab.WebExportPdfCmd$Response = $tab_WebExportPdfCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebExportPngCmd
	var $tab_WebExportPngCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebExportPngCmd$Response]).call(this);
	};
	$tab_WebExportPngCmd.__typeName = 'tab.WebExportPngCmd';
	$tab_WebExportPngCmd.get_commandName = function WebExportPngCmd$get_CommandName() {
		return 'web-export-png';
	};
	global.tab.WebExportPngCmd = $tab_WebExportPngCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebExportPngCmd.Response
	var $tab_WebExportPngCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_WebExportPngCmd$Response.__typeName = 'tab.WebExportPngCmd$Response';
	global.tab.WebExportPngCmd$Response = $tab_WebExportPngCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebExportPowerPointCmd
	var $tab_WebExportPowerPointCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebExportPowerPointCmd$Response]).call(this);
	};
	$tab_WebExportPowerPointCmd.__typeName = 'tab.WebExportPowerPointCmd';
	$tab_WebExportPowerPointCmd.get_commandName = function WebExportPowerPointCmd$get_CommandName() {
		return 'web-export-power-point';
	};
	global.tab.WebExportPowerPointCmd = $tab_WebExportPowerPointCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebExportPowerPointCmd.Response
	var $tab_WebExportPowerPointCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_WebExportPowerPointCmd$Response.__typeName = 'tab.WebExportPowerPointCmd$Response';
	global.tab.WebExportPowerPointCmd$Response = $tab_WebExportPowerPointCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebFormatWorkbookCmd
	var $tab_WebFormatWorkbookCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebFormatWorkbookCmd$Response]).call(this);
	};
	$tab_WebFormatWorkbookCmd.__typeName = 'tab.WebFormatWorkbookCmd';
	$tab_WebFormatWorkbookCmd.get_commandName = function WebFormatWorkbookCmd$get_CommandName() {
		return 'web-format-workbook';
	};
	global.tab.WebFormatWorkbookCmd = $tab_WebFormatWorkbookCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebFormatWorkbookCmd.Response
	var $tab_WebFormatWorkbookCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_WebFormatWorkbookCmd$Response.__typeName = 'tab.WebFormatWorkbookCmd$Response';
	global.tab.WebFormatWorkbookCmd$Response = $tab_WebFormatWorkbookCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebRemoveShelfPillCmd
	var $tab_WebRemoveShelfPillCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebRemoveShelfPillCmd$Response]).call(this);
	};
	$tab_WebRemoveShelfPillCmd.__typeName = 'tab.WebRemoveShelfPillCmd';
	$tab_WebRemoveShelfPillCmd.get_commandName = function WebRemoveShelfPillCmd$get_CommandName() {
		return 'web-remove-shelf-pill';
	};
	global.tab.WebRemoveShelfPillCmd = $tab_WebRemoveShelfPillCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebRemoveShelfPillCmd.Response
	var $tab_WebRemoveShelfPillCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_WebRemoveShelfPillCmd$Response.__typeName = 'tab.WebRemoveShelfPillCmd$Response';
	global.tab.WebRemoveShelfPillCmd$Response = $tab_WebRemoveShelfPillCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebRenameDatasourceDialogCmd
	var $tab_WebRenameDatasourceDialogCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebRenameDatasourceDialogCmd$Response]).call(this);
	};
	$tab_WebRenameDatasourceDialogCmd.__typeName = 'tab.WebRenameDatasourceDialogCmd';
	$tab_WebRenameDatasourceDialogCmd.get_commandName = function WebRenameDatasourceDialogCmd$get_CommandName() {
		return 'web-rename-datasource-dialog';
	};
	global.tab.WebRenameDatasourceDialogCmd = $tab_WebRenameDatasourceDialogCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebRenameDatasourceDialogCmd.Response
	var $tab_WebRenameDatasourceDialogCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_WebRenameDatasourceDialogCmd$Response.__typeName = 'tab.WebRenameDatasourceDialogCmd$Response';
	global.tab.WebRenameDatasourceDialogCmd$Response = $tab_WebRenameDatasourceDialogCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebShowMeCmd
	var $tab_WebShowMeCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebShowMeCmd$Response]).call(this);
	};
	$tab_WebShowMeCmd.__typeName = 'tab.WebShowMeCmd';
	$tab_WebShowMeCmd.get_commandName = function WebShowMeCmd$get_CommandName() {
		return 'web-show-me';
	};
	global.tab.WebShowMeCmd = $tab_WebShowMeCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebShowMeCmd.Response
	var $tab_WebShowMeCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_WebShowMeCmd$Response.__typeName = 'tab.WebShowMeCmd$Response';
	global.tab.WebShowMeCmd$Response = $tab_WebShowMeCmd$Response;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebToolbarMoreCmd
	var $tab_WebToolbarMoreCmd = function() {
		ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebToolbarMoreCmd$Response]).call(this);
	};
	$tab_WebToolbarMoreCmd.__typeName = 'tab.WebToolbarMoreCmd';
	$tab_WebToolbarMoreCmd.get_commandName = function WebToolbarMoreCmd$get_CommandName() {
		return 'web-toolbar-more';
	};
	global.tab.WebToolbarMoreCmd = $tab_WebToolbarMoreCmd;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Domain.WebToolbarMoreCmd.Response
	var $tab_WebToolbarMoreCmd$Response = function(responseParams) {
		this.$$cmdParams = null;
		this.$$cmdParams = responseParams;
		this.$validateResponseParams();
	};
	$tab_WebToolbarMoreCmd$Response.__typeName = 'tab.WebToolbarMoreCmd$Response';
	global.tab.WebToolbarMoreCmd$Response = $tab_WebToolbarMoreCmd$Response;
	ss.initClass($tab_$ShelfDropClientCommand, $asm, {
		handleRemoteCommandSuccess: function ShelfDropClientCommand$HandleRemoteCommandSuccess(cmd, pm) {
			tab.ClientCommand.prototype.handleRemoteCommandSuccess.call(this, cmd, pm);
			if (this.$prepared) {
				return;
			}
			var result = pm;
			if (ss.isNullOrUndefined(result) || ss.getKeyCount(result) === 0) {
				return;
			}
			this.$prepared = true;
			var command = this.$origDropCommand;
			var cmdParams = this.$origDropCommand.commandParams;
			if (ss.keyExists(result, 'dropCommandModel')) {
				var commands = result['dropCommandModel'];
				var dropCommand = tab.CommandSerializer.deserialize(tab.SimpleCommandsPresModelWrapper.create(commands).get_simpleCommand(), false);
				if (ss.isValue(dropCommand)) {
					command = dropCommand;
					cmdParams = dropCommand.commandParams;
				}
			}
			if (ss.keyExists(result, 'fieldEncodings')) {
				cmdParams['fieldEncodings'] = result['fieldEncodings'];
			}
			else if (ss.keyExists(result, 'fn')) {
				var fe = { fn: ss.cast(result['fn'], String) };
				cmdParams['fieldEncodings'] = JSON.stringify([fe]);
			}
			$tab_ShelfClientCommands.setCommandParams(command, cmdParams);
			this.enqueueCommand(command);
			if (ss.keyExists(result, 'doDropUiAction') && ss.unbox(ss.cast(result['doDropUiAction'], Boolean)) && this.$dropShelfType === 'filter-shelf') {
				var encoding = result['fieldEncoding'];
				var addQuickFilterCmd = tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'create-default-quick-filter' }, null);
				var addQuickFilterParams = {};
				addQuickFilterParams['fn'] = encoding.fn;
				if (this.$droppingRelativeFilter) {
					addQuickFilterParams['quantitativeMode'] = 'rel-date';
				}
				$tab_ShelfClientCommands.setCommandParams(addQuickFilterCmd, addQuickFilterParams);
				this.enqueueCommand(addQuickFilterCmd);
			}
		}
	}, tab.ClientCommand);
	ss.initClass($tab_AssignCategoricalColorPaletteCmd, $asm, {
		invoke: function AssignCategoricalColorPaletteCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'assign-categorical-color-palette' }, this.cmdParams));
		},
		validateInvokeParams: function AssignCategoricalColorPaletteCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'componentId')) {
				throw new ss.Exception('missing param DocParams.ComponentID');
			}
			if (!ss.keyExists(this.cmdParams, 'colorPaletteId')) {
				throw new ss.Exception('missing param DocParams.ColorPaletteId');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_AssignCategoricalColorPaletteCmd$Response]));
	ss.initClass($tab_AssignCategoricalColorPaletteCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_BuildMainMenuCmd, $asm, {
		invoke: function BuildMainMenuCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'build-main-menu' }, this.cmdParams));
		},
		validateInvokeParams: function BuildMainMenuCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'menuItemId')) {
				throw new ss.Exception('missing param DocParams.MenuItemId');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_BuildMainMenuCmd$Response]));
	ss.initClass($tab_BuildMainMenuCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
			if (!ss.keyExists(this.$$cmdParams, 'commands')) {
				throw new ss.Exception('missing param DocParams.Commands');
			}
		}
	});
	ss.initClass($tab_BuildShelfItemContextMenuCmd, $asm, {
		invoke: function BuildShelfItemContextMenuCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'build-shelf-item-context-menu' }, this.cmdParams));
		},
		validateInvokeParams: function BuildShelfItemContextMenuCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'shelfItemId')) {
				throw new ss.Exception('missing param DocParams.ShelfItemID');
			}
			if (!ss.keyExists(this.cmdParams, 'shelfType')) {
				throw new ss.Exception('missing param DocParams.ShelfType');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_BuildShelfItemContextMenuCmd$Response]));
	ss.initClass($tab_BuildShelfItemContextMenuCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
			if (!ss.keyExists(this.$$cmdParams, 'commands')) {
				throw new ss.Exception('missing param DocParams.Commands');
			}
		}
	});
	ss.initClass($tab_CalcApplyResponse, $asm, {
		get_resultType: function CalcApplyResponse$get_ResultType() {
			return this.$resultType;
		},
		get_errorMessage: function CalcApplyResponse$get_ErrorMessage() {
			return this.$errorMessage;
		},
		set_errorMessage: function CalcApplyResponse$set_ErrorMessage(value) {
			this.$errorMessage = value;
		}
	});
	ss.initClass($tab_CalculationAutoCompleteItemModel, $asm, {
		get_$item: function CalculationAutoCompleteItemModel$get_Item() {
			return this.pm;
		},
		get_itemType: function CalculationAutoCompleteItemModel$get_ItemType() {
			return (ss.isValue(this.get_$item().autocompleteType) ? this.get_$item().autocompleteType : 'func');
		},
		get_label: function CalculationAutoCompleteItemModel$get_Label() {
			return this.get_$item().label;
		},
		get_styledLabel: function CalculationAutoCompleteItemModel$get_StyledLabel() {
			return this.get_$item().styledLabel;
		},
		get_iconResource: function CalculationAutoCompleteItemModel$get_IconResource() {
			return this.get_$item().fieldIconRes;
		},
		get_tooltip: function CalculationAutoCompleteItemModel$get_Tooltip() {
			return this.get_$item().tooltipText;
		},
		get_replaceText: function CalculationAutoCompleteItemModel$get_ReplaceText() {
			return this.get_$item().replaceText;
		},
		get_caretIndex: function CalculationAutoCompleteItemModel$get_CaretIndex() {
			return this.get_$item().caretIndex;
		}
	}, tab.Model);
	ss.initClass($tab_CalculationAutoCompleteModel, $asm, {
		get_functionTooltip: function CalculationAutoCompleteModel$get_FunctionTooltip() {
			return this.pm.functionHelp;
		},
		get_functionHelpPosition: function CalculationAutoCompleteModel$get_FunctionHelpPosition() {
			return this.pm.functionHelpIndex;
		},
		get_calculation: function CalculationAutoCompleteModel$get_Calculation() {
			return this.pm.acCalc;
		},
		get_startIndex: function CalculationAutoCompleteModel$get_StartIndex() {
			return this.pm.startIndex;
		},
		get_endIndex: function CalculationAutoCompleteModel$get_EndIndex() {
			return this.pm.endIndex;
		},
		get_items: function CalculationAutoCompleteModel$get_Items() {
			return this.$itemModels;
		}
	}, tab.Model);
	ss.initClass($tab_CalculationCommands, $asm, {});
	ss.initClass($tab_CategoricalColorEditorDialogModel, $asm, {
		add_showOrUpdateDialog: function CategoricalColorEditorDialogModel$add_ShowOrUpdateDialog(value) {
			this.$2$ShowOrUpdateDialogField = ss.delegateCombine(this.$2$ShowOrUpdateDialogField, value);
		},
		remove_showOrUpdateDialog: function CategoricalColorEditorDialogModel$remove_ShowOrUpdateDialog(value) {
			this.$2$ShowOrUpdateDialogField = ss.delegateRemove(this.$2$ShowOrUpdateDialogField, value);
		},
		get_notificationId: function CategoricalColorEditorDialogModel$get_NotificationId() {
			return 'doc:web-categorical-color-dialog-event';
		},
		get_fieldDisplayNames: function CategoricalColorEditorDialogModel$get_FieldDisplayNames() {
			return this.get_$dialogPresModel().categoricalColorDialog.fieldDisplayNames;
		},
		get_itemColors: function CategoricalColorEditorDialogModel$get_ItemColors() {
			return this.get_$dialogPresModel().categoricalColorDialog.colorLegend.colorLegendItems;
		},
		get_availablePalettes: function CategoricalColorEditorDialogModel$get_AvailablePalettes() {
			return this.get_$dialogPresModel().categoricalColorDialog.categoricalColorEncoding.colorPalettes;
		},
		get_currentPaletteIndex: function CategoricalColorEditorDialogModel$get_CurrentPaletteIndex() {
			return this.get_$dialogPresModel().categoricalColorDialog.paletteIndex;
		},
		get_selectedLegendItemIndexes: function CategoricalColorEditorDialogModel$get_SelectedLegendItemIndexes() {
			return this.get_$dialogPresModel().categoricalColorDialog.itemIndices;
		},
		get_controllerId: function CategoricalColorEditorDialogModel$get_ControllerId() {
			return this.get_$dialogPresModel().categoricalColorDialog.componentId;
		},
		get_$dialogPresModel: function CategoricalColorEditorDialogModel$get_DialogPresModel() {
			return this.pm;
		},
		onNotify: function CategoricalColorEditorDialogModel$OnNotify(pm, context) {
			this.swapPresModel(pm);
			this.raiseEvent(this.$2$ShowOrUpdateDialogField, context);
		}
	}, tab.Model, [tab.IHandleNotifications]);
	ss.initClass($tab_ChangeLineInterpolationCmd, $asm, {
		invoke: function ChangeLineInterpolationCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'change-line-interpolation' }, this.cmdParams));
		},
		validateInvokeParams: function ChangeLineInterpolationCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'lineInterpolationMode')) {
				throw new ss.Exception('missing param DocParams.LineInterpolationMode');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_ChangeLineInterpolationCmd$Response]));
	ss.initClass($tab_ChangeLineInterpolationCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_CloseAuthoringCmd, $asm, {
		validateInvokeParams: function CloseAuthoringCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_CloseAuthoringCmd$Response]));
	ss.initClass($tab_CloseAuthoringCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_CloseDataSourceErrorDialogModel, $asm, {
		add_newError: function CloseDataSourceErrorDialogModel$add_NewError(value) {
			this.$2$NewErrorField = ss.delegateCombine(this.$2$NewErrorField, value);
		},
		remove_newError: function CloseDataSourceErrorDialogModel$remove_NewError(value) {
			this.$2$NewErrorField = ss.delegateRemove(this.$2$NewErrorField, value);
		},
		get_sheetNames: function CloseDataSourceErrorDialogModel$get_SheetNames() {
			return this.get_$errorPresModel().sheetNames;
		},
		get_dataSourceName: function CloseDataSourceErrorDialogModel$get_DataSourceName() {
			return this.get_$errorPresModel().datasource;
		},
		get_notificationId: function CloseDataSourceErrorDialogModel$get_NotificationId() {
			return 'doc:close-data-source-error-dialog-event';
		},
		get_$errorPresModel: function CloseDataSourceErrorDialogModel$get_ErrorPresModel() {
			return this.pm;
		},
		onNotify: function CloseDataSourceErrorDialogModel$OnNotify(pm, context) {
			this.swapPresModel(pm);
			if (this.get_$errorPresModel().needsCloseDsErrorPrompt) {
				this.raiseEvent(this.$2$NewErrorField, context);
			}
		}
	}, tab.Model, [tab.IHandleNotifications]);
	ss.initClass($tab_CloseRefLineEditorCmd, $asm, {
		invoke: function CloseRefLineEditorCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'close-ref-line-editor' }, this.cmdParams));
		},
		validateInvokeParams: function CloseRefLineEditorCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_CloseRefLineEditorCmd$Response]));
	ss.initClass($tab_CloseRefLineEditorCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_CommandBuilder, $asm, {
		get_command: function CommandBuilder$get_Command() {
			return this.$1$CommandField;
		},
		set_command: function CommandBuilder$set_Command(value) {
			this.$1$CommandField = value;
		},
		addParameter: function CommandBuilder$AddParameter(param, value) {
			if (ss.isNullOrUndefined(this.get_command().commandParams)) {
				this.get_command().commandParams = ss.mkdict([param, value]);
			}
			else {
				this.get_command().commandParams[param] = value;
			}
		},
		toCommandAction$2: function(T) {
			return function CommandBuilder$ToCommandAction(param, extractData, blockingState, successCallback) {
				return ss.mkdel(this, function(sender) {
					var value = extractData(sender);
					this.addParameter(param, value);
					tab.ServerCommands.executeServerCommand(this.get_command(), blockingState, successCallback, null);
				});
			};
		},
		toCommandAction$1: function CommandBuilder$ToCommandAction(blockingState) {
			return ss.mkdel(this, function() {
				tab.ServerCommands.executeServerCommand(this.get_command(), blockingState, null, null);
			});
		},
		toCommandAction: function CommandBuilder$ToCommandAction() {
			return this.toCommandAction$1('immediately');
		}
	});
	ss.initClass($tab_DashboardZoneCommands, $asm, {});
	ss.initClass($tab_DistributionModel, $asm, {
		add_modelUpdated: function DistributionModel$add_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateCombine(this.$2$ModelUpdatedField, value);
		},
		remove_modelUpdated: function DistributionModel$remove_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateRemove(this.$2$ModelUpdatedField, value);
		},
		get_distributionPresModel: function DistributionModel$get_DistributionPresModel() {
			return this.pm;
		},
		get_isValid: function DistributionModel$get_IsValid() {
			return this.get_distributionPresModel().valid;
		},
		get_distributionType: function DistributionModel$get_DistributionType() {
			return this.get_distributionPresModel().distributionType;
		},
		get_refLineId: function DistributionModel$get_RefLineId() {
			return this.get_distributionPresModel().refLineId || '';
		},
		get_visualId: function DistributionModel$get_VisualId() {
			return this.get_distributionPresModel().visualIdPresModel;
		},
		get_scopeType: function DistributionModel$get_ScopeType() {
			return ss.coalesce(this.get_distributionPresModel().referenceLineScopeType, 'per-pane');
		},
		get_labelType: function DistributionModel$get_LabelType() {
			return ss.coalesce(this.get_distributionPresModel().referenceLineLabelType, 'automatic');
		},
		get_tooltipType: function DistributionModel$get_TooltipType() {
			return ss.coalesce(this.get_distributionPresModel().referenceLineTooltipType, 'automatic');
		},
		get_validLabelTypes: function DistributionModel$get_ValidLabelTypes() {
			return this.$2$ValidLabelTypesField;
		},
		set_validLabelTypes: function DistributionModel$set_ValidLabelTypes(value) {
			this.$2$ValidLabelTypesField = value;
		},
		get_validTooltipTypes: function DistributionModel$get_ValidTooltipTypes() {
			return this.$2$ValidTooltipTypesField;
		},
		set_validTooltipTypes: function DistributionModel$set_ValidTooltipTypes(value) {
			this.$2$ValidTooltipTypesField = value;
		},
		get_customLabel: function DistributionModel$get_CustomLabel() {
			return this.get_distributionPresModel().label || '';
		},
		get_customTooltip: function DistributionModel$get_CustomTooltip() {
			return this.get_distributionPresModel().tooltipText || '';
		},
		get_validCustomLabelTags: function DistributionModel$get_ValidCustomLabelTags() {
			return this.$2$ValidCustomLabelTagsField;
		},
		set_validCustomLabelTags: function DistributionModel$set_ValidCustomLabelTags(value) {
			this.$2$ValidCustomLabelTagsField = value;
		},
		get_formulaGroup: function DistributionModel$get_FormulaGroup() {
			return ss.coalesce(this.get_distributionPresModel().reflineFormulaGroup, 'distribution');
		},
		get_instantAnalyticsEnabled: function DistributionModel$get_InstantAnalyticsEnabled() {
			return this.get_distributionPresModel().enableInstantAnalytics;
		},
		get_isInstantAnalyticsAllowed: function DistributionModel$get_IsInstantAnalyticsAllowed() {
			return this.get_distributionPresModel().instantAnalyticsAllowed;
		},
		get_isPercentilesAllowed: function DistributionModel$get_IsPercentilesAllowed() {
			return this.get_distributionPresModel().percentilesAllowed;
		},
		get_isQuantilesAllowed: function DistributionModel$get_IsQuantilesAllowed() {
			return this.get_distributionPresModel().quantilesAllowed;
		},
		get_isStandardDeviationAllowed: function DistributionModel$get_IsStandardDeviationAllowed() {
			return this.get_distributionPresModel().standardDeviationAllowed;
		},
		get_selectedText: function DistributionModel$get_SelectedText() {
			return this.get_distributionPresModel().distributionValueString;
		},
		get_distributionPercentagesModel: function DistributionModel$get_DistributionPercentagesModel() {
			return this.$2$DistributionPercentagesModelField;
		},
		set_distributionPercentagesModel: function DistributionModel$set_DistributionPercentagesModel(value) {
			this.$2$DistributionPercentagesModelField = value;
		},
		get_distributionPercentilesModel: function DistributionModel$get_DistributionPercentilesModel() {
			return this.$2$DistributionPercentilesModelField;
		},
		set_distributionPercentilesModel: function DistributionModel$set_DistributionPercentilesModel(value) {
			this.$2$DistributionPercentilesModelField = value;
		},
		get_distributionQuantilesModel: function DistributionModel$get_DistributionQuantilesModel() {
			return this.$2$DistributionQuantilesModelField;
		},
		set_distributionQuantilesModel: function DistributionModel$set_DistributionQuantilesModel(value) {
			this.$2$DistributionQuantilesModelField = value;
		},
		get_distributionStandardDeviationModel: function DistributionModel$get_DistributionStandardDeviationModel() {
			return this.$2$DistributionStandardDeviationModelField;
		},
		set_distributionStandardDeviationModel: function DistributionModel$set_DistributionStandardDeviationModel(value) {
			this.$2$DistributionStandardDeviationModelField = value;
		},
		$updateValidCustomLabelTags: function DistributionModel$UpdateValidCustomLabelTags(tags) {
			this.set_validCustomLabelTags(_.map(tags, function(tag) {
				return tag;
			}));
		},
		$updateValidLabelTypes: function DistributionModel$UpdateValidLabelTypes(validLabelTypes) {
			this.set_validLabelTypes(_.map(validLabelTypes, function(label) {
				return { key: label.referenceLineLabelType, value: label.displayText };
			}));
		},
		$updateValidTooltipTypes: function DistributionModel$UpdateValidTooltipTypes(validTooltipTypes) {
			this.set_validTooltipTypes(_.map(validTooltipTypes, function(tooltip) {
				return { key: tooltip.referenceLineTooltipType, value: tooltip.displayText };
			}));
		},
		update: function DistributionModel$Update(distributionPresModel, context) {
			this.$updateValidLabelTypes(distributionPresModel.validReferenceLineLabelTypes);
			this.$updateValidTooltipTypes(distributionPresModel.validReferenceLineTooltipTypes);
			this.$updateValidCustomLabelTags(distributionPresModel.validReferenceLineCustomLabelTags);
			this.get_distributionPercentagesModel().update(distributionPresModel.distributionPercentages, distributionPresModel.visualIdPresModel, distributionPresModel.refLineId, context);
			this.get_distributionPercentilesModel().update(distributionPresModel.distributionPercentiles, distributionPresModel.visualIdPresModel, distributionPresModel.refLineId, context);
			this.get_distributionQuantilesModel().update(distributionPresModel.distributionQuantiles, distributionPresModel.visualIdPresModel, distributionPresModel.refLineId, context);
			this.get_distributionStandardDeviationModel().update(distributionPresModel.distributionStddev, distributionPresModel.visualIdPresModel, distributionPresModel.refLineId, context);
			this.simpleSwapToUpdate(distributionPresModel, this.$2$ModelUpdatedField, context);
		}
	}, tab.Model);
	ss.initClass($tab_DistributionPercentagesModel, $asm, {
		add_modelUpdated: function DistributionPercentagesModel$add_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateCombine(this.$2$ModelUpdatedField, value);
		},
		remove_modelUpdated: function DistributionPercentagesModel$remove_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateRemove(this.$2$ModelUpdatedField, value);
		},
		get_visualID: function DistributionPercentagesModel$get_VisualID() {
			return this.$2$VisualIDField;
		},
		set_visualID: function DistributionPercentagesModel$set_VisualID(value) {
			this.$2$VisualIDField = value;
		},
		get_refLineID: function DistributionPercentagesModel$get_RefLineID() {
			return this.$2$RefLineIDField;
		},
		set_refLineID: function DistributionPercentagesModel$set_RefLineID(value) {
			this.$2$RefLineIDField = value;
		},
		get_distributionPercentagesPresModel: function DistributionPercentagesModel$get_DistributionPercentagesPresModel() {
			return this.pm;
		},
		get_percentages: function DistributionPercentagesModel$get_Percentages() {
			return this.get_distributionPercentagesPresModel().percentagesStr;
		},
		get_validFormulaTypes: function DistributionPercentagesModel$get_ValidFormulaTypes() {
			return this.$2$ValidFormulaTypesField;
		},
		set_validFormulaTypes: function DistributionPercentagesModel$set_ValidFormulaTypes(value) {
			this.$2$ValidFormulaTypesField = value;
		},
		get_formulaType: function DistributionPercentagesModel$get_FormulaType() {
			return ss.coalesce(this.get_distributionPercentagesPresModel().referenceLineFormulaType, 'average');
		},
		get_formattedConstantValue: function DistributionPercentagesModel$get_FormattedConstantValue() {
			return this.get_distributionPercentagesPresModel().formattedValue || '';
		},
		get_fieldPickerCombo: function DistributionPercentagesModel$get_FieldPickerCombo() {
			return this.$2$FieldPickerComboField;
		},
		set_fieldPickerCombo: function DistributionPercentagesModel$set_FieldPickerCombo(value) {
			this.$2$FieldPickerComboField = value;
		},
		get_isParameterSelected: function DistributionPercentagesModel$get_IsParameterSelected() {
			return this.get_distributionPercentagesPresModel().isParameterSelected;
		},
		$formulaPresModelToArray: function DistributionPercentagesModel$FormulaPresModelToArray(pm) {
			var emptyFormulas = [];
			if (ss.isNullOrUndefined(pm)) {
				return emptyFormulas;
			}
			return emptyFormulas.concat.apply(emptyFormulas, pm);
		},
		update: function DistributionPercentagesModel$Update(distributionPercentagesModel, visualId, refLineID, context) {
			this.set_visualID(visualId);
			this.set_refLineID(refLineID);
			if (ss.isValue(distributionPercentagesModel)) {
				this.get_fieldPickerCombo().update(distributionPercentagesModel.fieldPickerCombo, context);
				this.set_validFormulaTypes(this.$formulaPresModelToArray(distributionPercentagesModel.validReferenceLineFormulaTypes));
			}
			this.simpleSwapToUpdate(distributionPercentagesModel, this.$2$ModelUpdatedField, context);
		}
	}, tab.Model);
	ss.initClass($tab_DistributionPercentilesModel, $asm, {
		add_modelUpdated: function DistributionPercentilesModel$add_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateCombine(this.$2$ModelUpdatedField, value);
		},
		remove_modelUpdated: function DistributionPercentilesModel$remove_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateRemove(this.$2$ModelUpdatedField, value);
		},
		get_visualID: function DistributionPercentilesModel$get_VisualID() {
			return this.$2$VisualIDField;
		},
		set_visualID: function DistributionPercentilesModel$set_VisualID(value) {
			this.$2$VisualIDField = value;
		},
		get_refLineID: function DistributionPercentilesModel$get_RefLineID() {
			return this.$2$RefLineIDField;
		},
		set_refLineID: function DistributionPercentilesModel$set_RefLineID(value) {
			this.$2$RefLineIDField = value;
		},
		get_percentileComboModel: function DistributionPercentilesModel$get_PercentileComboModel() {
			return this.$2$PercentileComboModelField;
		},
		set_percentileComboModel: function DistributionPercentilesModel$set_PercentileComboModel(value) {
			this.$2$PercentileComboModelField = value;
		},
		get_distributionPercentilesPresModel: function DistributionPercentilesModel$get_DistributionPercentilesPresModel() {
			return this.pm;
		},
		update: function DistributionPercentilesModel$Update(distributionPercentilesModel, visualId, refLineID, context) {
			this.set_visualID(visualId);
			this.set_refLineID(refLineID);
			if (ss.isValue(distributionPercentilesModel)) {
				this.get_percentileComboModel().update(distributionPercentilesModel.distributionPercentilesLevelCombo, context);
			}
			this.simpleSwapToUpdate(distributionPercentilesModel, this.$2$ModelUpdatedField, context);
		}
	}, tab.Model);
	ss.initClass($tab_DistributionQuantilesModel, $asm, {
		add_modelUpdated: function DistributionQuantilesModel$add_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateCombine(this.$2$ModelUpdatedField, value);
		},
		remove_modelUpdated: function DistributionQuantilesModel$remove_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateRemove(this.$2$ModelUpdatedField, value);
		},
		get_visualID: function DistributionQuantilesModel$get_VisualID() {
			return this.$2$VisualIDField;
		},
		set_visualID: function DistributionQuantilesModel$set_VisualID(value) {
			this.$2$VisualIDField = value;
		},
		get_distributionQuantilesCombo: function DistributionQuantilesModel$get_DistributionQuantilesCombo() {
			return this.$2$DistributionQuantilesComboField;
		},
		set_distributionQuantilesCombo: function DistributionQuantilesModel$set_DistributionQuantilesCombo(value) {
			this.$2$DistributionQuantilesComboField = value;
		},
		get_refLineID: function DistributionQuantilesModel$get_RefLineID() {
			return this.$2$RefLineIDField;
		},
		set_refLineID: function DistributionQuantilesModel$set_RefLineID(value) {
			this.$2$RefLineIDField = value;
		},
		get_distributionQuantilesPresModel: function DistributionQuantilesModel$get_DistributionQuantilesPresModel() {
			return this.pm;
		},
		update: function DistributionQuantilesModel$Update(quantilesPresModel, visualId, refLineID, context) {
			this.set_visualID(visualId);
			this.set_refLineID(refLineID);
			if (ss.isValue(quantilesPresModel)) {
				this.get_distributionQuantilesCombo().update(quantilesPresModel.distributionQuantilesLevelCombo, context);
			}
			this.simpleSwapToUpdate(quantilesPresModel, this.$2$ModelUpdatedField, context);
		}
	}, tab.Model);
	ss.initClass($tab_DistributionStandardDeviationModel, $asm, {
		add_modelUpdated: function DistributionStandardDeviationModel$add_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateCombine(this.$2$ModelUpdatedField, value);
		},
		remove_modelUpdated: function DistributionStandardDeviationModel$remove_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateRemove(this.$2$ModelUpdatedField, value);
		},
		get_visualID: function DistributionStandardDeviationModel$get_VisualID() {
			return this.$2$VisualIDField;
		},
		set_visualID: function DistributionStandardDeviationModel$set_VisualID(value) {
			this.$2$VisualIDField = value;
		},
		get_refLineID: function DistributionStandardDeviationModel$get_RefLineID() {
			return this.$2$RefLineIDField;
		},
		set_refLineID: function DistributionStandardDeviationModel$set_RefLineID(value) {
			this.$2$RefLineIDField = value;
		},
		get_distributionStandardDeviationPresModel: function DistributionStandardDeviationModel$get_DistributionStandardDeviationPresModel() {
			return this.pm;
		},
		get_stDevType: function DistributionStandardDeviationModel$get_StDevType() {
			return this.get_distributionStandardDeviationPresModel().stdevType;
		},
		get_factors: function DistributionStandardDeviationModel$get_Factors() {
			return this.get_distributionStandardDeviationPresModel().factorsStr;
		},
		get_validStDevTypes: function DistributionStandardDeviationModel$get_ValidStDevTypes() {
			return this.$2$ValidStDevTypesField;
		},
		set_validStDevTypes: function DistributionStandardDeviationModel$set_ValidStDevTypes(value) {
			this.$2$ValidStDevTypesField = value;
		},
		update: function DistributionStandardDeviationModel$Update(distributionStandardDeviationModel, visualId, refLineID, context) {
			this.set_visualID(visualId);
			this.set_refLineID(refLineID);
			this.set_validStDevTypes(_.map(distributionStandardDeviationModel.translatedStdevTypes, function(type) {
				return { key: type.stdevType, value: type.displayText };
			}));
			this.simpleSwapToUpdate(distributionStandardDeviationModel, this.$2$ModelUpdatedField, context);
		}
	}, tab.Model);
	ss.initClass($tab_DragToShowMeInfo, $asm, {});
	ss.initClass($tab_DragToShowMeInfoWrapper, $asm, {
		get_allFieldModels: function DragToShowMeInfoWrapper$get_AllFieldModels() {
			var fieldModels = [];
			for (var $t1 = 0; $t1 < this.infoList.length; $t1++) {
				var info = this.infoList[$t1];
				fieldModels.push(info.fieldModel);
			}
			return fieldModels;
		},
		add: function DragToShowMeInfoWrapper$Add(info) {
			this.infoList.push(info);
		}
	});
	ss.initClass($tab_DropReferenceLineOnFilterShelfCmd, $asm, {
		invoke: function DropReferenceLineOnFilterShelfCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'drop-ref-line-on-filter-shelf' }, this.cmdParams));
		},
		validateInvokeParams: function DropReferenceLineOnFilterShelfCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'fn')) {
				throw new ss.Exception('missing param DocParams.FieldName');
			}
			if (!ss.keyExists(this.cmdParams, 'shelfDropTargetPosition')) {
				throw new ss.Exception('missing param DocParams.DropTargetPosition');
			}
			if (!ss.keyExists(this.cmdParams, 'refLineId')) {
				throw new ss.Exception('missing param DocParams.ReferenceLineId');
			}
			if (!ss.keyExists(this.cmdParams, 'paneId')) {
				throw new ss.Exception('missing param DocParams.PaneId');
			}
			if (!ss.keyExists(this.cmdParams, 'simpleCommandModel')) {
				throw new ss.Exception('missing param DocParams.Command');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_DropReferenceLineOnFilterShelfCmd$Response]));
	ss.initClass($tab_DropReferenceLineOnFilterShelfCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_DropReferenceLineOnSchemaViewerCmd, $asm, {
		invoke: function DropReferenceLineOnSchemaViewerCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'drop-ref-line-on-schema-viewer' }, this.cmdParams));
		},
		validateInvokeParams: function DropReferenceLineOnSchemaViewerCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'fn')) {
				throw new ss.Exception('missing param DocParams.FieldName');
			}
			if (!ss.keyExists(this.cmdParams, 'refLineId')) {
				throw new ss.Exception('missing param DocParams.ReferenceLineId');
			}
			if (!ss.keyExists(this.cmdParams, 'paneId')) {
				throw new ss.Exception('missing param DocParams.PaneId');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_DropReferenceLineOnSchemaViewerCmd$Response]));
	ss.initClass($tab_DropReferenceLineOnSchemaViewerCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_DropReferenceLineOnShelfCmd, $asm, {
		invoke: function DropReferenceLineOnShelfCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'drop-ref-line-on-shelf' }, this.cmdParams));
		},
		validateInvokeParams: function DropReferenceLineOnShelfCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'fn')) {
				throw new ss.Exception('missing param DocParams.FieldName');
			}
			if (!ss.keyExists(this.cmdParams, 'shelfDropTargetPosition')) {
				throw new ss.Exception('missing param DocParams.DropTargetPosition');
			}
			if (!ss.keyExists(this.cmdParams, 'refLineId')) {
				throw new ss.Exception('missing param DocParams.ReferenceLineId');
			}
			if (!ss.keyExists(this.cmdParams, 'paneId')) {
				throw new ss.Exception('missing param DocParams.PaneId');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_DropReferenceLineOnShelfCmd$Response]));
	ss.initClass($tab_DropReferenceLineOnShelfCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_EditAxisDialogCommands, $asm, {});
	ss.initClass($tab_EditWebZoneUrlCmd, $asm, {
		invoke: function EditWebZoneUrlCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'edit-web-zone-url' }, this.cmdParams));
		},
		validateInvokeParams: function EditWebZoneUrlCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_EditWebZoneUrlCmd$Response]));
	ss.initClass($tab_EditWebZoneUrlCmd$Response, $asm, {
		hasCurrentUrl: function Response$HasCurrentUrl() {
			return ss.keyExists(this.$$cmdParams, 'urlString');
		},
		hasZoneID: function Response$HasZoneID() {
			return ss.keyExists(this.$$cmdParams, 'zoneId');
		},
		hasCommandRedirectType: function Response$HasCommandRedirectType() {
			return ss.keyExists(this.$$cmdParams, 'commandRedirectType');
		},
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_FieldPickerComboModel, $asm, {
		add_modelUpdated: function FieldPickerComboModel$add_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateCombine(this.$2$ModelUpdatedField, value);
		},
		remove_modelUpdated: function FieldPickerComboModel$remove_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateRemove(this.$2$ModelUpdatedField, value);
		},
		get_fieldPickerComboPresModel: function FieldPickerComboModel$get_FieldPickerComboPresModel() {
			return this.pm;
		},
		get_selectedField: function FieldPickerComboModel$get_SelectedField() {
			return this.get_fieldPickerComboPresModel().fn;
		},
		get_fields: function FieldPickerComboModel$get_Fields() {
			return _.map(this.get_fieldPickerComboPresModel().fieldPickerFields, function(field) {
				return new $tab_FieldPickerFieldModel(field);
			});
		},
		update: function FieldPickerComboModel$Update(fieldPickerPresModel, context) {
			this.simpleSwapToUpdate(fieldPickerPresModel, this.$2$ModelUpdatedField, context);
		}
	}, tab.Model);
	ss.initClass($tab_FieldPickerFieldModel, $asm, {});
	ss.initClass($tab_FormatCommands, $asm, {});
	ss.initClass($tab_GetDensityColorPalettesCmd, $asm, {
		invoke: function GetDensityColorPalettesCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'get-density-color-palettes' }, this.cmdParams));
		},
		validateInvokeParams: function GetDensityColorPalettesCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_GetDensityColorPalettesCmd$Response]));
	ss.initClass($tab_GetDensityColorPalettesCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
			if (!ss.keyExists(this.$$cmdParams, 'colorPalettes')) {
				throw new ss.Exception('missing param DocParams.ColorPalettes');
			}
		}
	});
	ss.initClass($tab_GetDragZoneResizeCmd, $asm, {
		invoke: function GetDragZoneResizeCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'get-drag-zone-resize' }, this.cmdParams));
		},
		validateInvokeParams: function GetDragZoneResizeCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'x')) {
				throw new ss.Exception('missing param DocParams.X');
			}
			if (!ss.keyExists(this.cmdParams, 'y')) {
				throw new ss.Exception('missing param DocParams.Y');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_GetDragZoneResizeCmd$Response]));
	ss.initClass($tab_GetDragZoneResizeCmd$Response, $asm, {
		hasResizeInfo: function Response$HasResizeInfo() {
			return ss.keyExists(this.$$cmdParams, 'zoneResize');
		},
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_GetRefLineDragInfoCmd, $asm, {
		invoke: function GetRefLineDragInfoCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'get-ref-line-drag-info' }, this.cmdParams));
		},
		validateInvokeParams: function GetRefLineDragInfoCmd$ValidateInvokeParams() {
			if (ss.keyExists(this.cmdParams, 'objectId') === ss.keyExists(this.cmdParams, 'referenceLineId')) {
				throw new ss.Exception('must have one and only one of params DocParams.ObjectID and DocParams.ReferenceLineSpecificationId');
			}
			if (!ss.keyExists(this.cmdParams, 'paneId')) {
				throw new ss.Exception('missing param DocParams.PaneId');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_GetRefLineDragInfoCmd$Response]));
	ss.initClass($tab_GetRefLineDragInfoCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
			if (!ss.keyExists(this.$$cmdParams, 'analyticsObjectDragInfo')) {
				throw new ss.Exception('missing param DocParams.AnalyticsObjectDragInfo');
			}
		}
	});
	ss.initClass($tab_GetRefLineFormulaCmd, $asm, {
		invoke: function GetRefLineFormulaCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'get-ref-line-formula' }, this.cmdParams));
		},
		validateInvokeParams: function GetRefLineFormulaCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'referenceLineId')) {
				throw new ss.Exception('missing param DocParams.ReferenceLineSpecificationId');
			}
			if (!ss.keyExists(this.cmdParams, 'referenceLineLodCalcType')) {
				throw new ss.Exception('missing param DocParams.ReferenceLineLODCalcType');
			}
			if (!ss.keyExists(this.cmdParams, 'paneId')) {
				throw new ss.Exception('missing param DocParams.PaneId');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_GetRefLineFormulaCmd$Response]));
	ss.initClass($tab_GetRefLineFormulaCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
			if (!ss.keyExists(this.$$cmdParams, 'formula')) {
				throw new ss.Exception('missing param DocParams.Formula');
			}
		}
	});
	ss.initClass($tab_GetTrendLineDragInfoCmd, $asm, {
		invoke: function GetTrendLineDragInfoCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'get-trend-line-drag-info' }, this.cmdParams));
		},
		validateInvokeParams: function GetTrendLineDragInfoCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'paneId')) {
				throw new ss.Exception('missing param DocParams.PaneId');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_GetTrendLineDragInfoCmd$Response]));
	ss.initClass($tab_GetTrendLineDragInfoCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
			if (!ss.keyExists(this.$$cmdParams, 'analyticsObjectDragInfo')) {
				throw new ss.Exception('missing param DocParams.AnalyticsObjectDragInfo');
			}
		}
	});
	ss.initClass($tab_HideZoneCmd, $asm, {
		invoke: function HideZoneCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'hide-zone' }, this.cmdParams));
		},
		validateInvokeParams: function HideZoneCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_HideZoneCmd$Response]));
	ss.initClass($tab_HideZoneCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_MenuBarClientCommands, $asm, {});
	ss.initClass($tab_MoveDashboardEdgeCmd, $asm, {
		invoke: function MoveDashboardEdgeCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'move-dashboard-edge' }, this.cmdParams));
		},
		validateInvokeParams: function MoveDashboardEdgeCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'zoneEdgePp')) {
				throw new ss.Exception('missing param DocParams.ZoneEdgeRectPp');
			}
			if (!ss.keyExists(this.cmdParams, 'destPix')) {
				throw new ss.Exception('missing param DocParams.DestPix');
			}
			if (!ss.keyExists(this.cmdParams, 'dragHorz')) {
				throw new ss.Exception('missing param DocParams.DragHorz');
			}
			if (!ss.keyExists(this.cmdParams, 'zoneEdgeMoveType')) {
				throw new ss.Exception('missing param DocParams.ZoneEdgeMoveType');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_MoveDashboardEdgeCmd$Response]));
	ss.initClass($tab_MoveDashboardEdgeCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_NavigationUtil, $asm, {});
	ss.initClass($tab_NotificationForwarder, $asm, {
		dispose: function NotificationForwarder$Dispose() {
			tab.ApplicationModel.get_instance().unRegisterNotificationHandler(this.$notificationId, ss.mkdel(this, this.$handler));
		},
		setReceiver: function NotificationForwarder$SetReceiver(updatedReceiver) {
			tab.Param.verifyValue(updatedReceiver, 'updatedReceiver');
			this.$receiver = updatedReceiver;
			tab.Model.nonWorldUpdate(ss.mkdel(this, function(ctx) {
				for (var $t1 = 0; $t1 < this.$queuedNotifications.length; $t1++) {
					var notification = this.$queuedNotifications[$t1];
					this.$receiver.onNotify(notification, ctx);
				}
				this.$queuedNotifications.length = 0;
			}));
		},
		$handler: function NotificationForwarder$Handler(presmodel, context) {
			if (ss.isNullOrUndefined(this.$receiver)) {
				this.$queuedNotifications.push(presmodel);
			}
			else {
				this.$receiver.onNotify(presmodel, context);
			}
		}
	}, null, [ss.IDisposable]);
	ss.initClass($tab_PaneClientCommands, $asm, {});
	ss.initClass($tab_QuantitativeColorEditorDialogModel, $asm, {
		add_modelUpdated: function QuantitativeColorEditorDialogModel$add_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateCombine(this.$2$ModelUpdatedField, value);
		},
		remove_modelUpdated: function QuantitativeColorEditorDialogModel$remove_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateRemove(this.$2$ModelUpdatedField, value);
		},
		add_stopNotifying: function QuantitativeColorEditorDialogModel$add_StopNotifying(value) {
			this.$2$StopNotifyingField = ss.delegateCombine(this.$2$StopNotifyingField, value);
		},
		remove_stopNotifying: function QuantitativeColorEditorDialogModel$remove_StopNotifying(value) {
			this.$2$StopNotifyingField = ss.delegateRemove(this.$2$StopNotifyingField, value);
		},
		get_notificationId: function QuantitativeColorEditorDialogModel$get_NotificationId() {
			return 'doc:web-quantitative-color-dialog-event';
		},
		get_componentID: function QuantitativeColorEditorDialogModel$get_ComponentID() {
			return this.get_$dialogPresModel().componentId;
		},
		get_encodingFields: function QuantitativeColorEditorDialogModel$get_EncodingFields() {
			return ss.arrayClone(this.get_$dialogPresModel().encodingFieldVector);
		},
		get_title: function QuantitativeColorEditorDialogModel$get_Title() {
			return this.get_$dialogPresModel().fieldDisplayNames.join(' ');
		},
		get_selectedColorPalette: function QuantitativeColorEditorDialogModel$get_SelectedColorPalette() {
			return this.get_$dialogPresModel().selectedColorPalette;
		},
		get_colorPalettes: function QuantitativeColorEditorDialogModel$get_ColorPalettes() {
			return ss.arrayClone(this.get_$dialogPresModel().colorPalettes);
		},
		get_minColor: function QuantitativeColorEditorDialogModel$get_MinColor() {
			return this.get_$dialogPresModel().color1;
		},
		get_maxColor: function QuantitativeColorEditorDialogModel$get_MaxColor() {
			return this.get_$dialogPresModel().color2;
		},
		get_rampColors: function QuantitativeColorEditorDialogModel$get_RampColors() {
			return this.get_$dialogPresModel().colorMap;
		},
		get_isDiverging: function QuantitativeColorEditorDialogModel$get_IsDiverging() {
			return this.get_$dialogPresModel().isColorDiverging;
		},
		get_minValue: function QuantitativeColorEditorDialogModel$get_MinValue() {
			return this.get_$dialogPresModel().minLabel;
		},
		get_maxValue: function QuantitativeColorEditorDialogModel$get_MaxValue() {
			return this.get_$dialogPresModel().maxLabel;
		},
		get_reverse: function QuantitativeColorEditorDialogModel$get_Reverse() {
			return this.get_$dialogPresModel().isReversed;
		},
		get_stepsEnabled: function QuantitativeColorEditorDialogModel$get_StepsEnabled() {
			return this.get_$dialogPresModel().isColorStepped;
		},
		get_stepsValue: function QuantitativeColorEditorDialogModel$get_StepsValue() {
			return this.get_$dialogPresModel().steps;
		},
		get_canUseFullColorRange: function QuantitativeColorEditorDialogModel$get_CanUseFullColorRange() {
			return this.get_$dialogPresModel().canUseFullColorRange;
		},
		get_useFullColorRange: function QuantitativeColorEditorDialogModel$get_UseFullColorRange() {
			return this.get_$dialogPresModel().useFullColorRange;
		},
		get_includeTotalsOptionEnabled: function QuantitativeColorEditorDialogModel$get_IncludeTotalsOptionEnabled() {
			return this.get_$dialogPresModel().areTotalsUsed;
		},
		get_includeTotals: function QuantitativeColorEditorDialogModel$get_IncludeTotals() {
			return this.get_$dialogPresModel().totalsInclusionValue === 'include-totals';
		},
		get_startChecked: function QuantitativeColorEditorDialogModel$get_StartChecked() {
			return this.get_$dialogPresModel().useStartValue;
		},
		get_startValue: function QuantitativeColorEditorDialogModel$get_StartValue() {
			return this.get_$dialogPresModel().formattedStart;
		},
		get_centerChecked: function QuantitativeColorEditorDialogModel$get_CenterChecked() {
			return this.get_$dialogPresModel().useCenterValue;
		},
		get_centerValue: function QuantitativeColorEditorDialogModel$get_CenterValue() {
			return this.get_$dialogPresModel().formattedCenter;
		},
		get_canEnableCenter: function QuantitativeColorEditorDialogModel$get_CanEnableCenter() {
			return this.get_$dialogPresModel().canEnableCenter;
		},
		get_endChecked: function QuantitativeColorEditorDialogModel$get_EndChecked() {
			return this.get_$dialogPresModel().useEndValue;
		},
		get_endValue: function QuantitativeColorEditorDialogModel$get_EndValue() {
			return this.get_$dialogPresModel().formattedEnd;
		},
		get_canShowAdvancedSettings: function QuantitativeColorEditorDialogModel$get_CanShowAdvancedSettings() {
			return this.get_$dialogPresModel().canShowAdvancedSettings;
		},
		get_$dialogPresModel: function QuantitativeColorEditorDialogModel$get_DialogPresModel() {
			return this.pm.quantitativeColorDialog;
		},
		detachNotifications: function QuantitativeColorEditorDialogModel$DetachNotifications() {
			if (!ss.staticEquals(this.$2$StopNotifyingField, null)) {
				this.$2$StopNotifyingField();
			}
		},
		onNotify: function QuantitativeColorEditorDialogModel$OnNotify(pm, context) {
			this.swapPresModel(pm);
			this.raiseEvent(this.$2$ModelUpdatedField, context);
		}
	}, tab.Model, [tab.IHandleNotifications, tab.IDetachableNotificationHandler]);
	ss.initClass($tab_QuickSortAscendingCmd, $asm, {
		validateInvokeParams: function QuickSortAscendingCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_QuickSortAscendingCmd$Response]));
	ss.initClass($tab_QuickSortAscendingCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_QuickSortDescendingCmd, $asm, {
		validateInvokeParams: function QuickSortDescendingCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_QuickSortDescendingCmd$Response]));
	ss.initClass($tab_QuickSortDescendingCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_ReferenceBandModel, $asm, {
		add_modelUpdated: function ReferenceBandModel$add_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateCombine(this.$2$ModelUpdatedField, value);
		},
		remove_modelUpdated: function ReferenceBandModel$remove_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateRemove(this.$2$ModelUpdatedField, value);
		},
		get_refBandPresModel: function ReferenceBandModel$get_RefBandPresModel() {
			return this.pm;
		},
		get_refLineId: function ReferenceBandModel$get_RefLineId() {
			return this.get_refBandPresModel().refLineId || '';
		},
		get_pairedId: function ReferenceBandModel$get_PairedId() {
			return this.get_refBandPresModel().refLinePairedId || '';
		},
		get_visualId: function ReferenceBandModel$get_VisualId() {
			return this.get_refBandPresModel().visualIdPresModel;
		},
		get_referenceParam: function ReferenceBandModel$get_ReferenceParam() {
			return this.get_refBandPresModel().referenceParam || '';
		},
		get_instantAnalyticsEnabled: function ReferenceBandModel$get_InstantAnalyticsEnabled() {
			return this.get_refBandPresModel().enableInstantAnalytics;
		},
		get_isInstantAnalyticsAllowed: function ReferenceBandModel$get_IsInstantAnalyticsAllowed() {
			return this.get_refBandPresModel().instantAnalyticsAllowed;
		},
		get_scopeType: function ReferenceBandModel$get_ScopeType() {
			return ss.coalesce(this.get_refBandPresModel().referenceLineScopeType, 'per-pane');
		},
		get_fromLabelType: function ReferenceBandModel$get_FromLabelType() {
			return ss.coalesce(this.get_refBandPresModel().referenceLineLabelType, 'automatic');
		},
		get_fromTooltipType: function ReferenceBandModel$get_FromTooltipType() {
			return ss.coalesce(this.get_refBandPresModel().referenceLineTooltipType, 'automatic');
		},
		get_toLabelType: function ReferenceBandModel$get_ToLabelType() {
			return ss.coalesce(this.get_refBandPresModel().pairedReferenceLineLabelType, 'automatic');
		},
		get_toTooltipType: function ReferenceBandModel$get_ToTooltipType() {
			return ss.coalesce(this.get_refBandPresModel().pairedReferenceLineTooltipType, 'automatic');
		},
		get_fromCustomLabel: function ReferenceBandModel$get_FromCustomLabel() {
			return this.get_refBandPresModel().label || '';
		},
		get_fromCustomTooltip: function ReferenceBandModel$get_FromCustomTooltip() {
			return this.get_refBandPresModel().tooltipText || '';
		},
		get_toCustomLabel: function ReferenceBandModel$get_ToCustomLabel() {
			return this.get_refBandPresModel().pairedLabel || '';
		},
		get_toCustomTooltip: function ReferenceBandModel$get_ToCustomTooltip() {
			return this.get_refBandPresModel().pairedTooltipText || '';
		},
		get_validFormulaTypes: function ReferenceBandModel$get_ValidFormulaTypes() {
			return this.$2$ValidFormulaTypesField;
		},
		set_validFormulaTypes: function ReferenceBandModel$set_ValidFormulaTypes(value) {
			this.$2$ValidFormulaTypesField = value;
		},
		get_validPairedFormulaTypes: function ReferenceBandModel$get_ValidPairedFormulaTypes() {
			return this.$2$ValidPairedFormulaTypesField;
		},
		set_validPairedFormulaTypes: function ReferenceBandModel$set_ValidPairedFormulaTypes(value) {
			this.$2$ValidPairedFormulaTypesField = value;
		},
		get_validLabelTypes: function ReferenceBandModel$get_ValidLabelTypes() {
			var retValue = [];
			if (ss.isNullOrUndefined(this.get_refBandPresModel().validReferenceLineLabelTypes)) {
				return retValue;
			}
			var $t1 = this.get_refBandPresModel().validReferenceLineLabelTypes;
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var label = $t1[$t2];
				retValue.push({ key: label.referenceLineLabelType, value: label.displayText });
			}
			return retValue;
		},
		get_validTooltipTypes: function ReferenceBandModel$get_ValidTooltipTypes() {
			var retValue = [];
			if (ss.isNullOrUndefined(this.get_refBandPresModel().validReferenceLineTooltipTypes)) {
				return retValue;
			}
			var $t1 = this.get_refBandPresModel().validReferenceLineTooltipTypes;
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var tooltip = $t1[$t2];
				retValue.push({ key: tooltip.referenceLineTooltipType, value: tooltip.displayText });
			}
			return retValue;
		},
		get_validCustomLabelTags: function ReferenceBandModel$get_ValidCustomLabelTags() {
			var retValue = [];
			if (ss.isNullOrUndefined(this.get_refBandPresModel().validReferenceLineCustomLabelTags)) {
				return retValue;
			}
			var $t1 = this.get_refBandPresModel().validReferenceLineCustomLabelTags;
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var tag = $t1[$t2];
				retValue.push(tag);
			}
			return retValue;
		},
		get_fromFormulaType: function ReferenceBandModel$get_FromFormulaType() {
			return ss.coalesce(this.get_refBandPresModel().referenceLineFormulaType, 'min');
		},
		get_toFormulaType: function ReferenceBandModel$get_ToFormulaType() {
			return ss.coalesce(this.get_refBandPresModel().pairedReferenceLineFormulaType, 'max');
		},
		get_fromFieldPickerCombo: function ReferenceBandModel$get_FromFieldPickerCombo() {
			return this.$2$FromFieldPickerComboField;
		},
		set_fromFieldPickerCombo: function ReferenceBandModel$set_FromFieldPickerCombo(value) {
			this.$2$FromFieldPickerComboField = value;
		},
		get_toFieldPickerCombo: function ReferenceBandModel$get_ToFieldPickerCombo() {
			return this.$2$ToFieldPickerComboField;
		},
		set_toFieldPickerCombo: function ReferenceBandModel$set_ToFieldPickerCombo(value) {
			this.$2$ToFieldPickerComboField = value;
		},
		get_fromConstantValue: function ReferenceBandModel$get_FromConstantValue() {
			return this.get_refBandPresModel().constantValue || '';
		},
		get_toConstantValue: function ReferenceBandModel$get_ToConstantValue() {
			return this.get_refBandPresModel().pairedConstantValue || '';
		},
		get_fromFormattedConstantValue: function ReferenceBandModel$get_FromFormattedConstantValue() {
			return this.get_refBandPresModel().formattedValue || '';
		},
		get_toFormattedConstantValue: function ReferenceBandModel$get_ToFormattedConstantValue() {
			return this.get_refBandPresModel().pairedFormattedValue || '';
		},
		get_isParameterSelectedOnTo: function ReferenceBandModel$get_IsParameterSelectedOnTo() {
			return this.get_refBandPresModel().isParameterSelectedOnTo;
		},
		get_isParameterSelectedOnFrom: function ReferenceBandModel$get_IsParameterSelectedOnFrom() {
			return this.get_refBandPresModel().isParameterSelectedOnFrom;
		},
		$formulaPresModelToArray: function ReferenceBandModel$FormulaPresModelToArray(pm) {
			var emptyFormulas = [];
			if (ss.isNullOrUndefined(pm)) {
				return emptyFormulas;
			}
			return emptyFormulas.concat.apply(emptyFormulas, pm);
		},
		update: function ReferenceBandModel$Update(bandPresModel, context) {
			if (ss.isValue(bandPresModel)) {
				this.get_fromFieldPickerCombo().update(bandPresModel.fieldPickerCombo, context);
				this.get_toFieldPickerCombo().update(bandPresModel.pairedFieldPickerCombo, context);
				this.set_validFormulaTypes(this.$formulaPresModelToArray(bandPresModel.validReferenceLineFormulaTypes));
				this.set_validPairedFormulaTypes(this.$formulaPresModelToArray(bandPresModel.validReferenceLinePairedFormulaTypes));
			}
			this.simpleSwapToUpdate(bandPresModel, this.$2$ModelUpdatedField, context);
		}
	}, tab.Model);
	ss.initClass($tab_ReferenceLineEditorModel, $asm, {
		add_modelUpdated: function ReferenceLineEditorModel$add_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateCombine(this.$2$ModelUpdatedField, value);
		},
		remove_modelUpdated: function ReferenceLineEditorModel$remove_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateRemove(this.$2$ModelUpdatedField, value);
		},
		get_activePane: function ReferenceLineEditorModel$get_ActivePane() {
			return this.$2$ActivePaneField;
		},
		set_activePane: function ReferenceLineEditorModel$set_ActivePane(value) {
			this.$2$ActivePaneField = value;
		},
		get_activeModel: function ReferenceLineEditorModel$get_ActiveModel() {
			return this.$2$ActiveModelField;
		},
		set_activeModel: function ReferenceLineEditorModel$set_ActiveModel(value) {
			this.$2$ActiveModelField = value;
		},
		get_lineModel: function ReferenceLineEditorModel$get_LineModel() {
			return this.$2$LineModelField;
		},
		set_lineModel: function ReferenceLineEditorModel$set_LineModel(value) {
			this.$2$LineModelField = value;
		},
		get_bandModel: function ReferenceLineEditorModel$get_BandModel() {
			return this.$2$BandModelField;
		},
		set_bandModel: function ReferenceLineEditorModel$set_BandModel(value) {
			this.$2$BandModelField = value;
		},
		get_distributionModel: function ReferenceLineEditorModel$get_DistributionModel() {
			return this.$2$DistributionModelField;
		},
		set_distributionModel: function ReferenceLineEditorModel$set_DistributionModel(value) {
			this.$2$DistributionModelField = value;
		},
		get_editorPresModel: function ReferenceLineEditorModel$get_EditorPresModel() {
			return this.pm;
		},
		get_isEditing: function ReferenceLineEditorModel$get_IsEditing() {
			return ss.isValue(this.get_activeModel());
		},
		get_notificationId: function ReferenceLineEditorModel$get_NotificationId() {
			return 'doc:update-ref-line-dialog-event';
		},
		onNotify: function ReferenceLineEditorModel$OnNotify(pm, context) {
			this.update(pm, context);
		},
		update: function ReferenceLineEditorModel$Update(newPresModel, context) {
			this.swapAndCopyPresModel(newPresModel);
			this.set_activePane(ss.coalesce(newPresModel.reflineFormulaGroup, this.get_activePane()));
			switch (this.get_activePane()) {
				case 'none': {
					this.set_activeModel(null);
					break;
				}
				case 'line': {
					this.set_activeModel(this.get_lineModel());
					break;
				}
				case 'band': {
					this.set_activeModel(this.get_bandModel());
					break;
				}
				case 'distribution': {
					this.set_activeModel(this.get_distributionModel());
					break;
				}
				default: {
					break;
				}
			}
			this.get_lineModel().update(newPresModel.editReferenceLine, context);
			this.get_bandModel().update(newPresModel.editReferenceBand, context);
			this.get_distributionModel().update(newPresModel.editDistribution, context);
			this.raiseEvent(this.$2$ModelUpdatedField, context);
		}
	}, tab.Model, [tab.IHandleNotifications]);
	ss.initClass($tab_ReferenceLineModel, $asm, {
		add_modelUpdated: function ReferenceLineModel$add_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateCombine(this.$2$ModelUpdatedField, value);
		},
		remove_modelUpdated: function ReferenceLineModel$remove_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateRemove(this.$2$ModelUpdatedField, value);
		},
		get_refLinePresModel: function ReferenceLineModel$get_RefLinePresModel() {
			return this.pm;
		},
		get_refLineId: function ReferenceLineModel$get_RefLineId() {
			return this.get_refLinePresModel().refLineId || '';
		},
		get_visualId: function ReferenceLineModel$get_VisualId() {
			return this.get_refLinePresModel().visualIdPresModel;
		},
		get_scopeType: function ReferenceLineModel$get_ScopeType() {
			return ss.coalesce(this.get_refLinePresModel().referenceLineScopeType, 'per-pane');
		},
		get_labelType: function ReferenceLineModel$get_LabelType() {
			return ss.coalesce(this.get_refLinePresModel().referenceLineLabelType, 'automatic');
		},
		get_tooltipType: function ReferenceLineModel$get_TooltipType() {
			return ss.coalesce(this.get_refLinePresModel().referenceLineTooltipType, 'automatic');
		},
		get_customLabel: function ReferenceLineModel$get_CustomLabel() {
			return this.get_refLinePresModel().label || '';
		},
		get_customTooltip: function ReferenceLineModel$get_CustomTooltip() {
			return this.get_refLinePresModel().tooltipText || '';
		},
		get_formulaType: function ReferenceLineModel$get_FormulaType() {
			return ss.coalesce(this.get_refLinePresModel().referenceLineFormulaType, 'average');
		},
		get_validFormulaTypes: function ReferenceLineModel$get_ValidFormulaTypes() {
			return this.$2$ValidFormulaTypesField;
		},
		set_validFormulaTypes: function ReferenceLineModel$set_ValidFormulaTypes(value) {
			this.$2$ValidFormulaTypesField = value;
		},
		get_validLabelTypes: function ReferenceLineModel$get_ValidLabelTypes() {
			var retValue = [];
			if (ss.isNullOrUndefined(this.get_refLinePresModel().validReferenceLineLabelTypes)) {
				return retValue;
			}
			var $t1 = this.get_refLinePresModel().validReferenceLineLabelTypes;
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var label = $t1[$t2];
				retValue.push({ key: label.referenceLineLabelType, value: label.displayText });
			}
			return retValue;
		},
		get_validTooltipTypes: function ReferenceLineModel$get_ValidTooltipTypes() {
			var retValue = [];
			if (ss.isNullOrUndefined(this.get_refLinePresModel().validReferenceLineTooltipTypes)) {
				return retValue;
			}
			var $t1 = this.get_refLinePresModel().validReferenceLineTooltipTypes;
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var tooltip = $t1[$t2];
				retValue.push({ key: tooltip.referenceLineTooltipType, value: tooltip.displayText });
			}
			return retValue;
		},
		get_validCustomLabelTags: function ReferenceLineModel$get_ValidCustomLabelTags() {
			var retValue = [];
			if (ss.isNullOrUndefined(this.get_refLinePresModel().validReferenceLineCustomLabelTags)) {
				return retValue;
			}
			var $t1 = this.get_refLinePresModel().validReferenceLineCustomLabelTags;
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var tag = $t1[$t2];
				retValue.push(tag);
			}
			return retValue;
		},
		get_fieldPickerCombo: function ReferenceLineModel$get_FieldPickerCombo() {
			return this.$2$FieldPickerComboField;
		},
		set_fieldPickerCombo: function ReferenceLineModel$set_FieldPickerCombo(value) {
			this.$2$FieldPickerComboField = value;
		},
		get_confidenceLevelCombo: function ReferenceLineModel$get_ConfidenceLevelCombo() {
			return this.$2$ConfidenceLevelComboField;
		},
		set_confidenceLevelCombo: function ReferenceLineModel$set_ConfidenceLevelCombo(value) {
			this.$2$ConfidenceLevelComboField = value;
		},
		get_formattedConstantValue: function ReferenceLineModel$get_FormattedConstantValue() {
			return this.get_refLinePresModel().formattedValue || '';
		},
		get_isConfidenceIntervalAllowed: function ReferenceLineModel$get_IsConfidenceIntervalAllowed() {
			return this.get_refLinePresModel().confidenceIntervalAllowed;
		},
		get_isInstantAnalyticsAllowed: function ReferenceLineModel$get_IsInstantAnalyticsAllowed() {
			return this.get_refLinePresModel().instantAnalyticsAllowed;
		},
		get_confidenceIntervalSelectedState: function ReferenceLineModel$get_ConfidenceIntervalSelectedState() {
			return this.get_refLinePresModel().confidenceIntervalSelectedState;
		},
		get_confidenceIntervalStates: function ReferenceLineModel$get_ConfidenceIntervalStates() {
			var states = [];
			if (ss.isNullOrUndefined(this.get_refLinePresModel().translatedConfidenceIntervalStates)) {
				return states;
			}
			var $t1 = this.get_refLinePresModel().translatedConfidenceIntervalStates;
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var state = $t1[$t2];
				states.push({ key: state.confidenceIntervalState, value: state.displayText });
			}
			return states;
		},
		get_instantAnalyticsEnabled: function ReferenceLineModel$get_InstantAnalyticsEnabled() {
			return this.get_refLinePresModel().enableInstantAnalytics;
		},
		get_isParameterSelected: function ReferenceLineModel$get_IsParameterSelected() {
			return this.get_refLinePresModel().isParameterSelected;
		},
		$formulaPresModelToArray: function ReferenceLineModel$FormulaPresModelToArray(pm) {
			var emptyFormulas = [];
			if (ss.isNullOrUndefined(pm)) {
				return emptyFormulas;
			}
			return emptyFormulas.concat.apply(emptyFormulas, pm);
		},
		update: function ReferenceLineModel$Update(refLinePresModel, context) {
			if (ss.isValue(refLinePresModel)) {
				this.get_fieldPickerCombo().update(refLinePresModel.fieldPickerCombo, context);
				this.get_confidenceLevelCombo().update(refLinePresModel.confidenceLevelCombo, context);
				this.set_validFormulaTypes(this.$formulaPresModelToArray(refLinePresModel.validReferenceLineFormulaTypes));
			}
			this.simpleSwapToUpdate(refLinePresModel, this.$2$ModelUpdatedField, context);
		}
	}, tab.Model);
	ss.initClass($tab_ReleaseComponentCmd, $asm, {
		invoke: function ReleaseComponentCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'release-component' }, this.cmdParams));
		},
		validateInvokeParams: function ReleaseComponentCmd$ValidateInvokeParams() {
			if (ss.keyExists(this.cmdParams, 'componentId') === ss.keyExists(this.cmdParams, 'uuid')) {
				throw new ss.Exception('must have one and only one of params DocParams.ComponentID and DocParams.UUID');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_ReleaseComponentCmd$Response]));
	ss.initClass($tab_ReleaseComponentCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_ReorderSheetsCmd, $asm, {
		invoke: function ReorderSheetsCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'reorder-sheets' }, this.cmdParams));
		},
		validateInvokeParams: function ReorderSheetsCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'sheetTabPositions')) {
				throw new ss.Exception('missing param DocParams.SheetTabPositions');
			}
			if (!ss.keyExists(this.cmdParams, 'positionToInsertTabsAt')) {
				throw new ss.Exception('missing param DocParams.PositionToInsertTabsAt');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_ReorderSheetsCmd$Response]));
	ss.initClass($tab_ReorderSheetsCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_ReplaceDataSourceWithDataServerDataSourceServerCmd, $asm, {
		invoke: function ReplaceDataSourceWithDataServerDataSourceServerCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabsrv', cmd: 'replace-data-source-with-data-server-data-source-server' }, this.cmdParams));
		},
		validateInvokeParams: function ReplaceDataSourceWithDataServerDataSourceServerCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'repositoryUrl')) {
				throw new ss.Exception('missing param DocParams.RepositoryUrl');
			}
			if (!ss.keyExists(this.cmdParams, 'datasourceDatabaseName')) {
				throw new ss.Exception('missing param DocParams.DatabaseName');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_ReplaceDataSourceWithDataServerDataSourceServerCmd$Response]));
	ss.initClass($tab_ReplaceDataSourceWithDataServerDataSourceServerCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_ReplaceZoneCmd, $asm, {
		invoke: function ReplaceZoneCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'replace-zone' }, this.cmdParams));
		},
		validateInvokeParams: function ReplaceZoneCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_ReplaceZoneCmd$Response]));
	ss.initClass($tab_ReplaceZoneCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_ResetCategoricalColorMapCmd, $asm, {
		invoke: function ResetCategoricalColorMapCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'reset-categorical-color-map' }, this.cmdParams));
		},
		validateInvokeParams: function ResetCategoricalColorMapCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'componentId')) {
				throw new ss.Exception('missing param DocParams.ComponentID');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_ResetCategoricalColorMapCmd$Response]));
	ss.initClass($tab_ResetCategoricalColorMapCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_SaveAsCmd, $asm, {
		validateInvokeParams: function SaveAsCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_SaveAsCmd$Response]));
	ss.initClass($tab_SaveAsCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_SaveCmd, $asm, {
		validateInvokeParams: function SaveCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_SaveCmd$Response]));
	ss.initClass($tab_SaveCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_SaveDatasourceDialogModel, $asm, {
		add_modelUpdated: function SaveDatasourceDialogModel$add_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateCombine(this.$2$ModelUpdatedField, value);
		},
		remove_modelUpdated: function SaveDatasourceDialogModel$remove_ModelUpdated(value) {
			this.$2$ModelUpdatedField = ss.delegateRemove(this.$2$ModelUpdatedField, value);
		},
		add_stopNotifying: function SaveDatasourceDialogModel$add_StopNotifying(value) {
			this.$2$StopNotifyingField = ss.delegateCombine(this.$2$StopNotifyingField, value);
		},
		remove_stopNotifying: function SaveDatasourceDialogModel$remove_StopNotifying(value) {
			this.$2$StopNotifyingField = ss.delegateRemove(this.$2$StopNotifyingField, value);
		},
		get_notificationId: function SaveDatasourceDialogModel$get_NotificationId() {
			return 'doc:web-save-datasource-dialog-event';
		},
		get_dialogPresModel: function SaveDatasourceDialogModel$get_DialogPresModel() {
			return this.pm.saveDatasourceDialog;
		},
		get_datasourceId: function SaveDatasourceDialogModel$get_DatasourceId() {
			return this.get_dialogPresModel().datasource || '';
		},
		get_datasourceCaption: function SaveDatasourceDialogModel$get_DatasourceCaption() {
			return this.get_dialogPresModel().datasourceCaption || '';
		},
		onNotify: function SaveDatasourceDialogModel$OnNotify(pm, context) {
			this.simpleSwapToUpdate(pm, this.$2$ModelUpdatedField, context);
		},
		detachNotifications: function SaveDatasourceDialogModel$DetachNotifications() {
			if (!ss.staticEquals(this.$2$StopNotifyingField, null)) {
				this.$2$StopNotifyingField();
			}
		}
	}, tab.Model, [tab.IHandleNotifications, tab.IDetachableNotificationHandler]);
	ss.initClass($tab_SaveOrSaveAsCmd, $asm, {
		validateInvokeParams: function SaveOrSaveAsCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_SaveOrSaveAsCmd$Response]));
	ss.initClass($tab_SaveOrSaveAsCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_SelectZoneParentCmd, $asm, {
		invoke: function SelectZoneParentCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'select-zone-parent' }, this.cmdParams));
		},
		validateInvokeParams: function SelectZoneParentCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SelectZoneParentCmd$Response]));
	ss.initClass($tab_SelectZoneParentCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_SetCategoricalLegendItemColorCmd, $asm, {
		invoke: function SetCategoricalLegendItemColorCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-categorical-legend-item-color' }, this.cmdParams));
		},
		validateInvokeParams: function SetCategoricalLegendItemColorCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'componentId')) {
				throw new ss.Exception('missing param DocParams.ComponentID');
			}
			if (!ss.keyExists(this.cmdParams, 'color')) {
				throw new ss.Exception('missing param DocParams.Color');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SetCategoricalLegendItemColorCmd$Response]));
	ss.initClass($tab_SetCategoricalLegendItemColorCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_SetDensityColorEncodingCmd, $asm, {
		invoke: function SetDensityColorEncodingCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-density-color-encoding' }, this.cmdParams));
		},
		validateInvokeParams: function SetDensityColorEncodingCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'densityColorPalette')) {
				throw new ss.Exception('missing param DocParams.DensityColorPalette');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SetDensityColorEncodingCmd$Response]));
	ss.initClass($tab_SetDensityColorEncodingCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_SetDensityIntensityCmd, $asm, {
		invoke: function SetDensityIntensityCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-density-intensity' }, this.cmdParams));
		},
		validateInvokeParams: function SetDensityIntensityCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'densityIntensityPercentage')) {
				throw new ss.Exception('missing param DocParams.DensityIntensityPercentage');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SetDensityIntensityCmd$Response]));
	ss.initClass($tab_SetDensityIntensityCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_SetDensityKernelSizeCmd, $asm, {
		invoke: function SetDensityKernelSizeCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-density-kernel-size' }, this.cmdParams));
		},
		validateInvokeParams: function SetDensityKernelSizeCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'densityKernelSize')) {
				throw new ss.Exception('missing param DocParams.DensityKernelSize');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SetDensityKernelSizeCmd$Response]));
	ss.initClass($tab_SetDensityKernelSizeCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_SetSelectedLegendItemsCmd, $asm, {
		invoke: function SetSelectedLegendItemsCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-selected-legend-items' }, this.cmdParams));
		},
		validateInvokeParams: function SetSelectedLegendItemsCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'componentId')) {
				throw new ss.Exception('missing param DocParams.ComponentID');
			}
			if (!ss.keyExists(this.cmdParams, 'itemIndices')) {
				throw new ss.Exception('missing param DocParams.ItemIndices');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SetSelectedLegendItemsCmd$Response]));
	ss.initClass($tab_SetSelectedLegendItemsCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_SetZoneStyleCmd, $asm, {
		invoke: function SetZoneStyleCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'set-zone-style' }, this.cmdParams));
		},
		validateInvokeParams: function SetZoneStyleCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'styledBox')) {
				throw new ss.Exception('missing param DocParams.StyledBox');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SetZoneStyleCmd$Response]));
	ss.initClass($tab_SetZoneStyleCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_SheetThumbnailCache, $asm, {
		hasThumbnail: function SheetThumbnailCache$HasThumbnail(sheetName) {
			return this.$thumbnailCache.has(sheetName);
		},
		getThumbnail: function SheetThumbnailCache$GetThumbnail(sheetName) {
			var thumbnailResult = $.Deferred();
			if (this.hasThumbnail(sheetName)) {
				return thumbnailResult.resolve(this.$thumbnailCache.get(sheetName));
			}
			tab.DashboardClientCommands.getThumbnailImage(sheetName).done(ss.mkdel(this, function(r) {
				this.$handleNewThumbnailImage(r, sheetName, thumbnailResult);
			})).fail(function() {
				thumbnailResult.reject();
			});
			return thumbnailResult.promise();
		},
		delete$1: function SheetThumbnailCache$Delete(sheetName) {
			if (this.hasThumbnail(sheetName)) {
				this.$thumbnailCache.delete$1(sheetName);
			}
		},
		$handleNewThumbnailImage: function SheetThumbnailCache$HandleNewThumbnailImage(r, sheetName, thumbnailResult) {
			var thumbnailValue = ss.coalesce(r.$$cmdParams['image'], '');
			this.$thumbnailCache.add(sheetName, thumbnailValue);
			thumbnailResult.resolve(thumbnailValue);
		},
		clear: function SheetThumbnailCache$Clear() {
			if (ss.isValue(this.$thumbnailCache)) {
				this.$thumbnailCache.clear();
			}
		}
	});
	ss.initClass($tab_ShelfClientCommands, $asm, {});
	ss.initClass($tab_SortNestedCmd, $asm, {
		invoke: function SortNestedCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'sort-nested' }, this.cmdParams));
		},
		validateInvokeParams: function SortNestedCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'dimensionToSort')) {
				throw new ss.Exception('missing param DocParams.DimensionToSort');
			}
			if (!ss.keyExists(this.cmdParams, 'sortMeasureName')) {
				throw new ss.Exception('missing param DocParams.SortMeasureName');
			}
			if (!ss.keyExists(this.cmdParams, 'shelfType')) {
				throw new ss.Exception('missing param DocParams.ShelfType');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_SortNestedCmd$Response]));
	ss.initClass($tab_SortNestedCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcAddCmd, $asm, {
		invoke: function TableCalcAddCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-add' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcAddCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcAddCmd$Response]));
	ss.initClass($tab_TableCalcAddCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcChangeTypeCmd, $asm, {
		invoke: function TableCalcChangeTypeCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-change-type' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcChangeTypeCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'tableCalcType')) {
				throw new ss.Exception('missing param DocParams.TableCalcType');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcChangeTypeCmd$Response]));
	ss.initClass($tab_TableCalcChangeTypeCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcCloseCmd, $asm, {
		invoke: function TableCalcCloseCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-close' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcCloseCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcCloseCmd$Response]));
	ss.initClass($tab_TableCalcCloseCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcDialogActivatedCmd, $asm, {
		invoke: function TableCalcDialogActivatedCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-dialog-activated' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcDialogActivatedCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcDialogActivatedCmd$Response]));
	ss.initClass($tab_TableCalcDialogActivatedCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcEditCmd, $asm, {
		invoke: function TableCalcEditCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-edit' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcEditCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcEditCmd$Response]));
	ss.initClass($tab_TableCalcEditCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcEditDefaultsCmd, $asm, {
		invoke: function TableCalcEditDefaultsCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-edit-defaults' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcEditDefaultsCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'fn')) {
				throw new ss.Exception('missing param DocParams.FieldName');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcEditDefaultsCmd$Response]));
	ss.initClass($tab_TableCalcEditDefaultsCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcEditNestedTableCalcCmd, $asm, {
		invoke: function TableCalcEditNestedTableCalcCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-edit-nested' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcEditNestedTableCalcCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'calcNestingLevel')) {
				throw new ss.Exception('missing param DocParams.CalcNestingLevel');
			}
			if (!ss.keyExists(this.cmdParams, 'nestedCalcFn')) {
				throw new ss.Exception('missing param DocParams.NestedCalcField');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcEditNestedTableCalcCmd$Response]));
	ss.initClass($tab_TableCalcEditNestedTableCalcCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetAddressingFieldsCmd, $asm, {
		invoke: function TableCalcSetAddressingFieldsCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-addressing-fields' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetAddressingFieldsCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'fieldVector')) {
				throw new ss.Exception('missing param DocParams.FieldVector');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetAddressingFieldsCmd$Response]));
	ss.initClass($tab_TableCalcSetAddressingFieldsCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetAddressingFieldsOrderCmd, $asm, {
		invoke: function TableCalcSetAddressingFieldsOrderCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-addressing-fields-order' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetAddressingFieldsOrderCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'fieldVector')) {
				throw new ss.Exception('missing param DocParams.FieldVector');
			}
			if (!ss.keyExists(this.cmdParams, 'addressingValues')) {
				throw new ss.Exception('missing param DocParams.AddressingValues');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetAddressingFieldsOrderCmd$Response]));
	ss.initClass($tab_TableCalcSetAddressingFieldsOrderCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetAtTheLevelFieldCmd, $asm, {
		invoke: function TableCalcSetAtTheLevelFieldCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-at-the-level-field' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetAtTheLevelFieldCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'fieldNameAllowEmpty')) {
				throw new ss.Exception('missing param DocParams.FieldNameAllowEmpty');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetAtTheLevelFieldCmd$Response]));
	ss.initClass($tab_TableCalcSetAtTheLevelFieldCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetCompoundRateCmd, $asm, {
		invoke: function TableCalcSetCompoundRateCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-compound-rate' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetCompoundRateCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetCompoundRateCmd$Response]));
	ss.initClass($tab_TableCalcSetCompoundRateCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetCumulativeOptionsCmd, $asm, {
		invoke: function TableCalcSetCumulativeOptionsCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-cumulative-options' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetCumulativeOptionsCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'aggregation')) {
				throw new ss.Exception('missing param DocParams.AggType');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetCumulativeOptionsCmd$Response]));
	ss.initClass($tab_TableCalcSetCumulativeOptionsCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetNullIfIncompleteCmd, $asm, {
		invoke: function TableCalcSetNullIfIncompleteCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-null-if-incomplete' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetNullIfIncompleteCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'nullIfIncomplete')) {
				throw new ss.Exception('missing param DocParams.NullIfIncomplete');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetNullIfIncompleteCmd$Response]));
	ss.initClass($tab_TableCalcSetNullIfIncompleteCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetOrderingTypeCmd, $asm, {
		invoke: function TableCalcSetOrderingTypeCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-ordering-type' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetOrderingTypeCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'orderingType')) {
				throw new ss.Exception('missing param DocParams.OrderingType');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetOrderingTypeCmd$Response]));
	ss.initClass($tab_TableCalcSetOrderingTypeCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetPercentTotalOptionsCmd, $asm, {
		invoke: function TableCalcSetPercentTotalOptionsCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-percent-total-options' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetPercentTotalOptionsCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'includeAllPages')) {
				throw new ss.Exception('missing param DocParams.AllPages');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetPercentTotalOptionsCmd$Response]));
	ss.initClass($tab_TableCalcSetPercentTotalOptionsCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetRankSortDirectionCmd, $asm, {
		invoke: function TableCalcSetRankSortDirectionCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-rank-sort-direction' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetRankSortDirectionCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'sortOrder')) {
				throw new ss.Exception('missing param DocParams.SortDirection');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetRankSortDirectionCmd$Response]));
	ss.initClass($tab_TableCalcSetRankSortDirectionCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetRankTypeCmd, $asm, {
		invoke: function TableCalcSetRankTypeCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-rank-type' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetRankTypeCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'rankType')) {
				throw new ss.Exception('missing param DocParams.RankType');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetRankTypeCmd$Response]));
	ss.initClass($tab_TableCalcSetRankTypeCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetReferenceOptionsCmd, $asm, {
		invoke: function TableCalcSetReferenceOptionsCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-reference-options' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetReferenceOptionsCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetReferenceOptionsCmd$Response]));
	ss.initClass($tab_TableCalcSetReferenceOptionsCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetRestartEveryFieldCmd, $asm, {
		invoke: function TableCalcSetRestartEveryFieldCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-restart-every-field' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetRestartEveryFieldCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'fieldNameAllowEmpty')) {
				throw new ss.Exception('missing param DocParams.FieldNameAllowEmpty');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetRestartEveryFieldCmd$Response]));
	ss.initClass($tab_TableCalcSetRestartEveryFieldCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetSortAggregationCmd, $asm, {
		invoke: function TableCalcSetSortAggregationCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-sort-aggregation' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetSortAggregationCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'aggregation')) {
				throw new ss.Exception('missing param DocParams.AggType');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetSortAggregationCmd$Response]));
	ss.initClass($tab_TableCalcSetSortAggregationCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetSortDirectionCmd, $asm, {
		invoke: function TableCalcSetSortDirectionCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-sort-direction' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetSortDirectionCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'sortOrder')) {
				throw new ss.Exception('missing param DocParams.SortDirection');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetSortDirectionCmd$Response]));
	ss.initClass($tab_TableCalcSetSortDirectionCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetSortFieldCmd, $asm, {
		invoke: function TableCalcSetSortFieldCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-sort-field' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetSortFieldCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'fn')) {
				throw new ss.Exception('missing param DocParams.FieldName');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetSortFieldCmd$Response]));
	ss.initClass($tab_TableCalcSetSortFieldCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetSortModeCmd, $asm, {
		invoke: function TableCalcSetSortModeCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-sort-mode' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetSortModeCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'sortModeIsAuto')) {
				throw new ss.Exception('missing param DocParams.SortModeIsAuto');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetSortModeCmd$Response]));
	ss.initClass($tab_TableCalcSetSortModeCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcSetWindowOptionsCmd, $asm, {
		invoke: function TableCalcSetWindowOptionsCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-set-window-options' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcSetWindowOptionsCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'aggregation')) {
				throw new ss.Exception('missing param DocParams.AggType');
			}
			if (!ss.keyExists(this.cmdParams, 'includeCurrent')) {
				throw new ss.Exception('missing param DocParams.IncludeCurrent');
			}
			if (!ss.keyExists(this.cmdParams, 'nullIfIncomplete')) {
				throw new ss.Exception('missing param DocParams.NullIfIncomplete');
			}
			if (!ss.keyExists(this.cmdParams, 'numberOfPrevValues')) {
				throw new ss.Exception('missing param DocParams.NumberOfPrevValues');
			}
			if (!ss.keyExists(this.cmdParams, 'numberOfNextValues')) {
				throw new ss.Exception('missing param DocParams.NumberOfNextValues');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcSetWindowOptionsCmd$Response]));
	ss.initClass($tab_TableCalcSetWindowOptionsCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcToggleSecondaryCalcCmd, $asm, {
		invoke: function TableCalcToggleSecondaryCalcCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-toggle-secondary-calc' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcToggleSecondaryCalcCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'useSecondaryCalc')) {
				throw new ss.Exception('missing param DocParams.UseSecondaryCalc');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcToggleSecondaryCalcCmd$Response]));
	ss.initClass($tab_TableCalcToggleSecondaryCalcCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_TableCalcToggleShowCalcAssistanceCmd, $asm, {
		invoke: function TableCalcToggleShowCalcAssistanceCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'table-calc-toggle-show-calc-assistance' }, this.cmdParams));
		},
		validateInvokeParams: function TableCalcToggleShowCalcAssistanceCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'isCalcAssistanceEnabled')) {
				throw new ss.Exception('missing param DocParams.IsCalcAssistanceEnabled');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_TableCalcToggleShowCalcAssistanceCmd$Response]));
	ss.initClass($tab_TableCalcToggleShowCalcAssistanceCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_UpdateReferenceLineCmd, $asm, {
		invoke: function UpdateReferenceLineCmd$Invoke() {
			return this.invoke$1(tab.CommandUtils.newCommand({ ns: 'tabdoc', cmd: 'update-reference-line' }, this.cmdParams));
		},
		validateInvokeParams: function UpdateReferenceLineCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'referenceLineId')) {
				throw new ss.Exception('missing param DocParams.ReferenceLineSpecificationId');
			}
		}
	}, ss.makeGenericType(tab.BaseCmd$2, [Object, $tab_UpdateReferenceLineCmd$Response]));
	ss.initClass($tab_UpdateReferenceLineCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_WarningDialogModel, $asm, {
		add_newWarningMessage: function WarningDialogModel$add_NewWarningMessage(value) {
			this.$2$NewWarningMessageField = ss.delegateCombine(this.$2$NewWarningMessageField, value);
		},
		remove_newWarningMessage: function WarningDialogModel$remove_NewWarningMessage(value) {
			this.$2$NewWarningMessageField = ss.delegateRemove(this.$2$NewWarningMessageField, value);
		},
		get_title: function WarningDialogModel$get_Title() {
			if (!tab.MiscUtil.isNullOrEmpty$2(this.pm)) {
				return this.pm.titleString;
			}
			return '';
		},
		get_text: function WarningDialogModel$get_Text() {
			if (!tab.MiscUtil.isNullOrEmpty$2(this.pm)) {
				return this.pm.warning1;
			}
			return '';
		},
		get_warningType: function WarningDialogModel$get_WarningType() {
			return this.pm.warningType;
		},
		get_notificationId: function WarningDialogModel$get_NotificationId() {
			return 'doc:warning-message-event';
		},
		onNotify: function WarningDialogModel$OnNotify(pm, context) {
			this.swapPresModel(pm);
			this.raiseEvent(this.$2$NewWarningMessageField, context);
		}
	}, tab.Model, [tab.IHandleNotifications]);
	ss.initClass($tab_WebConnectDataCmd, $asm, {
		validateInvokeParams: function WebConnectDataCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebConnectDataCmd$Response]));
	ss.initClass($tab_WebConnectDataCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_WebEditDataSourceCmd, $asm, {
		validateInvokeParams: function WebEditDataSourceCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebEditDataSourceCmd$Response]));
	ss.initClass($tab_WebEditDataSourceCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_WebEditObjectCaptionCmd, $asm, {
		validateInvokeParams: function WebEditObjectCaptionCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'dataObjectModelObjectId')) {
				throw new ss.Exception('missing param DocParams.DataObjectModelObjectId');
			}
			if (!ss.keyExists(this.cmdParams, 'uniqueName')) {
				throw new ss.Exception('missing param DocParams.UniqueName');
			}
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebEditObjectCaptionCmd$Response]));
	ss.initClass($tab_WebEditObjectCaptionCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_WebExportCrossTabCmd, $asm, {
		validateInvokeParams: function WebExportCrossTabCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebExportCrossTabCmd$Response]));
	ss.initClass($tab_WebExportCrossTabCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_WebExportDataCmd, $asm, {
		validateInvokeParams: function WebExportDataCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebExportDataCmd$Response]));
	ss.initClass($tab_WebExportDataCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_WebExportPdfCmd, $asm, {
		validateInvokeParams: function WebExportPdfCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebExportPdfCmd$Response]));
	ss.initClass($tab_WebExportPdfCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_WebExportPngCmd, $asm, {
		validateInvokeParams: function WebExportPngCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebExportPngCmd$Response]));
	ss.initClass($tab_WebExportPngCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_WebExportPowerPointCmd, $asm, {
		validateInvokeParams: function WebExportPowerPointCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebExportPowerPointCmd$Response]));
	ss.initClass($tab_WebExportPowerPointCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_WebFormatWorkbookCmd, $asm, {
		validateInvokeParams: function WebFormatWorkbookCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebFormatWorkbookCmd$Response]));
	ss.initClass($tab_WebFormatWorkbookCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_WebRemoveShelfPillCmd, $asm, {
		validateInvokeParams: function WebRemoveShelfPillCmd$ValidateInvokeParams() {
			if (!ss.keyExists(this.cmdParams, 'shelfType')) {
				throw new ss.Exception('missing param DocParams.ShelfType');
			}
			if (!ss.keyExists(this.cmdParams, 'shelfItemId')) {
				throw new ss.Exception('missing param DocParams.ShelfItemID');
			}
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebRemoveShelfPillCmd$Response]));
	ss.initClass($tab_WebRemoveShelfPillCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_WebRenameDatasourceDialogCmd, $asm, {
		validateInvokeParams: function WebRenameDatasourceDialogCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebRenameDatasourceDialogCmd$Response]));
	ss.initClass($tab_WebRenameDatasourceDialogCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_WebShowMeCmd, $asm, {
		validateInvokeParams: function WebShowMeCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebShowMeCmd$Response]));
	ss.initClass($tab_WebShowMeCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	ss.initClass($tab_WebToolbarMoreCmd, $asm, {
		validateInvokeParams: function WebToolbarMoreCmd$ValidateInvokeParams() {
		}
	}, ss.makeGenericType(tab.WebBaseCmd$2, [Object, $tab_WebToolbarMoreCmd$Response]));
	ss.initClass($tab_WebToolbarMoreCmd$Response, $asm, {
		$validateResponseParams: function Response$ValidateResponseParams() {
		}
	});
	(function() {
		$tab_ShelfClientCommands.$jsonTrueStr = JSON.stringify(true);
	})();
	(function() {
		$tab_CalculationCommands.registerCommandInterceptors();
	})();
	(function() {
		var $t1 = tab.ApplicationModel.get_instance();
		$t1.addModel($tab_CategoricalColorEditorDialogModel).call($t1);
	})();
	(function() {
		var $t1 = tab.ApplicationModel.get_instance();
		$t1.addModel($tab_CloseDataSourceErrorDialogModel).call($t1);
	})();
	(function() {
		var $t1 = tab.ApplicationModel.get_instance();
		$t1.addModel($tab_ReferenceLineEditorModel).call($t1);
	})();
	(function() {
		$tab_SheetThumbnailCache.$maxCacheEntries = 75;
	})();
	(function() {
		var $t1 = tab.ApplicationModel.get_instance();
		$t1.addModel($tab_WarningDialogModel).call($t1);
	})();
})();
// END AuthoringDomain
