/*! BEGIN Core */

/*! BEGIN Underscore */
// Include Underscore inline here since it's so small
//     Underscore.js 1.6.0
//     http://underscorejs.org
//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
(function(){var n=this,t=n._,r={},e=Array.prototype,u=Object.prototype,i=Function.prototype,a=e.push,o=e.slice,c=e.concat,l=u.toString,f=u.hasOwnProperty,s=e.forEach,p=e.map,h=e.reduce,v=e.reduceRight,g=e.filter,d=e.every,m=e.some,y=e.indexOf,b=e.lastIndexOf,x=Array.isArray,w=Object.keys,_=i.bind,j=function(n){return n instanceof j?n:this instanceof j?void(this._wrapped=n):new j(n)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=j),exports._=j):n._=j,j.VERSION="1.6.0";var A=j.each=j.forEach=function(n,t,e){if(null==n)return n;if(s&&n.forEach===s)n.forEach(t,e);else if(n.length===+n.length){for(var u=0,i=n.length;i>u;u++)if(t.call(e,n[u],u,n)===r)return}else for(var a=j.keys(n),u=0,i=a.length;i>u;u++)if(t.call(e,n[a[u]],a[u],n)===r)return;return n};j.map=j.collect=function(n,t,r){var e=[];return null==n?e:p&&n.map===p?n.map(t,r):(A(n,function(n,u,i){e.push(t.call(r,n,u,i))}),e)};var O="Reduce of empty array with no initial value";j.reduce=j.foldl=j.inject=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),h&&n.reduce===h)return e&&(t=j.bind(t,e)),u?n.reduce(t,r):n.reduce(t);if(A(n,function(n,i,a){u?r=t.call(e,r,n,i,a):(r=n,u=!0)}),!u)throw new TypeError(O);return r},j.reduceRight=j.foldr=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),v&&n.reduceRight===v)return e&&(t=j.bind(t,e)),u?n.reduceRight(t,r):n.reduceRight(t);var i=n.length;if(i!==+i){var a=j.keys(n);i=a.length}if(A(n,function(o,c,l){c=a?a[--i]:--i,u?r=t.call(e,r,n[c],c,l):(r=n[c],u=!0)}),!u)throw new TypeError(O);return r},j.find=j.detect=function(n,t,r){var e;return k(n,function(n,u,i){return t.call(r,n,u,i)?(e=n,!0):void 0}),e},j.filter=j.select=function(n,t,r){var e=[];return null==n?e:g&&n.filter===g?n.filter(t,r):(A(n,function(n,u,i){t.call(r,n,u,i)&&e.push(n)}),e)},j.reject=function(n,t,r){return j.filter(n,function(n,e,u){return!t.call(r,n,e,u)},r)},j.every=j.all=function(n,t,e){t||(t=j.identity);var u=!0;return null==n?u:d&&n.every===d?n.every(t,e):(A(n,function(n,i,a){return(u=u&&t.call(e,n,i,a))?void 0:r}),!!u)};var k=j.some=j.any=function(n,t,e){t||(t=j.identity);var u=!1;return null==n?u:m&&n.some===m?n.some(t,e):(A(n,function(n,i,a){return u||(u=t.call(e,n,i,a))?r:void 0}),!!u)};j.contains=j.include=function(n,t){return null==n?!1:y&&n.indexOf===y?n.indexOf(t)!=-1:k(n,function(n){return n===t})},j.invoke=function(n,t){var r=o.call(arguments,2),e=j.isFunction(t);return j.map(n,function(n){return(e?t:n[t]).apply(n,r)})},j.pluck=function(n,t){return j.map(n,j.property(t))},j.where=function(n,t){return j.filter(n,j.matches(t))},j.findWhere=function(n,t){return j.find(n,j.matches(t))},j.max=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.max.apply(Math,n);var e=-1/0,u=-1/0;return A(n,function(n,i,a){var o=t?t.call(r,n,i,a):n;o>u&&(e=n,u=o)}),e},j.min=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.min.apply(Math,n);var e=1/0,u=1/0;return A(n,function(n,i,a){var o=t?t.call(r,n,i,a):n;u>o&&(e=n,u=o)}),e},j.shuffle=function(n){var t,r=0,e=[];return A(n,function(n){t=j.random(r++),e[r-1]=e[t],e[t]=n}),e},j.sample=function(n,t,r){return null==t||r?(n.length!==+n.length&&(n=j.values(n)),n[j.random(n.length-1)]):j.shuffle(n).slice(0,Math.max(0,t))};var E=function(n){return null==n?j.identity:j.isFunction(n)?n:j.property(n)};j.sortBy=function(n,t,r){return t=E(t),j.pluck(j.map(n,function(n,e,u){return{value:n,index:e,criteria:t.call(r,n,e,u)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index-t.index}),"value")};var F=function(n){return function(t,r,e){var u={};return r=E(r),A(t,function(i,a){var o=r.call(e,i,a,t);n(u,o,i)}),u}};j.groupBy=F(function(n,t,r){j.has(n,t)?n[t].push(r):n[t]=[r]}),j.indexBy=F(function(n,t,r){n[t]=r}),j.countBy=F(function(n,t){j.has(n,t)?n[t]++:n[t]=1}),j.sortedIndex=function(n,t,r,e){r=E(r);for(var u=r.call(e,t),i=0,a=n.length;a>i;){var o=i+a>>>1;r.call(e,n[o])<u?i=o+1:a=o}return i},j.toArray=function(n){return n?j.isArray(n)?o.call(n):n.length===+n.length?j.map(n,j.identity):j.values(n):[]},j.size=function(n){return null==n?0:n.length===+n.length?n.length:j.keys(n).length},j.first=j.head=j.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:0>t?[]:o.call(n,0,t)},j.initial=function(n,t,r){return o.call(n,0,n.length-(null==t||r?1:t))},j.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:o.call(n,Math.max(n.length-t,0))},j.rest=j.tail=j.drop=function(n,t,r){return o.call(n,null==t||r?1:t)},j.compact=function(n){return j.filter(n,j.identity)};var M=function(n,t,r){return t&&j.every(n,j.isArray)?c.apply(r,n):(A(n,function(n){j.isArray(n)||j.isArguments(n)?t?a.apply(r,n):M(n,t,r):r.push(n)}),r)};j.flatten=function(n,t){return M(n,t,[])},j.without=function(n){return j.difference(n,o.call(arguments,1))},j.partition=function(n,t){var r=[],e=[];return A(n,function(n){(t(n)?r:e).push(n)}),[r,e]},j.uniq=j.unique=function(n,t,r,e){j.isFunction(t)&&(e=r,r=t,t=!1);var u=r?j.map(n,r,e):n,i=[],a=[];return A(u,function(r,e){(t?e&&a[a.length-1]===r:j.contains(a,r))||(a.push(r),i.push(n[e]))}),i},j.union=function(){return j.uniq(j.flatten(arguments,!0))},j.intersection=function(n){var t=o.call(arguments,1);return j.filter(j.uniq(n),function(n){return j.every(t,function(t){return j.contains(t,n)})})},j.difference=function(n){var t=c.apply(e,o.call(arguments,1));return j.filter(n,function(n){return!j.contains(t,n)})},j.zip=function(){for(var n=j.max(j.pluck(arguments,"length").concat(0)),t=new Array(n),r=0;n>r;r++)t[r]=j.pluck(arguments,""+r);return t},j.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},j.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if("number"!=typeof r)return e=j.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}if(y&&n.indexOf===y)return n.indexOf(t,r);for(;u>e;e++)if(n[e]===t)return e;return-1},j.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=null!=r;if(b&&n.lastIndexOf===b)return e?n.lastIndexOf(t,r):n.lastIndexOf(t);for(var u=e?r:n.length;u--;)if(n[u]===t)return u;return-1},j.range=function(n,t,r){arguments.length<=1&&(t=n||0,n=0),r=arguments[2]||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=0,i=new Array(e);e>u;)i[u++]=n,n+=r;return i};var R=function(){};j.bind=function(n,t){var r,e;if(_&&n.bind===_)return _.apply(n,o.call(arguments,1));if(!j.isFunction(n))throw new TypeError;return r=o.call(arguments,2),e=function(){if(!(this instanceof e))return n.apply(t,r.concat(o.call(arguments)));R.prototype=n.prototype;var u=new R;R.prototype=null;var i=n.apply(u,r.concat(o.call(arguments)));return Object(i)===i?i:u}},j.partial=function(n){var t=o.call(arguments,1);return function(){for(var r=0,e=t.slice(),u=0,i=e.length;i>u;u++)e[u]===j&&(e[u]=arguments[r++]);for(;r<arguments.length;)e.push(arguments[r++]);return n.apply(this,e)}},j.bindAll=function(n){var t=o.call(arguments,1);if(0===t.length)throw new Error("bindAll must be passed function names");return A(t,function(t){n[t]=j.bind(n[t],n)}),n},j.memoize=function(n,t){var r={};return t||(t=j.identity),function(){var e=t.apply(this,arguments);return j.has(r,e)?r[e]:r[e]=n.apply(this,arguments)}},j.delay=function(n,t){var r=o.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},j.defer=function(n){return j.delay.apply(j,[n,1].concat(o.call(arguments,1)))},j.throttle=function(n,t,r){var e,u,i,a=null,o=0;r||(r={});var c=function(){o=r.leading===!1?0:j.now(),a=null,i=n.apply(e,u),e=u=null};return function(){var l=j.now();o||r.leading!==!1||(o=l);var f=t-(l-o);return e=this,u=arguments,0>=f?(clearTimeout(a),a=null,o=l,i=n.apply(e,u),e=u=null):a||r.trailing===!1||(a=setTimeout(c,f)),i}},j.debounce=function(n,t,r){var e,u,i,a,o,c=function(){var l=j.now()-a;t>l?e=setTimeout(c,t-l):(e=null,r||(o=n.apply(i,u),i=u=null))};return function(){i=this,u=arguments,a=j.now();var l=r&&!e;return e||(e=setTimeout(c,t)),l&&(o=n.apply(i,u),i=u=null),o}},j.once=function(n){var t,r=!1;return function(){return r?t:(r=!0,t=n.apply(this,arguments),n=null,t)}},j.wrap=function(n,t){return j.partial(t,n)},j.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length-1;r>=0;r--)t=[n[r].apply(this,t)];return t[0]}},j.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},j.keys=function(n){if(!j.isObject(n))return[];if(w)return w(n);var t=[];for(var r in n)j.has(n,r)&&t.push(r);return t},j.values=function(n){for(var t=j.keys(n),r=t.length,e=new Array(r),u=0;r>u;u++)e[u]=n[t[u]];return e},j.pairs=function(n){for(var t=j.keys(n),r=t.length,e=new Array(r),u=0;r>u;u++)e[u]=[t[u],n[t[u]]];return e},j.invert=function(n){for(var t={},r=j.keys(n),e=0,u=r.length;u>e;e++)t[n[r[e]]]=r[e];return t},j.functions=j.methods=function(n){var t=[];for(var r in n)j.isFunction(n[r])&&t.push(r);return t.sort()},j.extend=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]=t[r]}),n},j.pick=function(n){var t={},r=c.apply(e,o.call(arguments,1));return A(r,function(r){r in n&&(t[r]=n[r])}),t},j.omit=function(n){var t={},r=c.apply(e,o.call(arguments,1));for(var u in n)j.contains(r,u)||(t[u]=n[u]);return t},j.defaults=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]===void 0&&(n[r]=t[r])}),n},j.clone=function(n){return j.isObject(n)?j.isArray(n)?n.slice():j.extend({},n):n},j.tap=function(n,t){return t(n),n};var S=function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof j&&(n=n._wrapped),t instanceof j&&(t=t._wrapped);var u=l.call(n);if(u!=l.call(t))return!1;switch(u){case"[object String]":return n==String(t);case"[object Number]":return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case"[object Date]":case"[object Boolean]":return+n==+t;case"[object RegExp]":return n.source==t.source&&n.global==t.global&&n.multiline==t.multiline&&n.ignoreCase==t.ignoreCase}if("object"!=typeof n||"object"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]==n)return e[i]==t;var a=n.constructor,o=t.constructor;if(a!==o&&!(j.isFunction(a)&&a instanceof a&&j.isFunction(o)&&o instanceof o)&&"constructor"in n&&"constructor"in t)return!1;r.push(n),e.push(t);var c=0,f=!0;if("[object Array]"==u){if(c=n.length,f=c==t.length)for(;c--&&(f=S(n[c],t[c],r,e)););}else{for(var s in n)if(j.has(n,s)&&(c++,!(f=j.has(t,s)&&S(n[s],t[s],r,e))))break;if(f){for(s in t)if(j.has(t,s)&&!c--)break;f=!c}}return r.pop(),e.pop(),f};j.isEqual=function(n,t){return S(n,t,[],[])},j.isEmpty=function(n){if(null==n)return!0;if(j.isArray(n)||j.isString(n))return 0===n.length;for(var t in n)if(j.has(n,t))return!1;return!0},j.isElement=function(n){return!(!n||1!==n.nodeType)},j.isArray=x||function(n){return"[object Array]"==l.call(n)},j.isObject=function(n){return n===Object(n)},A(["Arguments","Function","String","Number","Date","RegExp"],function(n){j["is"+n]=function(t){return l.call(t)=="[object "+n+"]"}}),j.isArguments(arguments)||(j.isArguments=function(n){return!(!n||!j.has(n,"callee"))}),"function"!=typeof/./&&(j.isFunction=function(n){return"function"==typeof n}),j.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},j.isNaN=function(n){return j.isNumber(n)&&n!=+n},j.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"==l.call(n)},j.isNull=function(n){return null===n},j.isUndefined=function(n){return n===void 0},j.has=function(n,t){return f.call(n,t)},j.noConflict=function(){return n._=t,this},j.identity=function(n){return n},j.constant=function(n){return function(){return n}},j.property=function(n){return function(t){return t[n]}},j.matches=function(n){return function(t){if(t===n)return!0;for(var r in n)if(n[r]!==t[r])return!1;return!0}},j.times=function(n,t,r){for(var e=Array(Math.max(0,n)),u=0;n>u;u++)e[u]=t.call(r,u);return e},j.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))},j.now=Date.now||function(){return(new Date).getTime()};var T={escape:{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;"}};T.unescape=j.invert(T.escape);var I={escape:new RegExp("["+j.keys(T.escape).join("")+"]","g"),unescape:new RegExp("("+j.keys(T.unescape).join("|")+")","g")};j.each(["escape","unescape"],function(n){j[n]=function(t){return null==t?"":(""+t).replace(I[n],function(t){return T[n][t]})}}),j.result=function(n,t){if(null==n)return void 0;var r=n[t];return j.isFunction(r)?r.call(n):r},j.mixin=function(n){A(j.functions(n),function(t){var r=j[t]=n[t];j.prototype[t]=function(){var n=[this._wrapped];return a.apply(n,arguments),z.call(this,r.apply(j,n))}})};var N=0;j.uniqueId=function(n){var t=++N+"";return n?n+t:t},j.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var q=/(.)^/,B={"'":"'","\\":"\\","\r":"r","\n":"n","	":"t","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\t|\u2028|\u2029/g;j.template=function(n,t,r){var e;r=j.defaults({},r,j.templateSettings);var u=new RegExp([(r.escape||q).source,(r.interpolate||q).source,(r.evaluate||q).source].join("|")+"|$","g"),i=0,a="__p+='";n.replace(u,function(t,r,e,u,o){return a+=n.slice(i,o).replace(D,function(n){return"\\"+B[n]}),r&&(a+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'"),e&&(a+="'+\n((__t=("+e+"))==null?'':__t)+\n'"),u&&(a+="';\n"+u+"\n__p+='"),i=o+t.length,t}),a+="';\n",r.variable||(a="with(obj||{}){\n"+a+"}\n"),a="var __t,__p='',__j=Array.prototype.join,"+"print=function(){__p+=__j.call(arguments,'');};\n"+a+"return __p;\n";try{e=new Function(r.variable||"obj","_",a)}catch(o){throw o.source=a,o}if(t)return e(t,j);var c=function(n){return e.call(this,n,j)};return c.source="function("+(r.variable||"obj")+"){\n"+a+"}",c},j.chain=function(n){return j(n).chain()};var z=function(n){return this._chain?j(n).chain():n};j.mixin(j),A(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=e[n];j.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!=n&&"splice"!=n||0!==r.length||delete r[0],z.call(this,r)}}),A(["concat","join","slice"],function(n){var t=e[n];j.prototype[n]=function(){return z.call(this,t.apply(this._wrapped,arguments))}}),j.extend(j.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}}),"function"==typeof define&&define.amd&&define("underscore",[],function(){return j})}).call(this);
// END Underscore

(function() {
/*! BEGIN CoreSlim */


(function() {
	'dont use strict';
	var $asm = {};
	global.tab = global.tab || {};
	ss.initAssembly($asm, 'tabcoreslim');
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.BaseLogAppender
	var $tab_BaseLogAppender = function() {
		this.$filters = null;
		this.$filters = [];
	};
	$tab_BaseLogAppender.__typeName = 'tab.BaseLogAppender';
	global.tab.BaseLogAppender = $tab_BaseLogAppender;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.ConsoleLogAppender
	var $tab_ConsoleLogAppender = function() {
		this.$levelMethods = null;
		$tab_BaseLogAppender.call(this);
	};
	$tab_ConsoleLogAppender.__typeName = 'tab.ConsoleLogAppender';
	global.tab.ConsoleLogAppender = $tab_ConsoleLogAppender;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.CoreSlim.CookieHelper
	var $tab_CookieHelper = function() {
	};
	$tab_CookieHelper.__typeName = 'tab.CookieHelper';
	$tab_CookieHelper.getValueForCookie = function CookieHelper$GetValueForCookie(name) {
		var parsedCookie = $tab_DocumentHelper.getCookie().match(new RegExp('(?:^|;) ?' + name + '=([^;]*)(?:;|$)'));
		if (ss.isNullOrUndefined(parsedCookie) || parsedCookie.length < 2) {
			return null;
		}
		return parsedCookie[1];
	};
	$tab_CookieHelper.setCookie = function CookieHelper$SetCookie(name, value, path, expirationDate) {
		var cookieValue = name + '=' + value + ';path=' + path + ';';
		if (!ss.staticEquals(expirationDate, null)) {
			cookieValue += 'expires=' + expirationDate.toUTCString();
		}
		$tab_DocumentHelper.setCookie(cookieValue);
	};
	$tab_CookieHelper.deleteCookie = function CookieHelper$DeleteCookie(name, path) {
		var epochTime = new Date(0);
		$tab_DocumentHelper.setCookie(name + '=;path=' + path + ';expires=' + epochTime.toUTCString());
	};
	global.tab.CookieHelper = $tab_CookieHelper;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.CoreSlim.DocumentHelper
	var $tab_DocumentHelper = function() {
	};
	$tab_DocumentHelper.__typeName = 'tab.DocumentHelper';
	$tab_DocumentHelper.get_documentClientWidth = function DocumentHelper$get_DocumentClientWidth() {
		return document.documentElement.clientWidth;
	};
	$tab_DocumentHelper.get_documentClientHeight = function DocumentHelper$get_DocumentClientHeight() {
		return document.documentElement.clientHeight;
	};
	$tab_DocumentHelper.getCookie = function DocumentHelper$GetCookie() {
		return document.cookie;
	};
	$tab_DocumentHelper.setCookie = function DocumentHelper$SetCookie(value) {
		document.cookie = value;
	};
	global.tab.DocumentHelper = $tab_DocumentHelper;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.CoreSlim.EscapingUtil
	var $tab_EscapingUtil = function() {
	};
	$tab_EscapingUtil.__typeName = 'tab.EscapingUtil';
	$tab_EscapingUtil.escapeHtml = function EscapingUtil$EscapeHtml(html) {
		var escaped = ss.coalesce(html, '');
		escaped = escaped.replace(new RegExp('&', 'g'), '&amp;');
		escaped = escaped.replace(new RegExp('<', 'g'), '&lt;');
		escaped = escaped.replace(new RegExp('>', 'g'), '&gt;');
		escaped = escaped.replace(new RegExp('"', 'g'), '&quot;');
		escaped = escaped.replace(new RegExp("'", 'g'), '&#39;');
		escaped = escaped.replace(new RegExp('/', 'g'), '&#47;');
		if ((new RegExp('^ +$')).test(escaped)) {
			escaped = escaped.replace(new RegExp(' ', 'g'), '&nbsp;');
		}
		return escaped;
	};
	global.tab.EscapingUtil = $tab_EscapingUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.LazyUtil
	var $tab_LazyUtil = function() {
	};
	$tab_LazyUtil.__typeName = 'tab.LazyUtil';
	$tab_LazyUtil.lazyInitStaticField = function LazyUtil$LazyInitStaticField(t, fieldName, initializer) {
		var value = t[fieldName];
		if (ss.isNullOrUndefined(value)) {
			value = initializer();
			t[fieldName] = value;
		}
		return value;
	};
	global.tab.LazyUtil = $tab_LazyUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.Log
	var $tab_Log = function() {
	};
	$tab_Log.__typeName = 'tab.Log';
	$tab_Log.get = function Log$Get(o) {
		return $tab_Logger.lazyGetLogger(ss.getInstanceType(o));
	};
	$tab_Log.get$1 = function Log$Get(t) {
		return $tab_Logger.lazyGetLogger(t);
	};
	global.tab.Log = $tab_Log;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.LogAppenderInstance
	var $tab_LogAppenderInstance = function(appenderFactoryFunc) {
		this.$appenderFactoryFunc = null;
		this.$1$InstanceField = null;
		this.$appenderFactoryFunc = appenderFactoryFunc;
	};
	$tab_LogAppenderInstance.__typeName = 'tab.LogAppenderInstance';
	global.tab.LogAppenderInstance = $tab_LogAppenderInstance;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.Logger
	var $tab_Logger = function(name) {
		this.$name = null;
		this.$name = name;
	};
	$tab_Logger.__typeName = 'tab.Logger';
	$tab_Logger.get_globalLog = function Logger$get_GlobalLog() {
		return $tab_Logger.global;
	};
	$tab_Logger.get_$appenders = function Logger$get_Appenders() {
		return $tab_LazyUtil.lazyInitStaticField($tab_Logger, 'appenders', function() {
			return [];
		});
	};
	$tab_Logger.get_$filters = function Logger$get_Filters() {
		return $tab_LazyUtil.lazyInitStaticField($tab_Logger, 'filters', function() {
			return [];
		});
	};
	$tab_Logger.get_$nullLog = function Logger$get_NullLog() {
		return ss.cast($tab_LazyUtil.lazyInitStaticField($tab_Logger, 'nullLog', function() {
			return new $tab_Logger('');
		}), $tab_Logger);
	};
	$tab_Logger.clearFilters = function Logger$ClearFilters() {
		var $t1 = $tab_Logger.get_$appenders();
		for (var $t2 = 0; $t2 < $t1.length; $t2++) {
			var logAppender = $t1[$t2];
			logAppender.clearFilters();
		}
		$tab_Logger.get_$filters().splice(0, $tab_Logger.get_$filters().length);
	};
	$tab_Logger.filterByLogger = function Logger$FilterByLogger(validLogger, minLogLevel) {
		minLogLevel = minLogLevel || 0;
		$tab_Logger.$addFilter(function(l, ll) {
			return ss.referenceEquals(l, validLogger) && ll >= minLogLevel;
		});
	};
	$tab_Logger.filterByType = function Logger$FilterByType(t, minLogLevel) {
		minLogLevel = minLogLevel || 0;
		$tab_Logger.$addFilter(function(l, ll) {
			return ll >= minLogLevel && ss.referenceEquals(l.get_name(), ss.getTypeName(t));
		});
	};
	$tab_Logger.filterByName = function Logger$FilterByName(namePattern, minLogLevel) {
		minLogLevel = minLogLevel || 0;
		var regex = new RegExp(namePattern, 'i');
		$tab_Logger.$addFilter(function(l, ll) {
			return ll >= minLogLevel && ss.isValue(l.get_name().match(regex));
		});
	};
	$tab_Logger.clearAppenders = function Logger$ClearAppenders() {
		$tab_Logger.get_$appenders().splice(0, $tab_Logger.get_$filters().length);
	};
	$tab_Logger.hasAppender = function Logger$HasAppender(appender) {
		return $tab_Logger.get_$appenders().indexOf(appender) > -1;
	};
	$tab_Logger.addAppender = function Logger$AddAppender(appender) {
		var $t1 = $tab_Logger.get_$filters();
		for (var $t2 = 0; $t2 < $t1.length; $t2++) {
			var filter = $t1[$t2];
			appender.addFilter(filter);
		}
		$tab_Logger.get_$appenders().push(appender);
	};
	$tab_Logger.removeAppender = function Logger$RemoveAppender(appender) {
		var indexOfAppender = $tab_Logger.get_$appenders().indexOf(appender);
		if (indexOfAppender > -1) {
			$tab_Logger.get_$appenders().splice(indexOfAppender, 1);
		}
	};
	$tab_Logger.lazyGetLogger = function Logger$LazyGetLogger(t) {
		return $tab_LazyUtil.lazyInitStaticField(t, '_logger', function() {
			return $tab_Logger.getLogger(t, null);
		});
	};
	$tab_Logger.getLogger = function Logger$GetLogger(t, ll) {
		var l = $tab_Logger.getLoggerWithName(ss.getTypeName(t));
		if (ss.isValue(ll)) {
			$tab_Logger.filterByLogger(l, ss.unbox(ll));
		}
		return l;
	};
	$tab_Logger.getLoggerWithName = function Logger$GetLoggerWithName(name) {
		return new $tab_Logger(name);
	};
	$tab_Logger.$setupUrlFilters = function Logger$SetupUrlFilters() {
		var queryParams = $tab_UriExtensions.getUriQueryParameters(window.self.location.search);
		if (!ss.keyExists(queryParams, $tab_Logger.$logQueryParam)) {
			return;
		}
		$tab_Logger.clearFilters();
		var logParams = queryParams[$tab_Logger.$logQueryParam];
		if (logParams.length === 0) {
			$tab_Logger.filterByName('.*', 0);
		}
		for (var $t1 = 0; $t1 < logParams.length; $t1++) {
			var logParam = logParams[$t1];
			var logVals = logParam.split(String.fromCharCode(58));
			var level = 1;
			if (logVals.length > 0 && ss.isValue(logVals[1])) {
				var key = logVals[1].toLowerCase();
				var index = $tab_Logger.loggerLevelNames.indexOf(key);
				if (index >= 0) {
					level = index;
				}
			}
			$tab_Logger.filterByName(logVals[0], level);
		}
	};
	$tab_Logger.$addFilter = function Logger$AddFilter(filterFunc) {
		$tab_Logger.get_$filters().push(filterFunc);
		var $t1 = $tab_Logger.get_$appenders();
		for (var $t2 = 0; $t2 < $t1.length; $t2++) {
			var logAppender = $t1[$t2];
			logAppender.addFilter(filterFunc);
		}
	};
	global.tab.Logger = $tab_Logger;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.LoggerLevel
	var $tab_LoggerLevel = function() {
	};
	$tab_LoggerLevel.__typeName = 'tab.LoggerLevel';
	global.tab.LoggerLevel = $tab_LoggerLevel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.ScriptEx
	var $tab_ScriptEx = function() {
	};
	$tab_ScriptEx.__typeName = 'tab.ScriptEx';
	global.tab.ScriptEx = $tab_ScriptEx;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.UriExtensions
	var $tab_UriExtensions = function() {
	};
	$tab_UriExtensions.__typeName = 'tab.UriExtensions';
	$tab_UriExtensions.getUriQueryParameters = function UriExtensions$GetUriQueryParameters(uri) {
		var parameters = {};
		if (ss.isNullOrUndefined(uri)) {
			return parameters;
		}
		var indexOfQuery = uri.indexOf('?');
		if (indexOfQuery < 0) {
			return parameters;
		}
		var query = uri.substr(indexOfQuery + 1);
		var indexOfHash = query.indexOf('#');
		if (indexOfHash >= 0) {
			query = query.substr(0, indexOfHash);
		}
		if (ss.isNullOrEmptyString(query)) {
			return parameters;
		}
		var paramPairs = query.split('&');
		for (var $t1 = 0; $t1 < paramPairs.length; $t1++) {
			var pair = paramPairs[$t1];
			var keyValue = pair.split('=');
			var key = decodeURIComponent(keyValue[0]);
			var values;
			if (ss.keyExists(parameters, key)) {
				values = parameters[key];
			}
			else {
				values = [];
				parameters[key] = values;
			}
			if (keyValue.length > 1) {
				values.push(decodeURIComponent(keyValue[1]));
			}
		}
		return parameters;
	};
	global.tab.UriExtensions = $tab_UriExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.CoreSlim.WindowHelper
	var $tab_WindowHelper = function(window) {
		this.$window = null;
		this.$window = window;
	};
	$tab_WindowHelper.__typeName = 'tab.WindowHelper';
	$tab_WindowHelper.get_windowSelf = function WindowHelper$get_WindowSelf() {
		return window.self;
	};
	$tab_WindowHelper.get_windowParent = function WindowHelper$get_WindowParent() {
		return window.parent;
	};
	$tab_WindowHelper.get_selection = function WindowHelper$get_Selection() {
		if (typeof(window['getSelection']) === 'function') {
			return window.getSelection();
		}
		if (typeof(document['getSelection']) === 'function') {
			return document.getSelection();
		}
		return null;
	};
	$tab_WindowHelper.close = function WindowHelper$Close(window) {
		window.close();
	};
	$tab_WindowHelper.getOpener = function WindowHelper$GetOpener(window) {
		return window.opener;
	};
	$tab_WindowHelper.getLocation = function WindowHelper$GetLocation(window) {
		return window.location;
	};
	$tab_WindowHelper.getPathAndSearch = function WindowHelper$GetPathAndSearch(window) {
		return window.location.pathname + window.location.search;
	};
	$tab_WindowHelper.setLocationHref = function WindowHelper$SetLocationHref(window, href) {
		window.location.href = href;
	};
	$tab_WindowHelper.locationReplace = function WindowHelper$LocationReplace(window, url) {
		window.location.replace(url);
	};
	$tab_WindowHelper.open = function WindowHelper$Open(href, target, options) {
		return window.open(href, target, options);
	};
	$tab_WindowHelper.reload = function WindowHelper$Reload(w, forceGet) {
		w.location.reload(forceGet);
	};
	$tab_WindowHelper.requestAnimationFrame = function WindowHelper$RequestAnimationFrame(action) {
		return $tab_WindowHelper.$requestAnimationFrameFunc(action);
	};
	$tab_WindowHelper.cancelAnimationFrame = function WindowHelper$CancelAnimationFrame(animationId) {
		if (ss.isValue(animationId)) {
			$tab_WindowHelper.$cancelAnimationFrameFunc(animationId);
		}
	};
	$tab_WindowHelper.setTimeout = function WindowHelper$SetTimeout(callback, milliseconds) {
		return window.setTimeout(callback, milliseconds);
	};
	$tab_WindowHelper.setInterval = function WindowHelper$SetInterval(callback, milliseconds) {
		return window.setInterval(callback, milliseconds);
	};
	$tab_WindowHelper.addListener = function WindowHelper$AddListener(windowParam, eventName, messageListener) {
		if ('addEventListener' in windowParam) {
			windowParam.addEventListener(eventName, messageListener, false);
		}
		else {
			windowParam.attachEvent('on' + eventName, messageListener);
		}
	};
	$tab_WindowHelper.removeListener = function WindowHelper$RemoveListener(window, eventName, messageListener) {
		if ('removeEventListener' in window) {
			window.removeEventListener(eventName, messageListener, false);
		}
		else {
			window.detachEvent('on' + eventName, messageListener);
		}
	};
	$tab_WindowHelper.$setDefaultRequestAnimationFrameImpl = function WindowHelper$SetDefaultRequestAnimationFrameImpl() {
		var lastTime = 0;
		$tab_WindowHelper.$requestAnimationFrameFunc = function(callback) {
			var curTime = (new Date()).getTime();
			var timeToCall = Math.max(0, 16 - (curTime - lastTime));
			lastTime = curTime + timeToCall;
			var id = window.setTimeout(callback, timeToCall);
			return id;
		};
	};
	$tab_WindowHelper.clearSelection = function WindowHelper$ClearSelection() {
		var selection = $tab_WindowHelper.get_selection();
		if (ss.isValue(selection)) {
			if (typeof(selection['removeAllRanges']) === 'function') {
				selection.removeAllRanges();
			}
			else if (typeof(selection['empty']) === 'function') {
				selection['empty']();
			}
		}
	};
	global.tab.WindowHelper = $tab_WindowHelper;
	ss.initClass($tab_BaseLogAppender, $asm, {
		clearFilters: function BaseLogAppender$ClearFilters() {
			ss.clear(this.$filters);
		},
		addFilter: function BaseLogAppender$AddFilter(f) {
			this.$filters.push(f);
		},
		removeFilter: function BaseLogAppender$RemoveFilter(f) {
			ss.remove(this.$filters, f);
		},
		log: function BaseLogAppender$Log(source, level, message, args) {
			for (var $t1 = 0; $t1 < this.$filters.length; $t1++) {
				var filter = this.$filters[$t1];
				if (!filter(source, level)) {
					continue;
				}
				this.logInternal(source, level, message, args);
				return;
			}
		},
		logInternal: null,
		formatMessage: function BaseLogAppender$FormatMessage(message, args) {
			if (ss.isNullOrUndefined(args) || args.length === 0) {
				return message;
			}
			var sb = new ss.StringBuilder();
			var argNum = 0;
			var prevPercent = false;
			for (var i = 0; i < message.length; i++) {
				var currChar = message.charCodeAt(i);
				if (currChar === 37) {
					if (prevPercent) {
						sb.append('%');
						prevPercent = false;
					}
					else {
						prevPercent = true;
					}
				}
				else {
					if (prevPercent) {
						switch (currChar) {
							case 98:
							case 115:
							case 100:
							case 110:
							case 111: {
								sb.append(((args.length > argNum) ? args[argNum] : ''));
								argNum++;
								break;
							}
						}
					}
					else {
						sb.appendChar(currChar);
					}
					prevPercent = false;
				}
			}
			return sb.toString();
		}
	});
	ss.initClass($tab_ConsoleLogAppender, $asm, {
		logInternal: function ConsoleLogAppender$LogInternal(source, level, message, args) {
			if (!!(typeof(window.console) !== 'object')) {
				return;
			}
			message = source.get_name() + ': ' + message;
			var consoleArgs = [];
			var $t1 = consoleArgs.concat(message);
			consoleArgs = $t1.concat.apply($t1, args);
			try {
				Function.prototype.apply.call(this.$getConsoleMethod(level), window.console, consoleArgs);
			}
			catch ($t2) {
			}
		},
		$getConsoleMethod: function ConsoleLogAppender$GetConsoleMethod(level) {
			var console = window.self['console'];
			if (ss.isNullOrUndefined(this.$levelMethods)) {
				this.$levelMethods = {};
				this.$levelMethods[(1).toString()] = console.log;
				this.$levelMethods[(4).toString()] = console.error;
				this.$levelMethods[(2).toString()] = console.info;
				this.$levelMethods[(3).toString()] = console.warn;
			}
			var $t1 = this.$levelMethods[level.toString()];
			if (ss.isNullOrUndefined($t1)) {
				$t1 = console.log;
			}
			return $t1;
		}
	}, $tab_BaseLogAppender);
	ss.initClass($tab_CookieHelper, $asm, {});
	ss.initClass($tab_DocumentHelper, $asm, {});
	ss.initClass($tab_EscapingUtil, $asm, {});
	ss.initClass($tab_LazyUtil, $asm, {});
	ss.initClass($tab_Log, $asm, {});
	ss.initClass($tab_LogAppenderInstance, $asm, {
		get_instance: function LogAppenderInstance$get_Instance() {
			return this.$1$InstanceField;
		},
		set_instance: function LogAppenderInstance$set_Instance(value) {
			this.$1$InstanceField = value;
		},
		enableLogging: function LogAppenderInstance$EnableLogging(filter) {
			if (ss.isNullOrUndefined(this.get_instance())) {
				this.set_instance(this.$appenderFactoryFunc());
				$tab_Logger.addAppender(this.get_instance());
			}
			else if (!$tab_Logger.hasAppender(this.get_instance())) {
				$tab_Logger.addAppender(this.get_instance());
			}
			this.get_instance().addFilter(ss.coalesce(filter, function(_, __) {
				return true;
			}));
		},
		disableLogging: function LogAppenderInstance$DisableLogging() {
			if (ss.isNullOrUndefined(this.get_instance())) {
				return;
			}
			$tab_Logger.removeAppender(this.get_instance());
			this.set_instance(null);
		}
	});
	ss.initClass($tab_Logger, $asm, {
		get_name: function Logger$get_Name() {
			return this.$name;
		},
		debug: function Logger$Debug(message, args) {
			this.$logInternal(1, message, args);
		},
		info: function Logger$Info(message, args) {
			this.$logInternal(2, message, args);
		},
		warn: function Logger$Warn(message, args) {
			this.$logInternal(3, message, args);
		},
		error: function Logger$Error(message, args) {
			this.$logInternal(4, message, args);
		},
		log: function Logger$Log(level, message, args) {
			this.$logInternal(level, message, args);
		},
		$logInternal: function Logger$LogInternal(level, message, args) {
			try {
				var $t1 = $tab_Logger.get_$appenders();
				for (var $t2 = 0; $t2 < $t1.length; $t2++) {
					var logAppender = $t1[$t2];
					logAppender.log(this, level, message, args);
				}
			}
			catch ($t3) {
			}
		}
	});
	ss.initEnum($tab_LoggerLevel, $asm, { all: 0, debug: 1, info: 2, warn: 3, error: 4, off: 5 });
	ss.initClass($tab_ScriptEx, $asm, {});
	ss.initClass($tab_UriExtensions, $asm, {});
	ss.initClass($tab_WindowHelper, $asm, {
		get_pageXOffset: function WindowHelper$get_PageXOffset() {
			return $tab_WindowHelper.$pageXOffsetFunc(this.$window);
		},
		get_pageYOffset: function WindowHelper$get_PageYOffset() {
			return $tab_WindowHelper.$pageYOffsetFunc(this.$window);
		},
		get_clientWidth: function WindowHelper$get_ClientWidth() {
			return $tab_WindowHelper.$clientWidthFunc(this.$window);
		},
		get_clientHeight: function WindowHelper$get_ClientHeight() {
			return $tab_WindowHelper.$clientHeightFunc(this.$window);
		},
		get_innerWidth: function WindowHelper$get_InnerWidth() {
			return $tab_WindowHelper.$innerWidthFunc(this.$window);
		},
		get_outerWidth: function WindowHelper$get_OuterWidth() {
			return $tab_WindowHelper.$outerWidthFunc(this.$window);
		},
		get_innerHeight: function WindowHelper$get_InnerHeight() {
			return $tab_WindowHelper.$innerHeightFunc(this.$window);
		},
		get_outerHeight: function WindowHelper$get_OuterHeight() {
			return $tab_WindowHelper.$outerHeightFunc(this.$window);
		},
		get_screenLeft: function WindowHelper$get_ScreenLeft() {
			return $tab_WindowHelper.$screenLeftFunc(this.$window);
		},
		get_screenTop: function WindowHelper$get_ScreenTop() {
			return $tab_WindowHelper.$screenTopFunc(this.$window);
		},
		isQuirksMode: function WindowHelper$IsQuirksMode() {
			return document.compatMode === 'BackCompat';
		}
	});
	(function() {
		$tab_Logger.global = $tab_Logger.getLoggerWithName('global');
		$tab_Logger.loggerLevelNames = [];
		$tab_Logger.$logQueryParam = ':log';
		$tab_Logger.$setupUrlFilters();
		$tab_Logger.loggerLevelNames[0] = 'all';
		$tab_Logger.loggerLevelNames[1] = 'debug';
		$tab_Logger.loggerLevelNames[2] = 'info';
		$tab_Logger.loggerLevelNames[3] = 'warn';
		$tab_Logger.loggerLevelNames[4] = 'error';
		$tab_Logger.loggerLevelNames[5] = 'off';
	})();
	(function() {
		$tab_ConsoleLogAppender.globalAppender = new $tab_LogAppenderInstance(function() {
			return new $tab_ConsoleLogAppender();
		});
		$tab_ConsoleLogAppender.globalAppender.enableLogging(function(_, loggerLevel) {
			return loggerLevel >= 2;
		});
	})();
	(function() {
		$tab_WindowHelper.blank = '_blank';
		$tab_WindowHelper.$innerWidthFunc = null;
		$tab_WindowHelper.$innerHeightFunc = null;
		$tab_WindowHelper.$clientWidthFunc = null;
		$tab_WindowHelper.$clientHeightFunc = null;
		$tab_WindowHelper.$pageXOffsetFunc = null;
		$tab_WindowHelper.$pageYOffsetFunc = null;
		$tab_WindowHelper.$screenLeftFunc = null;
		$tab_WindowHelper.$screenTopFunc = null;
		$tab_WindowHelper.$outerWidthFunc = null;
		$tab_WindowHelper.$outerHeightFunc = null;
		$tab_WindowHelper.$requestAnimationFrameFunc = null;
		$tab_WindowHelper.$cancelAnimationFrameFunc = null;
		if ('innerWidth' in window) {
			$tab_WindowHelper.$innerWidthFunc = function(w) {
				return w.innerWidth;
			};
		}
		else {
			$tab_WindowHelper.$innerWidthFunc = function(w1) {
				return w1.document.documentElement.offsetWidth;
			};
		}
		if ('outerWidth' in window) {
			$tab_WindowHelper.$outerWidthFunc = function(w2) {
				return w2.outerWidth;
			};
		}
		else {
			$tab_WindowHelper.$outerWidthFunc = $tab_WindowHelper.$innerWidthFunc;
		}
		if ('innerHeight' in window) {
			$tab_WindowHelper.$innerHeightFunc = function(w3) {
				return w3.innerHeight;
			};
		}
		else {
			$tab_WindowHelper.$innerHeightFunc = function(w4) {
				return w4.document.documentElement.offsetHeight;
			};
		}
		if ('outerHeight' in window) {
			$tab_WindowHelper.$outerHeightFunc = function(w5) {
				return w5.outerHeight;
			};
		}
		else {
			$tab_WindowHelper.$outerHeightFunc = $tab_WindowHelper.$innerHeightFunc;
		}
		if ('clientWidth' in window) {
			$tab_WindowHelper.$clientWidthFunc = function(w6) {
				return w6['clientWidth'];
			};
		}
		else {
			$tab_WindowHelper.$clientWidthFunc = function(w7) {
				return w7.document.documentElement.clientWidth;
			};
		}
		if ('clientHeight' in window) {
			$tab_WindowHelper.$clientHeightFunc = function(w8) {
				return w8['clientHeight'];
			};
		}
		else {
			$tab_WindowHelper.$clientHeightFunc = function(w9) {
				return w9.document.documentElement.clientHeight;
			};
		}
		if (ss.isValue(window.self.pageXOffset)) {
			$tab_WindowHelper.$pageXOffsetFunc = function(w10) {
				return w10.pageXOffset;
			};
		}
		else {
			$tab_WindowHelper.$pageXOffsetFunc = function(w11) {
				return w11.document.documentElement.scrollLeft;
			};
		}
		if (ss.isValue(window.self.pageYOffset)) {
			$tab_WindowHelper.$pageYOffsetFunc = function(w12) {
				return w12.pageYOffset;
			};
		}
		else {
			$tab_WindowHelper.$pageYOffsetFunc = function(w13) {
				return w13.document.documentElement.scrollTop;
			};
		}
		if ('screenLeft' in window) {
			$tab_WindowHelper.$screenLeftFunc = function(w14) {
				return ss.unbox(ss.cast(w14.screenLeft, ss.Int32));
			};
		}
		else {
			$tab_WindowHelper.$screenLeftFunc = function(w15) {
				return w15.screenX;
			};
		}
		if ('screenTop' in window) {
			$tab_WindowHelper.$screenTopFunc = function(w16) {
				return ss.unbox(ss.cast(w16.screenTop, ss.Int32));
			};
		}
		else {
			$tab_WindowHelper.$screenTopFunc = function(w17) {
				return w17.screenY;
			};
		}
		{
			var DefaultRequestName = 'requestAnimationFrame';
			var DefaultCancelName = 'cancelAnimationFrame';
			var vendors = ['ms', 'moz', 'webkit', 'o'];
			var requestFuncName = null;
			var cancelFuncName = null;
			if (DefaultRequestName in window) {
				requestFuncName = DefaultRequestName;
			}
			if (DefaultCancelName in window) {
				cancelFuncName = DefaultCancelName;
			}
			for (var ii = 0; ii < vendors.length && (ss.isNullOrUndefined(requestFuncName) || ss.isNullOrUndefined(cancelFuncName)); ++ii) {
				var vendor = vendors[ii];
				var funcName = vendor + 'RequestAnimationFrame';
				if (ss.isNullOrUndefined(requestFuncName) && funcName in window) {
					requestFuncName = funcName;
				}
				if (ss.isNullOrUndefined(cancelFuncName)) {
					funcName = vendor + 'CancelAnimationFrame';
					if (funcName in window) {
						cancelFuncName = funcName;
					}
					funcName = vendor + 'CancelRequestAnimationFrame';
					if (funcName in window) {
						cancelFuncName = funcName;
					}
				}
			}
			if (ss.isValue(requestFuncName)) {
				$tab_WindowHelper.$requestAnimationFrameFunc = function(callback) {
					return window[requestFuncName](callback);
				};
			}
			else {
				$tab_WindowHelper.$setDefaultRequestAnimationFrameImpl();
			}
			if (ss.isValue(cancelFuncName)) {
				$tab_WindowHelper.$cancelAnimationFrameFunc = function(animationId) {
					window[cancelFuncName](animationId);
				};
			}
			else {
				$tab_WindowHelper.$cancelAnimationFrameFunc = window.clearTimeout;
			}
		}
	})();
})();

// END CoreSlim

(function() {
	'dont use strict';
	var $asm = {};
	global.tab = global.tab || {};
	global.tableau = global.tableau || {};
	global.tableau.types = global.tableau.types || {};
	global.tableau.util = global.tableau.util || {};
	ss.initAssembly($asm, 'vqlcore');
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.ColumnClass
	var $ColumnClass = function() {
	};
	$ColumnClass.__typeName = 'ColumnClass';
	global.ColumnClass = $ColumnClass;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.DrillState
	var $DrillState = function() {
	};
	$DrillState.__typeName = 'DrillState';
	global.DrillState = $DrillState;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.jQueryExtensions
	$.fn.focusDelayed = function jQueryExtensions$FocusDelayed(delayMilliseconds, action) {
		this.each(function(index, elem) {
			window.setTimeout(function() {
				$(elem).focus();
				if (ss.isValue(action)) {
					action.call(elem);
				}
			}, delayMilliseconds);
		});
	};
	$.fn.getTouchEvent = function jQueryExtensions$GetTouchEvent(jqueryEvent) {
		return jqueryEvent['originalEvent'];
	};
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.jQuerySelectorExtensions
	$.expr.pseudos.focusable = function jQuerySelectorExtensions$Focusable(element) {
		return $tab_$jQuerySelectorExtensionsImpl.$focusable(element, !isNaN(parseInt($(element).attr('tabindex'), 10)));
	};
	$.expr.pseudos.tabbable = function jQuerySelectorExtensions$Tabbable(element) {
		var tabIndex = parseInt($(element).attr('tabindex'), 10);
		var isTabIndexNaN = isNaN(tabIndex);
		return (isTabIndexNaN || tabIndex >= 0) && $tab_$jQuerySelectorExtensionsImpl.$focusable(element, !isTabIndexNaN);
	};
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.BrowserSupportSetup
	var $tab_$BrowserSupportSetup = function() {
	};
	$tab_$BrowserSupportSetup.__typeName = 'tab.$BrowserSupportSetup';
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.DateUtil.ISO8601DateParts
	var $tab_$DateUtil$ISO8601DateParts = function() {
		this.$isoYear = 0;
		this.$isoWeek = 0;
		this.$isoWeekday = 0;
	};
	$tab_$DateUtil$ISO8601DateParts.__typeName = 'tab.$DateUtil$ISO8601DateParts';
	$tab_$DateUtil$ISO8601DateParts.$ctor1 = function(isoYear, isoWeek, isoWeekday) {
		this.$isoYear = 0;
		this.$isoWeek = 0;
		this.$isoWeekday = 0;
		this.$isoYear = isoYear;
		this.$isoWeek = isoWeek;
		this.$isoWeekday = isoWeekday;
	};
	$tab_$DateUtil$ISO8601DateParts.getDefaultValue = function() {
		return new $tab_$DateUtil$ISO8601DateParts();
	};
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.jQuerySelectorExtensionsImpl
	var $tab_$jQuerySelectorExtensionsImpl = function() {
	};
	$tab_$jQuerySelectorExtensionsImpl.__typeName = 'tab.$jQuerySelectorExtensionsImpl';
	$tab_$jQuerySelectorExtensionsImpl.$focusable = function jQuerySelectorExtensionsImpl$Focusable(element, isTabIndexNotNaN) {
		var nodeName = element.nodeName.toLowerCase();
		if (nodeName === 'area') {
			ss.Debug.fail('<area> tags are not supported');
			return false;
		}
		var focusable = isTabIndexNotNaN;
		var focusableNodes = new RegExp('input|select|textarea|button|object');
		if (focusableNodes.test(nodeName)) {
			focusable = !element.disabled;
		}
		else if (nodeName === 'a') {
			focusable = !ss.isNullOrEmptyString(ss.cast(element, ss.isValue(element) && (ss.isInstanceOfType(element, Element) && element.tagName === 'A')).href) || isTabIndexNotNaN;
		}
		return focusable && $tab_$jQuerySelectorExtensionsImpl.$isVisible(element);
	};
	$tab_$jQuerySelectorExtensionsImpl.$isVisible = function jQuerySelectorExtensionsImpl$IsVisible(element) {
		for (var visibility = ''; ss.isValue(element); element = element.parentElement) {
			if (element.style.display === 'none') {
				return false;
			}
			else if (visibility === 'visible') {
				continue;
			}
			else if (visibility.length === 0 || visibility === 'inherit') {
				visibility = element.style.visibility;
			}
			if (visibility === 'hidden') {
				return false;
			}
		}
		return true;
	};
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.StackTraceParser
	var $tab_$StackTraceParser = function() {
	};
	$tab_$StackTraceParser.__typeName = 'tab.$StackTraceParser';
	$tab_$StackTraceParser.$computeStackTraceFromStackTraceProp = function StackTraceParser$ComputeStackTraceFromStackTraceProp(e) {
		var locations = $tab_$StackTraceParser.$parseException(e);
		var stack = new $tab_StackTrace('stack', $tab_$StackTraceParser.$getExceptionMessage(e), ss.cast(e.name, String), locations);
		return stack;
	};
	$tab_$StackTraceParser.$getExceptionMessage = function StackTraceParser$GetExceptionMessage(e) {
		var errorMessage = e.get_message();
		if (ss.isValue(e.get_innerException())) {
			errorMessage += ' inner: ' + e.get_innerException().get_message();
		}
		return errorMessage;
	};
	$tab_$StackTraceParser.$parseException = function StackTraceParser$ParseException(e) {
		var err;
		if (ss.isValue(e.get_innerException())) {
			err = ss.cast(e.get_innerException().error, Error);
		}
		else {
			err = ss.cast(e._error, Error);
		}
		return $tab_$StackTraceParser.$parseJsErrorForStackLines(err);
	};
	$tab_$StackTraceParser.$parseJsErrorForStackLines = function StackTraceParser$ParseJsErrorForStackLines(err) {
		if (ss.isNullOrUndefined(err) || ss.isNullOrUndefined(err.stack)) {
			return null;
		}
		if (ss.isValue(err.stack.match($tab_$StackTraceParser.$chromeIEStackRegexp))) {
			return $tab_$StackTraceParser.$parseChromeOrIE(err);
		}
		return $tab_$StackTraceParser.$parseFirefoxOrSafari(err);
	};
	$tab_$StackTraceParser.$parseChromeOrIE = function StackTraceParser$ParseChromeOrIE(error) {
		var filtered = error.stack.split(String.fromCharCode(10)).filter(function(line) {
			return ss.isValue(line.match($tab_$StackTraceParser.$chromeIEStackRegexp));
		});
		return filtered.map(function(line1) {
			if (line1.indexOf('(eval ') > -1) {
				line1 = ss.replaceAllString(line1, 'eval code', 'eval').replace($tab_$StackTraceParser.$throwAwayEvalRegexp, '');
			}
			var tokens = line1.replace(new RegExp('^\\s+'), '').replace(new RegExp('\\(eval code'), '(').split(new RegExp('\\s+')).slice(1);
			var locationParts = $tab_$StackTraceParser.$extractLocation(tokens.pop());
			var functionName = ss.coalesce(tokens.join(' '), 'undefined');
			var fileName = ((ss.indexOf(['eval', '<anonymous>'], locationParts[0]) > -1) ? 'undefined' : locationParts[0]);
			var lineNum = parseInt(locationParts[1]);
			var colNum = parseInt(locationParts[2]);
			return new $tab_StackLocation(fileName, lineNum, colNum, line1, functionName);
		});
	};
	$tab_$StackTraceParser.$parseFirefoxOrSafari = function StackTraceParser$ParseFirefoxOrSafari(error) {
		var filtered = error.stack.split(String.fromCharCode(10)).filter(function(line) {
			return ss.isNullOrUndefined(line.match($tab_$StackTraceParser.$safariNativeCodeRegexp));
		});
		return filtered.map(function(line1) {
			if (line1.indexOf(' > eval') > -1) {
				line1 = line1.replace(new RegExp(' line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+', 'g'), ':$1');
			}
			if (line1.indexOf('@') === -1 && line1.indexOf(':') === -1) {
				return new $tab_StackLocation(line1, 0, 0, '', null);
			}
			else {
				var tokens = line1.split('@');
				var locationParts = $tab_$StackTraceParser.$extractLocation(tokens.pop());
				var functionName = ss.coalesce(tokens.join('@'), 'undefined');
				var fileName = locationParts[0];
				var lineNum = parseInt(locationParts[1]);
				var colNum = parseInt(locationParts[2]);
				var stackFrame = new $tab_StackLocation(fileName, lineNum, colNum, line1, functionName);
				return stackFrame;
			}
		});
	};
	$tab_$StackTraceParser.$extractLocation = function StackTraceParser$ExtractLocation(urlLike) {
		if (urlLike.indexOf(String.fromCharCode(58)) === -1) {
			return [urlLike];
		}
		var parts = $tab_$StackTraceParser.$extractLocationRegexp.exec(urlLike.replace($tab_$StackTraceParser.$extractLocationUrlLikeRegexp, ''));
		return [parts[1], ss.coalesce(parts[2], 'undefined'), ss.coalesce(parts[3], 'undefined')];
	};
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.AbstractEnumerator
	var $tab_AbstractEnumerator$1 = function(T) {
		var $type = function() {
		};
		ss.registerGenericClassInstance($type, $tab_AbstractEnumerator$1, [T], {
			current: null,
			reset: null,
			moveNext: null,
			dispose: function AbstractEnumerator$Dispose() {
			}
		}, function() {
			return null;
		}, function() {
			return [ss.IDisposable, ss.IEnumerator, ss.IEnumerator];
		});
		return $type;
	};
	$tab_AbstractEnumerator$1.__typeName = 'tab.AbstractEnumerator$1';
	ss.initGenericClass($tab_AbstractEnumerator$1, $asm, 1);
	global.tab.AbstractEnumerator$1 = $tab_AbstractEnumerator$1;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.CalendarOptions
	var $tab_CalendarOptions = function() {
		this.startOfWeek = 1;
		this.fiscalYearStart = 1;
		this.minDaysInFirstWeek = 1;
		this.brokenWeeks = true;
		this.forceIso8601Calendar = false;
	};
	$tab_CalendarOptions.__typeName = 'tab.CalendarOptions';
	global.tab.CalendarOptions = $tab_CalendarOptions;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.CallOnDispose
	var $tab_CallOnDispose = function(callOnDispose) {
		this.$callOnDispose = null;
		this.$callOnDispose = callOnDispose;
	};
	$tab_CallOnDispose.__typeName = 'tab.CallOnDispose';
	global.tab.CallOnDispose = $tab_CallOnDispose;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.CircleUtil
	var $tab_CircleUtil = function() {
	};
	$tab_CircleUtil.__typeName = 'tab.CircleUtil';
	$tab_CircleUtil.isEmpty = function CircleUtil$IsEmpty(circle) {
		return $tab_DoubleUtil.isApproximatelyZero(circle.radius);
	};
	$tab_CircleUtil.isEqual = function CircleUtil$IsEqual(c1, c2) {
		return $tab_DoubleUtil.isApproximatelyEqual(c1.radius, c2.radius) && $tab_CircleUtil.hasTheSameCenter(c1, c2);
	};
	$tab_CircleUtil.hasTheSameCenter = function CircleUtil$HasTheSameCenter(c1, c2) {
		return $tab_DoubleUtil.isApproximatelyEqual(c1.center.x, c2.center.x) && $tab_DoubleUtil.isApproximatelyEqual(c1.center.y, c2.center.y);
	};
	$tab_CircleUtil.intersectsWith = function CircleUtil$IntersectsWith(c1, c2) {
		var distanceSquared = Math.pow(c1.center.x - c2.center.x, 2) + Math.pow(c1.center.y - c2.center.y, 2);
		return Math.pow(c1.radius + c2.radius, 2) > distanceSquared;
	};
	$tab_CircleUtil.offsetCircle = function CircleUtil$OffsetCircle(c, p) {
		var offsetCenter = { x: c.center.x + p.x, y: c.center.y + p.y };
		return { center: offsetCenter, radius: c.radius };
	};
	$tab_CircleUtil.clone = function CircleUtil$Clone(c) {
		return { center: { x: c.center.x, y: c.center.y }, radius: c.radius };
	};
	$tab_CircleUtil.boundingBox = function CircleUtil$BoundingBox(circle) {
		var intRadius = Math.ceil(circle.radius);
		var minX = Math.floor(circle.center.x - intRadius);
		var maxX = Math.ceil(circle.center.x + intRadius);
		var minY = Math.floor(circle.center.y - intRadius);
		var maxY = Math.ceil(circle.center.y + intRadius);
		return { x: minX, y: minY, w: maxX - minX, h: maxY - minY };
	};
	$tab_CircleUtil.containmentBox = function CircleUtil$ContainmentBox(circle) {
		var diffX = Math.abs(ss.round(circle.center.x) - circle.center.x);
		var diffY = Math.abs(ss.round(circle.center.y) - circle.center.y);
		var halfLength = Math.sqrt(2) / 2 * circle.radius - Math.max(diffX, diffY);
		var left = Math.ceil(circle.center.x - halfLength);
		var top = Math.ceil(circle.center.y - halfLength);
		var right = Math.floor(circle.center.x + halfLength);
		var bottom = Math.floor(circle.center.y + halfLength);
		return { x: left, y: top, w: right - left, h: bottom - top };
	};
	$tab_CircleUtil.getChangedRects = function CircleUtil$GetChangedRects(c1, c2) {
		if (!$tab_CircleUtil.hasTheSameCenter(c1, c2)) {
			tab.Log.get(c1).warn('Circle centers in comparison should be the same, but are not', []);
			return [];
		}
		var outerBox = ((c1.radius > c2.radius) ? $tab_CircleUtil.boundingBox(c1) : $tab_CircleUtil.boundingBox(c2));
		var innerBox = ((c1.radius > c2.radius) ? $tab_CircleUtil.containmentBox(c2) : $tab_CircleUtil.containmentBox(c1));
		var changedRects = new Array(4);
		var horzBoxHeight = ss.Int32.div(outerBox.h - innerBox.h, 2);
		var vertBoxWidth = ss.Int32.div(outerBox.w - innerBox.w, 2);
		changedRects[0] = { x: outerBox.x, y: outerBox.y, w: outerBox.w, h: horzBoxHeight };
		changedRects[1] = { x: outerBox.x, y: outerBox.y + horzBoxHeight + innerBox.h, w: outerBox.w, h: horzBoxHeight };
		changedRects[2] = { x: outerBox.x, y: outerBox.y + horzBoxHeight, w: vertBoxWidth, h: innerBox.h };
		changedRects[3] = { x: outerBox.x + vertBoxWidth + innerBox.w, y: outerBox.y + horzBoxHeight, w: vertBoxWidth, h: innerBox.h };
		return changedRects;
	};
	global.tab.CircleUtil = $tab_CircleUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.DashboardRegionZIndexConstants
	var $tab_DashboardRegionZIndexConstants = function() {
	};
	$tab_DashboardRegionZIndexConstants.__typeName = 'tab.DashboardRegionZIndexConstants';
	global.tab.DashboardRegionZIndexConstants = $tab_DashboardRegionZIndexConstants;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.DataSourceConnectionAttemptErrorResponse
	var $tab_DataSourceConnectionAttemptErrorResponse = function() {
		this.ErrorType = null;
		this.RedirectUrl = null;
		this.ErrorMessage = null;
		this.ConnectionClass = null;
		this.ConnectionName = null;
		this.DataSourceCaption = null;
	};
	$tab_DataSourceConnectionAttemptErrorResponse.__typeName = 'tab.DataSourceConnectionAttemptErrorResponse';
	$tab_DataSourceConnectionAttemptErrorResponse.$ctor1 = function(connectionAttemptInfo) {
		this.ErrorType = null;
		this.RedirectUrl = null;
		this.ErrorMessage = null;
		this.ConnectionClass = null;
		this.ConnectionName = null;
		this.DataSourceCaption = null;
		if (ss.isNullOrUndefined(connectionAttemptInfo)) {
			return;
		}
		this.ErrorType = connectionAttemptInfo.exceptionType;
		this.ErrorMessage = connectionAttemptInfo.exceptionMessage;
		this.ConnectionName = connectionAttemptInfo.connectionFullName;
		this.DataSourceCaption = connectionAttemptInfo.datasourceCaption;
		this.ConnectionClass = (ss.isNullOrUndefined(connectionAttemptInfo.exceptionAttrs) ? '' : connectionAttemptInfo.exceptionAttrs['class']);
	};
	$tab_DataSourceConnectionAttemptErrorResponse.tryDeserialize$1 = function DataSourceConnectionAttemptErrorResponse$TryDeserialize(responseText) {
		try {
			var response = JSON.parse(responseText);
			return response;
		}
		catch ($t1) {
			return null;
		}
	};
	$tab_DataSourceConnectionAttemptErrorResponse.tryDeserialize = function DataSourceConnectionAttemptErrorResponse$TryDeserialize(exception) {
		if (ss.isNullOrUndefined(exception) || ss.isNullOrEmptyString(exception.get_message())) {
			return null;
		}
		var indexOfLeftBrace = Math.max(exception.get_message().indexOf('{'), 0);
		var lastIndexOfRightBrace = exception.get_message().lastIndexOf('}') + 1;
		return $tab_DataSourceConnectionAttemptErrorResponse.tryDeserialize$1(exception.get_message().substring(indexOfLeftBrace, ((lastIndexOfRightBrace === -1) ? exception.get_message().length : lastIndexOfRightBrace)));
	};
	global.tab.DataSourceConnectionAttemptErrorResponse = $tab_DataSourceConnectionAttemptErrorResponse;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.DateTimeAutoFormatMode
	var $tab_DateTimeAutoFormatMode = function() {
	};
	$tab_DateTimeAutoFormatMode.__typeName = 'tab.DateTimeAutoFormatMode';
	global.tab.DateTimeAutoFormatMode = $tab_DateTimeAutoFormatMode;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.DateUtil
	var $tab_DateUtil = function() {
	};
	$tab_DateUtil.__typeName = 'tab.DateUtil';
	$tab_DateUtil.get_$log = function DateUtil$get_Log() {
		return tab.Logger.lazyGetLogger($tab_DateUtil);
	};
	$tab_DateUtil.get_nowAsTime = function DateUtil$get_NowAsTime() {
		return (new Date()).getTime();
	};
	$tab_DateUtil.adjustDateByPeriod = function DateUtil$AdjustDateByPeriod(date, periodType, numPeriods) {
		var outDate = new Date();
		switch (periodType) {
			case 'year': {
				outDate = new Date(date.getFullYear() + numPeriods, date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds());
				break;
			}
			case 'quarter': {
				outDate = $tab_DateUtil.adjustByMonths(date, numPeriods * 3);
				break;
			}
			case 'month': {
				outDate = $tab_DateUtil.adjustByMonths(date, numPeriods);
				break;
			}
			case 'week': {
				outDate = $tab_DateUtil.$adjustByDays(date, numPeriods * 7);
				break;
			}
			case 'day': {
				outDate = $tab_DateUtil.$adjustByDays(date, numPeriods);
				break;
			}
			case 'hour': {
				outDate = new Date(date.getTime() + numPeriods * $tab_DateUtil.oneHour);
				break;
			}
			case 'minute': {
				outDate = new Date(date.getTime() + numPeriods * $tab_DateUtil.oneMinute);
				break;
			}
			case 'second': {
				outDate = new Date(date.getTime() + numPeriods * $tab_DateUtil.oneSecond);
				break;
			}
		}
		return outDate;
	};
	$tab_DateUtil.$adjustByDays = function DateUtil$AdjustByDays(inputDate, numDays) {
		var inputDateNoon = new Date(inputDate.getFullYear(), inputDate.getMonth(), inputDate.getDate(), 12);
		var adjustedDate = new Date(inputDateNoon.getTime() + $tab_DateUtil.oneDay * numDays);
		return new Date(adjustedDate.getFullYear(), adjustedDate.getMonth(), adjustedDate.getDate(), inputDate.getHours(), inputDate.getMinutes(), inputDate.getSeconds());
	};
	$tab_DateUtil.adjustByMonths = function DateUtil$AdjustByMonths(date, n) {
		var currentMonth = date.getMonth();
		var years;
		var newMonth;
		if (n < 0) {
			years = -((12 - (currentMonth - 1) - 1 - n) / 12) | 0;
		}
		else {
			years = (currentMonth - 1 + n) / 12 | 0;
		}
		newMonth = currentMonth + (n - years * 12);
		return new Date(date.getFullYear() + years, newMonth, date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds());
	};
	$tab_DateUtil.adjustDateByPeriodInUTC = function DateUtil$AdjustDateByPeriodInUTC(date, periodType, numPeriods) {
		var outDate = new Date();
		switch (periodType) {
			case 'year': {
				outDate = new Date(Date.UTC(date.getUTCFullYear() + numPeriods, date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds()));
				break;
			}
			case 'iso-year': {
				outDate = $tab_DateUtil.adjustByIsoYearsInUTC(date, numPeriods);
				break;
			}
			case 'quarter': {
				outDate = $tab_DateUtil.adjustByMonthsInUTC(date, numPeriods * 3);
				break;
			}
			case 'iso-quarter': {
				outDate = $tab_DateUtil.adjustByIsoQuartersInUTC(date, numPeriods);
				break;
			}
			case 'month': {
				outDate = $tab_DateUtil.adjustByMonthsInUTC(date, numPeriods);
				break;
			}
			case 'week': {
				outDate = new Date(date.getTime() + numPeriods * $tab_DateUtil.oneWeek);
				break;
			}
			case 'day': {
				outDate = new Date(date.getTime() + numPeriods * $tab_DateUtil.oneDay);
				break;
			}
			case 'hour': {
				outDate = new Date(date.getTime() + numPeriods * $tab_DateUtil.oneHour);
				break;
			}
			case 'minute': {
				outDate = new Date(date.getTime() + numPeriods * $tab_DateUtil.oneMinute);
				break;
			}
			case 'second': {
				outDate = new Date(date.getTime() + numPeriods * $tab_DateUtil.oneSecond);
				break;
			}
		}
		return outDate;
	};
	$tab_DateUtil.adjustByMonthsInUTC = function DateUtil$AdjustByMonthsInUTC(date, n) {
		var currentMonth = date.getUTCMonth(), years, newMonth;
		if (n < 0) {
			years = -((12 - (currentMonth - 1) - 1 - n) / 12) | 0;
		}
		else {
			years = (currentMonth - 1 + n) / 12 | 0;
		}
		newMonth = currentMonth + (n - years * 12);
		return new Date(Date.UTC(date.getUTCFullYear() + years, newMonth, date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds()));
	};
	$tab_DateUtil.adjustByIsoYearsInUTC = function DateUtil$AdjustByIsoYearsInUTC(date, numIsoYears) {
		var isoParts = $tab_DateUtil.$getISO8601DateParts(date);
		var dateISOYear = isoParts.$isoYear;
		var dayInYear = ss.Int32.div(date - $tab_DateUtil.$getISO8601YearStart(dateISOYear), $tab_DateUtil.$milisInADay);
		var newISOYear = dateISOYear + numIsoYears;
		var newISOYearStart = $tab_DateUtil.$getISO8601YearStart(newISOYear);
		var newDate = new Date(newISOYearStart.getTime() + dayInYear * $tab_DateUtil.oneDay);
		return new Date(date.getTime() + (newDate.getTime() - date.getTime()));
	};
	$tab_DateUtil.adjustByIsoQuartersInUTC = function DateUtil$AdjustByIsoQuartersInUTC(date, numISOQuarters) {
		var isoParts = $tab_DateUtil.$getISO8601DateParts(date);
		var currentISOQuarter = ss.Int32.div(isoParts.$isoWeek, 13) + 1;
		if (currentISOQuarter === 5) {
			currentISOQuarter--;
		}
		var newAbsISOQuarter = isoParts.$isoYear * 4 + (currentISOQuarter - 1) + numISOQuarters;
		var newISOYear = ss.Int32.div(newAbsISOQuarter, 4);
		var newISOQuarter = newAbsISOQuarter % 4 + 1;
		var dayInQuarter = ss.Int32.div(date - $tab_DateUtil.$getISO8601QuarterStart(isoParts.$isoYear, currentISOQuarter), $tab_DateUtil.oneDay);
		var newISOYearStart = $tab_DateUtil.$getISO8601YearStart(newISOYear);
		var newDate = new Date(newISOYearStart.getTime() + ((newISOQuarter - 1) * 91 + dayInQuarter) * $tab_DateUtil.oneDay);
		return new Date(date.getTime() + (newDate.getTime() - date.getTime()));
	};
	$tab_DateUtil.parsePresModelDate = function DateUtil$ParsePresModelDate(dateValue) {
		if (ss.isNullOrUndefined(dateValue)) {
			return null;
		}
		var matches = (new RegExp('(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)( (\\d\\d):(\\d\\d):(\\d\\d))?')).exec(dateValue);
		if (ss.isNullOrUndefined(matches)) {
			$tab_DateUtil.get_$log().debug("Date doesn't match: %s", [dateValue]);
			return null;
		}
		var year = parseInt(matches[1], 10);
		var month = parseInt(matches[2], 10) - 1;
		var day = parseInt(matches[3], 10);
		if (ss.isNullOrEmptyString(matches[4])) {
			return new Date(Date.UTC(year, month, day));
		}
		else {
			var hours = parseInt(matches[5], 10);
			var minutes = parseInt(matches[6], 10);
			var seconds = parseInt(matches[7], 10);
			return new Date(Date.UTC(year, month, day, hours, minutes, seconds));
		}
	};
	$tab_DateUtil.dateAsYear = function DateUtil$DateAsYear(arg) {
		return arg.getUTCFullYear();
	};
	$tab_DateUtil.dateAsQuarter = function DateUtil$DateAsQuarter(arg) {
		var month = $tab_DateUtil.$getMonthNum(arg);
		return parseInt(1 + ss.Int32.div(month - 1, 3));
	};
	$tab_DateUtil.dateAsMonth = function DateUtil$DateAsMonth(arg) {
		return $tab_DateUtil.$getMonthNum(arg);
	};
	$tab_DateUtil.dateAsWeek = function DateUtil$DateAsWeek(arg) {
		var jan1 = new Date(arg.getUTCFullYear(), 0, 1);
		var dayOfYear = $tab_DateUtil.$getDayOfYear(arg);
		var value = parseInt(1 + (dayOfYear + $tab_DateUtil.$getDayNum(jan1) - 2) / 7);
		return value;
	};
	$tab_DateUtil.dateAsDay = function DateUtil$DateAsDay(arg) {
		return arg.getUTCDate();
	};
	$tab_DateUtil.dateAsDayOfYear = function DateUtil$DateAsDayOfYear(arg) {
		return $tab_DateUtil.$getDayOfYear(arg);
	};
	$tab_DateUtil.dateAsDayOfWeek = function DateUtil$DateAsDayOfWeek(arg) {
		return $tab_DateUtil.$getDayNum(arg);
	};
	$tab_DateUtil.dateAsMonthYear = function DateUtil$DateAsMonthYear(arg) {
		var value = $tab_DateUtil.$getMonthNum(arg) * 10000 + arg.getUTCFullYear();
		return value;
	};
	$tab_DateUtil.dateAsMonthDayYear = function DateUtil$DateAsMonthDayYear(arg) {
		var value = $tab_DateUtil.$getMonthNum(arg) * 1000000 + arg.getUTCDate() * 10000 + arg.getUTCFullYear();
		return value;
	};
	$tab_DateUtil.dateTimeAsHour = function DateUtil$DateTimeAsHour(arg) {
		return arg.getUTCHours();
	};
	$tab_DateUtil.dateTimeAsMinute = function DateUtil$DateTimeAsMinute(arg) {
		return arg.getUTCMinutes();
	};
	$tab_DateUtil.dateTimeAsSecond = function DateUtil$DateTimeAsSecond(arg) {
		return arg.getUTCSeconds();
	};
	$tab_DateUtil.dateTimeAsOleDate = function DateUtil$DateTimeAsOleDate(arg) {
		return $tableau_types.OleDateFromJsDate(arg.getTime());
	};
	$tab_DateUtil.$getDayOfYear = function DateUtil$GetDayOfYear(arg) {
		var yn = arg.getUTCFullYear();
		var mn = arg.getUTCMonth();
		var dn = arg.getUTCDate();
		var d1 = new Date(yn, 0, 1, 12, 0, 0);
		var d2 = new Date(yn, mn, dn, 12, 0, 0);
		var ddiff = Math.round((d2 - d1) / 86400000);
		return ddiff + 1;
	};
	$tab_DateUtil.$getMonthNum = function DateUtil$GetMonthNum(arg) {
		return arg.getUTCMonth() + 1;
	};
	$tab_DateUtil.$getDayNum = function DateUtil$GetDayNum(arg) {
		return arg.getUTCDay() + 1;
	};
	$tab_DateUtil.$getISO8601DayOfWeek = function DateUtil$GetISO8601DayOfWeek(arg) {
		var dayOfWeek = arg.getUTCDay();
		if (dayOfWeek === 0) {
			dayOfWeek = 7;
		}
		return dayOfWeek;
	};
	$tab_DateUtil.$getISO8601YearStart = function DateUtil$GetISO8601YearStart(isoYear) {
		var january4th = new Date(isoYear, 0, 4, 0, 0, 0);
		var dayOfGregorianYear = 4 - $tab_DateUtil.$getISO8601DayOfWeek(january4th) + 1;
		if (dayOfGregorianYear < 1) {
			return new Date(Date.UTC(isoYear - 1, 11, dayOfGregorianYear + 31, 0, 0, 0));
		}
		return new Date(Date.UTC(isoYear, 0, dayOfGregorianYear, 0, 0, 0));
	};
	$tab_DateUtil.$getISO8601QuarterStart = function DateUtil$GetISO8601QuarterStart(isoYear, isoQuarter) {
		var isoYearStart = $tab_DateUtil.$getISO8601YearStart(isoYear);
		return new Date(isoYearStart.getTime() + (isoQuarter - 1) * (91 * $tab_DateUtil.oneDay));
	};
	$tab_DateUtil.daysSinceEpoch = function DateUtil$DaysSinceEpoch(date) {
		return Math.floor(date.getTime() / 86400000);
	};
	$tab_DateUtil.$getISO8601DateParts = function DateUtil$GetISO8601DateParts(date) {
		var gregorianYear = date.getUTCFullYear();
		var gregorianDayOfYear = $tab_DateUtil.$getDayOfYear(date);
		var isoDayOfWeek = $tab_DateUtil.$getISO8601DayOfWeek(date);
		var isoWeekOfYear = ss.Int32.div(gregorianDayOfYear - isoDayOfWeek + 10, 7);
		var isoYear = gregorianYear;
		if (isoWeekOfYear === 0) {
			var startOfLastYear = new Date(Date.UTC(gregorianYear - 1, 0, 1, 0, 0, 0));
			var dayOfLastGregorianYear = ss.Int32.div(date - startOfLastYear, $tab_DateUtil.$milisInADay) + 1;
			isoWeekOfYear = ss.Int32.div(dayOfLastGregorianYear - isoDayOfWeek + 10, 7);
			isoYear = gregorianYear - 1;
		}
		else if (isoWeekOfYear === 53) {
			var january4thOfNextYear = new Date(Date.UTC(gregorianYear + 1, 0, 4, 0, 0, 0));
			var dayOfMonthThatIsStartOfIsoYear = 4 - $tab_DateUtil.$getISO8601DayOfWeek(january4thOfNextYear) + 1;
			if (dayOfMonthThatIsStartOfIsoYear < 1) {
				dayOfMonthThatIsStartOfIsoYear = 31 + dayOfMonthThatIsStartOfIsoYear;
				var startOfIsoYear = new Date(Date.UTC(gregorianYear, 11, dayOfMonthThatIsStartOfIsoYear, 0, 0, 0));
				if (startOfIsoYear <= date) {
					isoWeekOfYear = 1;
					isoYear = gregorianYear + 1;
				}
			}
		}
		var isoParts = new $tab_$DateUtil$ISO8601DateParts.$ctor1(isoYear, isoWeekOfYear, isoDayOfWeek);
		return isoParts;
	};
	global.tab.DateUtil = $tab_DateUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.Debouncer
	var $tab_Debouncer = function(action, timeout) {
		this.$timeoutHandle = null;
		this.$timeout = 0;
		this.$action = null;
		$tab_Param.verifyValue(action, 'action');
		this.$action = action;
		this.$timeout = timeout;
	};
	$tab_Debouncer.__typeName = 'tab.Debouncer';
	global.tab.Debouncer = $tab_Debouncer;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.DisposableHolder
	var $tab_DisposableHolder = function() {
		this.$disposables = [];
	};
	$tab_DisposableHolder.__typeName = 'tab.DisposableHolder';
	global.tab.DisposableHolder = $tab_DisposableHolder;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.DomUtil
	var $tab_DomUtil = function() {
	};
	$tab_DomUtil.__typeName = 'tab.DomUtil';
	$tab_DomUtil.get_$log = function DomUtil$get_Log() {
		return tab.Logger.lazyGetLogger($tab_DomUtil);
	};
	$tab_DomUtil.get_documentBody = function DomUtil$get_DocumentBody() {
		return document.body;
	};
	$tab_DomUtil.getComputedStyle = function DomUtil$GetComputedStyle(e) {
		if (BrowserSupport.BrowserSupport.GetComputedStyle()) {
			var s = window.getComputedStyle(e);
			if (ss.isValue(s)) {
				return s;
			}
		}
		$tab_DomUtil.get_$log().warn('Calling GetComputedStyle but is unsupported', []);
		return e.style;
	};
	$tab_DomUtil.getComputedZIndex = function DomUtil$GetComputedZIndex(child) {
		$tab_Param.verifyValue(child, 'child');
		var iter = $(child);
		var lastPositioned = iter;
		var html = document.documentElement;
		var body = document.body;
		while (iter.length !== 0 && !ss.referenceEquals(iter[0], body) && !ss.referenceEquals(iter[0], html)) {
			var pos = iter.css('position');
			if (pos === 'absolute' || pos === 'fixed') {
				lastPositioned = iter;
			}
			iter = iter.offsetParent();
		}
		return $tab_DomUtil.$parseZIndexProperty(lastPositioned);
	};
	$tab_DomUtil.resize = function DomUtil$Resize(e, rect) {
		if (!!(typeof(e['resize']) === 'function')) {
			e.resize(rect);
		}
		else {
			$tab_DomUtil.setMarginBox(ss.cast(e.domNode || e, HTMLElement), rect);
		}
	};
	$tab_DomUtil.getContentBox = function DomUtil$GetContentBox(e) {
		var obj = $(e);
		return { l: parseInt(obj.css('padding-left'), 10) || 0, t: parseInt(obj.css('padding-top'), 10) || 0, w: $tab_DoubleUtil.roundToInt(obj.width()), h: $tab_DoubleUtil.roundToInt(obj.height()) };
	};
	$tab_DomUtil.setContentBox = function DomUtil$SetContentBox(e, r) {
		$(e).width(r.w).height(r.h);
	};
	$tab_DomUtil.setMarginBox = function DomUtil$SetMarginBox(e, r) {
		$tab_DomUtil.setMarginBoxJQ($(e), r);
	};
	$tab_DomUtil.setMarginBoxJQ = function DomUtil$SetMarginBoxJQ(o, r) {
		var rawElement = o[0];
		var elementStyle = rawElement.style;
		var computedStyle = window.getComputedStyle(rawElement);
		$tab_DomUtil.$setMarginSizeJQ(computedStyle, r, rawElement);
		if (!isNaN(r.t)) {
			elementStyle.top = r.t + 'px';
		}
		if (!isNaN(r.l)) {
			elementStyle.left = r.l + 'px';
		}
	};
	$tab_DomUtil.setAbsolutePositionBox = function DomUtil$SetAbsolutePositionBox(o, r) {
		o.css({ left: (r.l || 0) + 'px', top: (r.t || 0) + 'px', width: (r.w || 0) + 'px', height: (r.h || 0) + 'px' });
	};
	$tab_DomUtil.getMarginBox = function DomUtil$GetMarginBox(e) {
		return $tab_DomUtil.getMarginBoxJQ($(e));
	};
	$tab_DomUtil.getMarginBoxJQ = function DomUtil$GetMarginBoxJQ(o) {
		var p = o.position();
		return { l: $tab_DoubleUtil.roundToInt(p.left), t: $tab_DoubleUtil.roundToInt(p.top), w: $tab_DoubleUtil.roundToInt(o.outerWidth(true)), h: $tab_DoubleUtil.roundToInt(o.outerHeight(true)) };
	};
	$tab_DomUtil.getRectXY = function DomUtil$GetRectXY(o) {
		var x = $tab_DoubleUtil.roundToInt($tab_DomUtil.getPageOffset$1(o).left);
		var y = $tab_DoubleUtil.roundToInt($tab_DomUtil.getPageOffset$1(o).top);
		var w = $tab_DoubleUtil.roundToInt(o.outerWidth(true));
		var h = $tab_DoubleUtil.roundToInt(o.outerHeight(true));
		return { x: x, y: y, w: w, h: h };
	};
	$tab_DomUtil.getRectXY$1 = function DomUtil$GetRectXY(o, includeScroll) {
		var result = $tab_DomUtil.getRectXY(o);
		if (includeScroll) {
			var scroll = $tab_DomUtil.docScroll();
			result.x += scroll.x;
			result.y += scroll.y;
		}
		return result;
	};
	$tab_DomUtil.docScroll = function DomUtil$DocScroll() {
		var x = ss.coalesce(window.pageXOffset, ss.coalesce(document.documentElement.scrollLeft, ss.coalesce($tab_DomUtil.get_documentBody().scrollLeft, 0)));
		var y = ss.coalesce(window.pageYOffset, ss.coalesce(document.documentElement.scrollTop, ss.coalesce($tab_DomUtil.get_documentBody().scrollTop, 0)));
		return { x: x, y: y };
	};
	$tab_DomUtil.isAncestorOf = function DomUtil$IsAncestorOf(ancestor, child) {
		if (ss.isNullOrUndefined(ancestor) || ss.isNullOrUndefined(child)) {
			return false;
		}
		return $(child).parents().index(ancestor) >= 0;
	};
	$tab_DomUtil.isEqualOrAncestorOf = function DomUtil$IsEqualOrAncestorOf(ancestor, child) {
		if (ss.isNullOrUndefined(ancestor) || ss.isNullOrUndefined(child)) {
			return false;
		}
		return ss.referenceEquals(ancestor, child) || $tab_DomUtil.isAncestorOf(ancestor, child);
	};
	$tab_DomUtil.setElementPosition = function DomUtil$SetElementPosition(e, pageX, pageY, duration, useTransform) {
		if (!ss.isValue(useTransform) || ss.unbox(useTransform)) {
			var styling = ss.mkdict(['top', '0px', 'left', '0px']);
			var transformVal = (new ss.StringBuilder('translate3d(')).append(pageX).append('px,').append(pageY).append('px,').append('0px)').toString();
			styling[BrowserSupport.BrowserSupport.CssTransformName()] = transformVal;
			if (ss.isValue(duration)) {
				styling[BrowserSupport.BrowserSupport.CssTransitionName() + '-duration'] = duration;
			}
			e.css(styling);
			return;
		}
		var css = ss.mkdict(['position', 'absolute', 'top', pageY + 'px', 'left', pageX + 'px']);
		css[BrowserSupport.BrowserSupport.CssTransformName()] = '';
		e.css(css);
	};
	$tab_DomUtil.getElementPosition = function DomUtil$GetElementPosition(e) {
		return $tab_PointUtil.fromPosition(e.offset());
	};
	$tab_DomUtil.getElementClientPosition = function DomUtil$GetElementClientPosition(e) {
		var p = $tab_DomUtil.getElementPosition(e);
		p.x -= $(document.documentElement).scrollLeft();
		p.y -= $tab_DoubleUtil.roundToInt($(document.documentElement).scrollTop());
		return p;
	};
	$tab_DomUtil.getTransformOffset = function DomUtil$GetTransformOffset(element) {
		if (ss.isNullOrUndefined(element)) {
			$tab_DomUtil.get_$log().warn('Attempting to get transformation on null element!', []);
			return { left: 0, top: 0 };
		}
		var fullTransform = element.css('transform');
		if (ss.isNullOrEmptyString(fullTransform)) {
			return { left: 0, top: 0 };
		}
		var transform = fullTransform.split('(');
		var index = $tab_DomUtil.$translationFuncIndexer[transform[0]];
		if (ss.isNullOrUndefined(index)) {
			return { left: 0, top: 0 };
		}
		var vals = transform[1].split(',');
		return { left: ss.coalesce($tab_DoubleUtil.parseDouble(vals[ss.unbox(index)]), 0), top: ss.coalesce($tab_DoubleUtil.parseDouble(vals[ss.unbox(index) + 1]), 0) };
	};
	$tab_DomUtil.getTransformScale = function DomUtil$GetTransformScale(element) {
		if (ss.isNullOrUndefined(element)) {
			$tab_DomUtil.get_$log().warn('Attempting to get transformation on null element!', []);
			return 1;
		}
		var fullTransform = element.css('transform');
		if (ss.isNullOrEmptyString(fullTransform)) {
			return 1;
		}
		var transform = fullTransform.split('(');
		if (transform[0] === 'scale' || transform[0] === 'matrix' || transform[0] === 'matrix3d') {
			return ss.coalesce($tab_DoubleUtil.parseDouble(transform[1]), 1);
		}
		else {
			return 1;
		}
	};
	$tab_DomUtil.getPageOffset$1 = function DomUtil$GetPageOffset(e) {
		var pageOffset = $tab_DomUtil.getPageOffset(e[0]);
		return { left: pageOffset.x, top: pageOffset.y };
	};
	$tab_DomUtil.getPageOffset = function DomUtil$GetPageOffset(e) {
		var elementRect = e.getBoundingClientRect();
		var documentElementRect = document.documentElement.getBoundingClientRect();
		return { x: elementRect.left - documentElementRect.left, y: elementRect.top - documentElementRect.top };
	};
	$tab_DomUtil.getScrollPosition = function DomUtil$GetScrollPosition(o) {
		return { left: o[0].scrollLeft, top: o[0].scrollTop };
	};
	$tab_DomUtil.scrollPosition = function DomUtil$ScrollPosition(o, pos) {
		o[0].scrollLeft = pos.left;
		o[0].scrollTop = pos.top;
	};
	$tab_DomUtil.focusWithoutScrolling = function DomUtil$FocusWithoutScrolling(focusMethod, scrollNode) {
		if (ss.isNullOrUndefined(scrollNode) || scrollNode.length === 0) {
			focusMethod();
		}
		else {
			scrollNode.attr($tab_DomUtil.$testWaitAttributeName, '');
			window.setTimeout(function() {
				var scrollPos = $tab_DomUtil.getScrollPosition(scrollNode);
				focusMethod();
				$tab_DomUtil.scrollPosition(scrollNode, scrollPos);
				scrollNode.removeAttr($tab_DomUtil.$testWaitAttributeName);
			}, 200);
		}
	};
	$tab_DomUtil.roomAroundPosition = function DomUtil$RoomAroundPosition(p) {
		var roomAbove = p.top - window.pageYOffset;
		var roomBelow = window.pageYOffset + window.innerHeight - p.top;
		var roomLeft = p.left - window.pageXOffset;
		var roomRight = window.pageXOffset + window.innerWidth - p.left;
		return { roomAbove: roomAbove, roomBelow: roomBelow, roomLeft: roomLeft, roomRight: roomRight };
	};
	$tab_DomUtil.getElementRelativePosition = function DomUtil$GetElementRelativePosition(e, p) {
		if (ss.isNullOrUndefined(p)) {
			p = e.parent();
		}
		var ep = e.offset();
		var pp = p.offset();
		return { x: $tab_DoubleUtil.roundToInt(ep.left) - $tab_DoubleUtil.roundToInt(pp.left), y: $tab_DoubleUtil.roundToInt(ep.top) - $tab_DoubleUtil.roundToInt(pp.top) };
	};
	$tab_DomUtil.parseWidthFromStyle = function DomUtil$ParseWidthFromStyle(style) {
		if (ss.isValue(style) && !$tab_MiscUtil.isNullOrEmpty$3(style.width)) {
			return parseInt(style.width);
		}
		return Number.NaN;
	};
	$tab_DomUtil.parseHeightFromStyle = function DomUtil$ParseHeightFromStyle(style) {
		if (ss.isValue(style) && !$tab_MiscUtil.isNullOrEmpty$3(style.height)) {
			return parseInt(style.height);
		}
		return Number.NaN;
	};
	$tab_DomUtil.createNamespacedEventName = function DomUtil$CreateNamespacedEventName(eventName, eventNamespace) {
		if (ss.isValue(eventNamespace)) {
			return eventName + eventNamespace;
		}
		return eventName.toString();
	};
	$tab_DomUtil.stopPropagationOfInputEvents = function DomUtil$StopPropagationOfInputEvents(o, eventNamespace) {
		var stopPropagation = function(e) {
			e.stopPropagation();
		};
		$tab_DomUtil.handleInputEvents(o, eventNamespace, stopPropagation);
	};
	$tab_DomUtil.handleInputEvents = function DomUtil$HandleInputEvents(o, eventNamespace, handler) {
		o.on($tab_DomUtil.createNamespacedEventName('touchstart', eventNamespace), handler).on($tab_DomUtil.createNamespacedEventName('touchcancel', eventNamespace), handler).on($tab_DomUtil.createNamespacedEventName('touchend', eventNamespace), handler).on($tab_DomUtil.createNamespacedEventName('touchmove', eventNamespace), handler).on($tab_DomUtil.createNamespacedEventName('click', eventNamespace), handler).on($tab_DomUtil.createNamespacedEventName('mousedown', eventNamespace), handler).on($tab_DomUtil.createNamespacedEventName('mousemove', eventNamespace), handler).on($tab_DomUtil.createNamespacedEventName('mouseup', eventNamespace), handler);
	};
	$tab_DomUtil.isFocusableTextElement = function DomUtil$IsFocusableTextElement(domElement) {
		if (ss.isValue(domElement) && ss.isValue(domElement.tagName)) {
			var targetTagName = domElement.tagName.toLowerCase();
			if (targetTagName === 'textarea' || targetTagName === 'input' || targetTagName === 'select') {
				return true;
			}
		}
		return false;
	};
	$tab_DomUtil.isCheckboxElement = function DomUtil$IsCheckboxElement(domElement) {
		if (ss.isValue(domElement) && ss.isValue(domElement.tagName)) {
			var targetTagName = domElement.tagName.toLowerCase();
			var typeAttributeValue = $(domElement).attr('type');
			if (targetTagName === 'input' && typeAttributeValue === 'checkbox') {
				return true;
			}
		}
		return false;
	};
	$tab_DomUtil.handleTouchEvents = function DomUtil$HandleTouchEvents(domElement) {
		if ($tab_DomUtil.isCheckboxElement(domElement)) {
			return false;
		}
		if ($tab_DomUtil.isFocusableTextElement(domElement)) {
			return false;
		}
		return true;
	};
	$tab_DomUtil.setCapture = function DomUtil$SetCapture(e, retargetToElement) {
		if (!BrowserSupport.BrowserSupport.MouseCapture()) {
			return;
		}
		e.setCapture(retargetToElement);
	};
	$tab_DomUtil.releaseCapture = function DomUtil$ReleaseCapture() {
		if (!BrowserSupport.BrowserSupport.MouseCapture()) {
			return;
		}
		document.releaseCapture();
	};
	$tab_DomUtil.blur = function DomUtil$Blur() {
		var activeElem = document.activeElement;
		if (ss.isValue(activeElem) && !ss.referenceEquals(activeElem, $tab_DomUtil.get_documentBody()) && typeof(activeElem['blur']) === 'function') {
			activeElem.blur();
		}
	};
	$tab_DomUtil.$convertCssToInt = function DomUtil$ConvertCssToInt(cssValue, defaultValue) {
		var x = parseInt(cssValue, 10);
		return (isNaN(x) ? defaultValue : x);
	};
	$tab_DomUtil.getSizeFromCssPixelProperty = function DomUtil$GetSizeFromCssPixelProperty(element, propertyName) {
		var strValue = element.css(propertyName);
		return $tab_DomUtil.$convertCssToInt(strValue, 0);
	};
	$tab_DomUtil.$setOuterWidth = function DomUtil$SetOuterWidth(computedStyle, outerWidth, element) {
		var marginLeft = $tab_DomUtil.$convertCssToInt(computedStyle.marginLeft, 0);
		var borderLeft = $tab_DomUtil.$convertCssToInt(computedStyle.borderLeftWidth, 0);
		var paddingLeft = $tab_DomUtil.$convertCssToInt(computedStyle.paddingLeft, 0);
		var paddingRight = $tab_DomUtil.$convertCssToInt(computedStyle.paddingRight, 0);
		var borderRight = $tab_DomUtil.$convertCssToInt(computedStyle.borderRightWidth, 0);
		var marginRight = $tab_DomUtil.$convertCssToInt(computedStyle.marginRight, 0);
		var newVal = Math.max(outerWidth - marginLeft - borderLeft - paddingLeft - paddingRight - borderRight - marginRight, 0);
		element.style.width = newVal + 'px';
	};
	$tab_DomUtil.$setOuterHeight = function DomUtil$SetOuterHeight(computedStyle, outerHeight, element) {
		var marginTop = $tab_DomUtil.$convertCssToInt(computedStyle.marginTop, 0);
		var borderTop = $tab_DomUtil.$convertCssToInt(computedStyle.borderTopWidth, 0);
		var paddingTop = $tab_DomUtil.$convertCssToInt(computedStyle.paddingTop, 0);
		var paddingBottom = $tab_DomUtil.$convertCssToInt(computedStyle.paddingBottom, 0);
		var borderBottom = $tab_DomUtil.$convertCssToInt(computedStyle.borderBottomWidth, 0);
		var marginBottom = $tab_DomUtil.$convertCssToInt(computedStyle.marginBottom, 0);
		var newVal = Math.max(outerHeight - marginTop - borderTop - paddingTop - paddingBottom - borderBottom - marginBottom, 0);
		element.style.height = newVal + 'px';
	};
	$tab_DomUtil.$setMarginSizeJQ = function DomUtil$SetMarginSizeJQ(computedStyle, s, element) {
		if (s.w >= 0) {
			$tab_DomUtil.$setOuterWidth(computedStyle, s.w, element);
		}
		if (s.h >= 0) {
			$tab_DomUtil.$setOuterHeight(computedStyle, s.h, element);
		}
	};
	$tab_DomUtil.$parseZIndexProperty = function DomUtil$ParseZIndexProperty(o) {
		$tab_Param.verifyValue(o, 'o');
		var zindexProperty = o.css('z-index');
		if (_.isNumber(zindexProperty)) {
			return ss.unbox(ss.cast(zindexProperty, ss.Int32));
		}
		if (_.isString(zindexProperty)) {
			if (!ss.isNullOrEmptyString(ss.cast(zindexProperty, String)) && ss.cast(zindexProperty, String) !== 'auto' && ss.cast(zindexProperty, String) !== 'inherits') {
				return parseInt(ss.cast(zindexProperty, String), 10);
			}
		}
		return 0;
	};
	$tab_DomUtil.makeHtmlSafeId = function DomUtil$MakeHtmlSafeId(value) {
		return ss.replaceAllString(encodeURIComponent(value), '.', 'dot');
	};
	$tab_DomUtil.setSelectionRangeOnInput = function DomUtil$SetSelectionRangeOnInput(inputElement, selectionStart, selectionEnd) {
		if (BrowserSupport.BrowserSupport.SetSelectionRange()) {
			try {
				inputElement.setSelectionRange(selectionStart, selectionEnd);
			}
			catch ($t1) {
			}
		}
	};
	$tab_DomUtil.selectAllInputText = function DomUtil$SelectAllInputText(inputElement) {
		try {
			if (BrowserSupport.BrowserSupport.SetSelectionRange()) {
				inputElement.get(0).setSelectionRange(0, inputElement.val().length);
			}
			else {
				inputElement.select();
			}
		}
		catch ($t1) {
		}
	};
	$tab_DomUtil.setCursorPosition = function DomUtil$SetCursorPosition(input, pos) {
		if (typeof(input['createTextRange']) === 'function') {
			var rng = (input.createTextRange ? input.createTextRange() : null);
			rng.move('character', pos);
			rng.select();
			rng.scrollIntoView();
			input.focus();
		}
		else if (BrowserSupport.BrowserSupport.IsSafari() && BrowserSupport.BrowserSupport.SetSelectionRange()) {
			input.focus();
			input.setSelectionRange(pos, pos);
		}
		else {
			input.blur();
			input.selectionStart = input.selectionEnd = pos;
			input.focus();
		}
	};
	$tab_DomUtil.replaceSelection = function DomUtil$ReplaceSelection(input, text) {
		var oldVal = input.value;
		var prefix = oldVal.substr(0, input.selectionStart);
		var suffix = oldVal.substring(input.selectionEnd);
		var newCursorPos = input.selectionStart + text.length;
		input.value = prefix + text + suffix;
		$tab_DomUtil.setCursorPosition(input, newCursorPos);
	};
	$tab_DomUtil.setNativeTooltip = function DomUtil$SetNativeTooltip(obj, tooltipText) {
		var empty = ss.isNullOrEmptyString(tooltipText);
		if (empty) {
			obj.removeAttr('title');
		}
		else {
			obj.attr('title', tooltipText);
		}
		if (tsConfig.is_mobile) {
			obj.children('.tab-mobileTooltip').remove();
			if (!empty) {
				var tooltipDiv = $("<div class='tab-mobileTooltip'/>").text(tooltipText);
				obj.append(tooltipDiv);
			}
		}
	};
	$tab_DomUtil.nodeHasTextSelection = function DomUtil$NodeHasTextSelection(node) {
		var windowSelection = window.getSelection();
		for (var ii = windowSelection.rangeCount - 1; ii >= 0; --ii) {
			var range = windowSelection.getRangeAt(ii);
			if (ss.referenceEquals(node, range.startContainer) || node.contains(range.startContainer) || ss.referenceEquals(node, range.endContainer) || node.contains(range.endContainer)) {
				return true;
			}
		}
		return false;
	};
	$tab_DomUtil.generateUniqueId = function DomUtil$GenerateUniqueId() {
		return 'tab-ui-id-' + $tab_DomUtil.$uniqueId++;
	};
	$tab_DomUtil.getIds = function DomUtil$GetIds(collection) {
		if (ss.isNullOrUndefined(collection)) {
			return [];
		}
		return collection.map(function(index, element) {
			return element.id;
		}).get();
	};
	$tab_DomUtil.asIDSelector = function DomUtil$AsIDSelector(selector) {
		return '#' + selector;
	};
	$tab_DomUtil.asClassSelector = function DomUtil$AsClassSelector(selector) {
		return '.' + selector;
	};
	$tab_DomUtil.toMsString = function DomUtil$ToMsString(value) {
		return value + 'ms';
	};
	$tab_DomUtil.toPoint = function DomUtil$ToPoint(pos) {
		return { x: ss.Int32.trunc(pos.left), y: ss.Int32.trunc(pos.top) };
	};
	global.tab.DomUtil = $tab_DomUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.DoubleRectXYUtil
	var $tab_DoubleRectXYUtil = function() {
	};
	$tab_DoubleRectXYUtil.__typeName = 'tab.DoubleRectXYUtil';
	$tab_DoubleRectXYUtil.constructDoubleRectXY = function DoubleRectXYUtil$ConstructDoubleRectXY(left, top, right, bottom) {
		return { x: left, y: top, w: right - left, h: bottom - top };
	};
	$tab_DoubleRectXYUtil.isEmpty = function DoubleRectXYUtil$IsEmpty(r) {
		if (!ss.isValue(r)) {
			tab.Log.get(r).warn('Rect should not be empty when testing IsEmpty', []);
			return true;
		}
		return r.w === 0 || r.h === 0;
	};
	$tab_DoubleRectXYUtil.isEqual = function DoubleRectXYUtil$IsEqual(r1, r2) {
		return r1.x === r2.x && r1.y === r2.y && r1.w === r2.w && r1.h === r2.h;
	};
	$tab_DoubleRectXYUtil.isNull = function DoubleRectXYUtil$IsNull(r) {
		return r.x === 0 && r.y === 0 && r.w === 0 && r.h === 0;
	};
	$tab_DoubleRectXYUtil.inRect = function DoubleRectXYUtil$InRect(r, p) {
		return p.x >= r.x && p.x < r.x + r.w && p.y >= r.y && p.y < r.y + r.h;
	};
	$tab_DoubleRectXYUtil.inRect$1 = function DoubleRectXYUtil$InRect(rx, ry, rw, rh, px, py) {
		return px >= rx && px < rx + rw && py >= ry && py < ry + rh;
	};
	$tab_DoubleRectXYUtil.intersectsWith = function DoubleRectXYUtil$IntersectsWith(r1, r2) {
		return !(r2.x + r2.w < r1.x || r2.y + r2.h < r1.y || r2.x > r1.x + r1.w || r2.y > r1.y + r1.h);
	};
	$tab_DoubleRectXYUtil.outsetRect = function DoubleRectXYUtil$OutsetRect(r, dx, dy) {
		return { x: r.x - dx, y: r.y - dy, w: r.w + dx + dx, h: r.h + dy + dy };
	};
	$tab_DoubleRectXYUtil.outsetRectInPlace = function DoubleRectXYUtil$OutsetRectInPlace(r, dx, dy) {
		r.x -= dx;
		r.y -= dy;
		r.w += 2 * dx;
		r.h += 2 * dy;
	};
	$tab_DoubleRectXYUtil.toEncompassingRectXY = function DoubleRectXYUtil$ToEncompassingRectXY(rect) {
		var minX = Math.floor(rect.x);
		var minY = Math.floor(rect.y);
		var maxX = Math.ceil(rect.x + rect.w);
		var maxY = Math.ceil(rect.y + rect.h);
		return { x: minX, y: minY, w: maxX - minX, h: maxY - minY };
	};
	global.tab.DoubleRectXYUtil = $tab_DoubleRectXYUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.DoubleUtil
	var $tab_DoubleUtil = function() {
	};
	$tab_DoubleUtil.__typeName = 'tab.DoubleUtil';
	$tab_DoubleUtil.get_$log = function DoubleUtil$get_Log() {
		return tab.Logger.lazyGetLogger($tab_DoubleUtil);
	};
	$tab_DoubleUtil.isApproximatelyEqual = function DoubleUtil$IsApproximatelyEqual(d1, d2) {
		if (Math.abs(d1 - d2) < $tab_DoubleUtil.epsilon) {
			return true;
		}
		if (d1 === 0) {
			return false;
		}
		var intermediate = d2 / d1;
		if ($tab_DoubleUtil.$lowerBound <= intermediate && intermediate <= $tab_DoubleUtil.$upperBound) {
			return true;
		}
		return false;
	};
	$tab_DoubleUtil.isApproximatelyZero = function DoubleUtil$IsApproximatelyZero(d) {
		return $tab_DoubleUtil.isApproximatelyEqual(0, d);
	};
	$tab_DoubleUtil.isLessThanAndNotApproximatelyEqual = function DoubleUtil$IsLessThanAndNotApproximatelyEqual(d1, d2) {
		return d1 < d2 && !$tab_DoubleUtil.isApproximatelyEqual(d1, d2);
	};
	$tab_DoubleUtil.isLessThanOrApproximatelyEqual = function DoubleUtil$IsLessThanOrApproximatelyEqual(d1, d2) {
		return d1 < d2 || $tab_DoubleUtil.isApproximatelyEqual(d1, d2);
	};
	$tab_DoubleUtil.isGreaterThanAndNotApproximatelyEqual = function DoubleUtil$IsGreaterThanAndNotApproximatelyEqual(d1, d2) {
		return d1 > d2 && !$tab_DoubleUtil.isApproximatelyEqual(d1, d2);
	};
	$tab_DoubleUtil.isGreaterThanOrApproximatelyEqual = function DoubleUtil$IsGreaterThanOrApproximatelyEqual(d1, d2) {
		return d1 > d2 || $tab_DoubleUtil.isApproximatelyEqual(d1, d2);
	};
	$tab_DoubleUtil.sigFigs = function DoubleUtil$SigFigs(n, numSigFigs) {
		if (n === 0 || numSigFigs === 0) {
			$tab_DoubleUtil.get_$log().warn('Neither the input nor the number of significant figures can be 0', []);
			return n;
		}
		var mult = Math.pow(10, numSigFigs - Math.floor(Math.log(Math.abs(n)) / Math.LN10) - 1);
		return ss.round(n * mult) / mult;
	};
	$tab_DoubleUtil.roundToInt = function DoubleUtil$RoundToInt(value) {
		return ss.round(value);
	};
	$tab_DoubleUtil.parseDouble = function DoubleUtil$ParseDouble(s) {
		var val = parseFloat(s);
		return (isFinite(val) ? val : null);
	};
	$tab_DoubleUtil.tryParseDouble = function DoubleUtil$TryParseDouble(s, defaultValue) {
		var val = parseFloat(s);
		if (isNaN(val) || !isFinite(val)) {
			return defaultValue;
		}
		return val;
	};
	$tab_DoubleUtil.isValidDouble = function DoubleUtil$IsValidDouble(s) {
		if (ss.isNullOrEmptyString(s)) {
			return false;
		}
		return $.isNumeric(s);
	};
	$tab_DoubleUtil.parse64BitInteger = function DoubleUtil$Parse64BitInteger(s) {
		var parsed = {};
		if (!ss.Int32.tryParse(s, parsed)) {
			return null;
		}
		var validDouble = $tab_DoubleUtil.parseValidDouble(s);
		if (ss.Nullable$1.gt(validDouble, $tab_DoubleUtil.$longMaxValue) || ss.Nullable$1.lt(validDouble, $tab_DoubleUtil.$longMinValue)) {
			return null;
		}
		return parsed.$;
	};
	$tab_DoubleUtil.isValid32BitInteger = function DoubleUtil$IsValid32BitInteger(s) {
		if (ss.isNullOrEmptyString(s)) {
			return false;
		}
		var parsed = $tab_DoubleUtil.parse64BitInteger(s);
		if (ss.isNullOrUndefined(parsed)) {
			return false;
		}
		return ss.Nullable$1.le(parsed, 2147483647) && ss.Nullable$1.ge(parsed, -2147483648);
	};
	$tab_DoubleUtil.isValid64BitInteger = function DoubleUtil$IsValid64BitInteger(s) {
		if (ss.isNullOrEmptyString(s)) {
			return false;
		}
		var parsed = $tab_DoubleUtil.parse64BitInteger(s);
		if (ss.isNullOrUndefined(parsed)) {
			return false;
		}
		return true;
	};
	$tab_DoubleUtil.parseValidDouble = function DoubleUtil$ParseValidDouble(s) {
		if (ss.isNullOrEmptyString(s)) {
			return Number.NaN;
		}
		if (!$tab_DoubleUtil.isValidDouble(s)) {
			return Number.NaN;
		}
		return parseFloat(s);
	};
	$tab_DoubleUtil.multiplyBy100 = function DoubleUtil$MultiplyBy100(num) {
		return num * 1000 / 10;
	};
	$tab_DoubleUtil.truncateTwoDecimalPlaces = function DoubleUtil$TruncateTwoDecimalPlaces(num) {
		return ss.Int32.trunc($tab_DoubleUtil.multiplyBy100(num)) / 100;
	};
	$tab_DoubleUtil.roundTwoDecimalPlaces = function DoubleUtil$RoundTwoDecimalPlaces(num) {
		return ss.round($tab_DoubleUtil.multiplyBy100(num)) / 100;
	};
	global.tab.DoubleUtil = $tab_DoubleUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.ErrorTrace
	var $tab_ErrorTrace = function() {
	};
	$tab_ErrorTrace.__typeName = 'tab.ErrorTrace';
	$tab_ErrorTrace.install = function ErrorTrace$Install() {
		var enabled = tsConfig.clientErrorReportingLevel;
		if (!ss.isNullOrEmptyString(enabled)) {
			if (enabled === 'debug') {
				$tab_ErrorTrace.$getStack = true;
			}
		}
		$tab_ErrorTrace.$extendToAsynchronousCallback('setTimeout');
		$tab_ErrorTrace.$extendToAsynchronousCallback('setInterval');
	};
	$tab_ErrorTrace.wrap = function ErrorTrace$Wrap(func) {
		return function() {
			try {
				return func.apply(this, Array.prototype.slice.call(arguments));
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				$tab_ErrorTrace.report(e);
				throw $t1;
			}
		};
	};
	$tab_ErrorTrace.$extendToAsynchronousCallback = function ErrorTrace$ExtendToAsynchronousCallback(functionName) {
		var originalFunction = window[functionName];
		var callback = function() {
			var args = ss.arrayClone(Array.prototype.slice.call(arguments));
			var originalCallback = args[0];
			if (ss.isInstanceOfType(originalCallback, Function)) {
				args[0] = $tab_ErrorTrace.wrap(originalCallback);
			}
			return originalFunction.apply(this, args);
		};
		window[functionName] = callback;
	};
	$tab_ErrorTrace.windowOnError = function ErrorTrace$WindowOnError(message, url, lineNo, column, error) {
		var locations = $tab_$StackTraceParser.$parseJsErrorForStackLines(ss.cast(error, Error));
		var stack = new $tab_StackTrace('onError', message, 'window.onError', locations);
		$tab_ErrorTrace.$queuedTraces.push(stack);
		if (ss.isValue($tab_ErrorTrace.$oldOnErrorHandler)) {
			$tab_ErrorTrace.$oldOnErrorHandler(message, url, lineNo, column, error);
		}
		return false;
	};
	$tab_ErrorTrace.getStackTraceFor = function ErrorTrace$GetStackTraceFor(e) {
		var defaultTrace = new $tab_StackTrace('stack', $tab_$StackTraceParser.$getExceptionMessage(e), ss.cast(e.name, String), null);
		if ($tab_ErrorTrace.$getStack) {
			var stack = null;
			try {
				stack = $tab_$StackTraceParser.$computeStackTraceFromStackTraceProp(e);
			}
			catch ($t1) {
				if ($tab_ErrorTrace.$shouldReThrow) {
					throw $t1;
				}
			}
			if (ss.isValue(stack)) {
				return stack;
			}
		}
		else {
			return defaultTrace;
		}
		defaultTrace.traceMode = 'failed';
		return defaultTrace;
	};
	$tab_ErrorTrace.hasTraces = function ErrorTrace$HasTraces() {
		return $tab_ErrorTrace.$queuedTraces.length > 0;
	};
	$tab_ErrorTrace.dequeueTraces = function ErrorTrace$DequeueTraces() {
		var traces = $tab_ErrorTrace.$queuedTraces;
		$tab_ErrorTrace.$queuedTraces = [];
		return traces;
	};
	$tab_ErrorTrace.installGlobalHandler = function ErrorTrace$InstallGlobalHandler() {
		if ($tab_ErrorTrace.$onErrorHandlerInstalled || false) {
			return;
		}
		$tab_ErrorTrace.$oldOnErrorHandler = window.onerror;
		window.onerror = $tab_ErrorTrace.windowOnError;
		$tab_ErrorTrace.$onErrorHandlerInstalled = true;
	};
	$tab_ErrorTrace.report = function ErrorTrace$Report(e) {
		var stack = $tab_ErrorTrace.getStackTraceFor(e);
		$tab_ErrorTrace.$queuedTraces.push(stack);
	};
	global.tab.ErrorTrace = $tab_ErrorTrace;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.FeatureFlags
	var $tab_FeatureFlags = function() {
	};
	$tab_FeatureFlags.__typeName = 'tab.FeatureFlags';
	$tab_FeatureFlags.isEnabled = function FeatureFlags$IsEnabled(featureFlagId) {
		if (ss.isValue(tsConfig.features) && ss.keyExists(tsConfig.features, featureFlagId)) {
			return tsConfig.features[featureFlagId];
		}
		if (ss.isValue($tab_FeatureFlags.$defaultValues) && ss.keyExists($tab_FeatureFlags.$defaultValues, featureFlagId)) {
			return $tab_FeatureFlags.$defaultValues[featureFlagId];
		}
		return false;
	};
	$tab_FeatureFlags.setDefaults = function FeatureFlags$SetDefaults(defaults) {
		$tab_FeatureFlags.$defaultValues = defaults;
	};
	global.tab.FeatureFlags = $tab_FeatureFlags;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.FeatureParam
	var $tab_FeatureParam = function() {
	};
	$tab_FeatureParam.__typeName = 'tab.FeatureParam';
	global.tab.FeatureParam = $tab_FeatureParam;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.FeatureParamsLookup
	var $tab_FeatureParamsLookup = function() {
	};
	$tab_FeatureParamsLookup.__typeName = 'tab.FeatureParamsLookup';
	$tab_FeatureParamsLookup.getBool = function FeatureParamsLookup$GetBool(param) {
		if (ss.keyExists($tab_FeatureParamsLookup.$booleanLookUp, param)) {
			return $tab_FeatureParamsLookup.$booleanLookUp[param] || false;
		}
		$tab_FeatureParamsLookup.$logger.error('Requested feature param does not exist in the bool lookup table: %s.', [param.toString()]);
		return false;
	};
	$tab_FeatureParamsLookup.getFloat = function FeatureParamsLookup$GetFloat(param) {
		if (ss.keyExists($tab_FeatureParamsLookup.$floatLookUp, param)) {
			return $tab_FeatureParamsLookup.$floatLookUp[param];
		}
		$tab_FeatureParamsLookup.$logger.error('Requested feature param param not exist in the float lookup table: %s.', [param.toString()]);
		return null;
	};
	$tab_FeatureParamsLookup.getInt = function FeatureParamsLookup$GetInt(param) {
		if (ss.keyExists($tab_FeatureParamsLookup.$intLookUp, param)) {
			return $tab_FeatureParamsLookup.$intLookUp[param];
		}
		$tab_FeatureParamsLookup.$logger.error('Requested feature param does not exist in the int lookup table: %s.', [param.toString()]);
		return null;
	};
	$tab_FeatureParamsLookup.getString = function FeatureParamsLookup$GetString(param) {
		if (ss.keyExists($tab_FeatureParamsLookup.$stringLookUp, param)) {
			return $tab_FeatureParamsLookup.$stringLookUp[param];
		}
		$tab_FeatureParamsLookup.$logger.error('Requested feature param does not exist in the string lookup table: %s.', [param.toString()]);
		return null;
	};
	$tab_FeatureParamsLookup.$registerBooleanFeatureParam = function FeatureParamsLookup$RegisterBooleanFeatureParam(urlParam, paramEnum, defaultValue) {
		$tab_FeatureParamsLookup.$booleanParams.push(paramEnum);
		$tab_FeatureParamsLookup.$stringToEnumLookup[urlParam] = paramEnum;
		$tab_FeatureParamsLookup.$booleanLookUp[paramEnum] = defaultValue;
	};
	$tab_FeatureParamsLookup.$registerIntFeatureParam = function FeatureParamsLookup$RegisterIntFeatureParam(urlParam, paramEnum) {
		$tab_FeatureParamsLookup.$intParams.push(paramEnum);
		$tab_FeatureParamsLookup.$stringToEnumLookup[urlParam] = paramEnum;
		$tab_FeatureParamsLookup.$intLookUp[paramEnum] = null;
	};
	$tab_FeatureParamsLookup.$registerStringFeatureParam = function FeatureParamsLookup$RegisterStringFeatureParam(urlParam, paramEnum) {
		$tab_FeatureParamsLookup.$stringParams.push(paramEnum);
		$tab_FeatureParamsLookup.$stringToEnumLookup[urlParam] = paramEnum;
		$tab_FeatureParamsLookup.$stringLookUp[paramEnum] = null;
	};
	$tab_FeatureParamsLookup.$parseFeatureParamsFromUrl = function FeatureParamsLookup$ParseFeatureParamsFromUrl() {
		var windowSearch = window.self.location.search;
		var cookieParams = ss.coalesce(tab.CookieHelper.getValueForCookie('featureParams'), '');
		var expandedParameters = (($tab_MiscUtil.isNullOrEmpty$3(windowSearch) || $tab_MiscUtil.isNullOrEmpty$3(cookieParams)) ? (windowSearch + cookieParams) : (windowSearch + '&' + cookieParams));
		var queryParams = tab.UriExtensions.getUriQueryParameters(expandedParameters);
		var $t1 = new ss.ObjectEnumerator(queryParams);
		try {
			while ($t1.moveNext()) {
				var keyValue = $t1.current();
				var key = keyValue.key.toLowerCase();
				var param = 0;
				if (ss.keyExists($tab_FeatureParamsLookup.$stringToEnumLookup, key)) {
					param = $tab_FeatureParamsLookup.$stringToEnumLookup[key];
				}
				else {
					continue;
				}
				if (keyValue.value.length > 0) {
					var strValue = keyValue.value[0];
					if (ss.contains($tab_FeatureParamsLookup.$booleanParams, param)) {
						var value = strValue.toLowerCase() === 'true';
						$tab_FeatureParamsLookup.$booleanLookUp[param] = value;
					}
					else if (ss.contains($tab_FeatureParamsLookup.$floatParams, param)) {
						var value1 = parseFloat(strValue);
						$tab_FeatureParamsLookup.$floatLookUp[param] = value1;
					}
					else if (ss.contains($tab_FeatureParamsLookup.$intParams, param)) {
						var value2 = parseInt(strValue);
						$tab_FeatureParamsLookup.$intLookUp[param] = value2;
					}
					else if (ss.contains($tab_FeatureParamsLookup.$stringParams, param)) {
						$tab_FeatureParamsLookup.$stringLookUp[param] = strValue;
					}
					else {
						$tab_FeatureParamsLookup.$logger.warn('Unknown type for param: %s.', [key]);
						continue;
					}
				}
				else {
					$tab_FeatureParamsLookup.$logger.warn('No values found for param: %s.', [key]);
					continue;
				}
			}
		}
		finally {
			$t1.dispose();
		}
	};
	global.tab.FeatureParamsLookup = $tab_FeatureParamsLookup;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.FifoCache
	var $tab_FifoCache = function(size) {
		this.$size = 0;
		this.$keyArray = null;
		this.cl = {};
		this.$nextIndex = 0;
		this.$size = size;
		this.$keyArray = new Array(size);
	};
	$tab_FifoCache.__typeName = 'tab.FifoCache';
	global.tab.FifoCache = $tab_FifoCache;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.FontUtil
	var $tab_FontUtil = function() {
	};
	$tab_FontUtil.__typeName = 'tab.FontUtil';
	$tab_FontUtil.createFallbackCanvasFontName = function FontUtil$CreateFallbackCanvasFontName(origFontName) {
		var fallbackName = $tab_FontUtil.$fallbackFontCache.cl[origFontName];
		if (ss.isValue(fallbackName)) {
			return fallbackName;
		}
		var fontNameWithoutQuotes = ss.trimString(origFontName, [39, 34]);
		var nameParts = fontNameWithoutQuotes.split(' ');
		var fallbackNames = [];
		for (var ii = nameParts.length; ii > 0; --ii) {
			fallbackNames.push($tab_FontUtil.addQuotationMarks(nameParts.join(' '), true));
			nameParts.pop();
		}
		$tab_FontUtil.addDefaultFontForTableau(fallbackNames);
		var fallbackFont = fallbackNames.join(', ');
		$tab_FontUtil.$fallbackFontCache.add(origFontName, fallbackFont);
		return fallbackFont;
	};
	$tab_FontUtil.addQuotationMarks = function FontUtil$AddQuotationMarks(fontName, useSingleQuote) {
		if ($tab_MiscUtil.isNullOrEmpty$3(fontName)) {
			return (useSingleQuote ? "''" : '""');
		}
		var fontNameLastChar = fontName.length - 1;
		if (fontName.charCodeAt(0) === 39 && fontName.charCodeAt(fontNameLastChar) === 39 || fontName.charCodeAt(0) === 34 && fontName.charCodeAt(fontNameLastChar) === 34) {
			return fontName;
		}
		if (fontName.indexOf(' ') !== -1) {
			var quote = (useSingleQuote ? "'" : '"');
			fontName = quote + fontName + quote;
		}
		return fontName;
	};
	$tab_FontUtil.addDefaultFontForTableau = function FontUtil$AddDefaultFontForTableau(fontFamilies) {
		var tableauName = 'tableau';
		var needsFallback = false;
		var length = fontFamilies.length;
		for (var i = 0; i < length; i++) {
			var currentFont = fontFamilies[i].trim();
			for (var j = 0; j < 2; j++) {
				if (ss.startsWithString(currentFont, "'") || ss.startsWithString(currentFont, '"')) {
					currentFont = currentFont.substr(1);
				}
			}
			if (ss.compareStrings(currentFont.substr(0, tableauName.length), tableauName, true) === 0) {
				needsFallback = true;
				break;
			}
		}
		if (needsFallback) {
			fontFamilies.push($tab_FontUtil.tableauFallback);
			fontFamilies.push($tab_FontUtil.sansSerifFallback);
		}
	};
	global.tab.FontUtil = $tab_FontUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.GestureModelSettings
	var $tab_GestureModelSettings = function() {
	};
	$tab_GestureModelSettings.__typeName = 'tab.GestureModelSettings';
	$tab_GestureModelSettings.get_newModelEnabled = function GestureModelSettings$get_NewModelEnabled() {
		return $tab_FeatureParamsLookup.getBool(55) || $tab_FeatureFlags.isEnabled('TouchSmoothTooltips');
	};
	$tab_GestureModelSettings.get_onboardingEnabled = function GestureModelSettings$get_OnboardingEnabled() {
		return $tab_FeatureParamsLookup.getBool(56) || $tab_FeatureFlags.isEnabled('SmoothTooltipsOnboarding');
	};
	$tab_GestureModelSettings.get_currentGestureModelVersion = function GestureModelSettings$get_CurrentGestureModelVersion() {
		return ($tab_GestureModelSettings.get_newModelEnabled() ? 'v2' : 'v1');
	};
	global.tab.GestureModelSettings = $tab_GestureModelSettings;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.GestureModelVersion
	var $tab_GestureModelVersion = function() {
	};
	$tab_GestureModelVersion.__typeName = 'tab.GestureModelVersion';
	global.tab.GestureModelVersion = $tab_GestureModelVersion;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.HistoryUtil
	var $tab_HistoryUtil = function() {
	};
	$tab_HistoryUtil.__typeName = 'tab.HistoryUtil';
	$tab_HistoryUtil.pushState = function HistoryUtil$PushState(window, state, title, url) {
		if (BrowserSupport.BrowserSupport.HistoryApi()) {
			try {
				window.history.pushState(state, title, url);
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				tab.Logger.getLogger($tab_HistoryUtil, null).warn('Error calling history.pushState', [e]);
			}
		}
	};
	$tab_HistoryUtil.replaceState = function HistoryUtil$ReplaceState(window, state, title, url) {
		if (BrowserSupport.BrowserSupport.HistoryApi()) {
			try {
				window.history.replaceState(state, title, url);
			}
			catch ($t1) {
				var e = ss.Exception.wrap($t1);
				tab.Logger.getLogger($tab_HistoryUtil, null).warn('Error calling history.replaceState', [e]);
			}
		}
	};
	global.tab.HistoryUtil = $tab_HistoryUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.HttpResponseCodes
	var $tab_HttpResponseCodes = function() {
	};
	$tab_HttpResponseCodes.__typeName = 'tab.HttpResponseCodes';
	global.tab.HttpResponseCodes = $tab_HttpResponseCodes;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.IAppendableView
	var $tab_IAppendableView = function() {
	};
	$tab_IAppendableView.__typeName = 'tab.IAppendableView';
	global.tab.IAppendableView = $tab_IAppendableView;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.IBrowserViewport
	var $tab_IBrowserViewport = function() {
	};
	$tab_IBrowserViewport.__typeName = 'tab.IBrowserViewport';
	global.tab.IBrowserViewport = $tab_IBrowserViewport;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.ICommonBannerProvider
	var $tab_ICommonBannerProvider = function() {
	};
	$tab_ICommonBannerProvider.__typeName = 'tab.ICommonBannerProvider';
	global.tab.ICommonBannerProvider = $tab_ICommonBannerProvider;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.ICommonDialogProvider
	var $tab_ICommonDialogProvider = function() {
	};
	$tab_ICommonDialogProvider.__typeName = 'tab.ICommonDialogProvider';
	global.tab.ICommonDialogProvider = $tab_ICommonDialogProvider;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Bootstrap.InstrumentationTools
	var $tab_InstrumentationTools = function() {
	};
	$tab_InstrumentationTools.__typeName = 'tab.InstrumentationTools';
	$tab_InstrumentationTools.isArray = function InstrumentationTools$IsArray(o) {
		return ss.isInstanceOfType(o, Array);
	};
	$tab_InstrumentationTools.isTypedArray = function InstrumentationTools$IsTypedArray(o) {
		return ss.isInstanceOfType(o, Uint8Array) || ss.isInstanceOfType(o, Uint16Array) || ss.isInstanceOfType(o, Uint32Array) || ss.isInstanceOfType(o, Int32Array) || ss.isInstanceOfType(o, Float32Array) || ss.isInstanceOfType(o, Float64Array);
	};
	global.tab.InstrumentationTools = $tab_InstrumentationTools;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.IntegerRange
	var $tab_IntegerRange = function(from, to) {
		this.$from = 0;
		this.$to = 0;
		this.$from = from;
		this.$to = to;
	};
	$tab_IntegerRange.__typeName = 'tab.IntegerRange';
	$tab_IntegerRange.itemToTileRange = function IntegerRange$ItemToTileRange(itemRange, tileSize) {
		var tileRange = new $tab_IntegerRange(0, 0);
		tileRange.set_from(Math.floor(itemRange.get_from() / tileSize));
		tileRange.set_to(Math.floor(itemRange.get_to() / tileSize));
		return tileRange;
	};
	$tab_IntegerRange.pixelToItemRange = function IntegerRange$PixelToItemRange(pixelRange, itemHeight) {
		var itemRange = new $tab_IntegerRange(0, 0);
		itemRange.set_from(Math.floor(pixelRange.get_from() / itemHeight));
		itemRange.set_to(Math.floor(pixelRange.get_to() / itemHeight));
		return itemRange;
	};
	$tab_IntegerRange.pixelToTileRange = function IntegerRange$PixelToTileRange(pixelRange, itemHeight, tileSize) {
		return $tab_IntegerRange.itemToTileRange($tab_IntegerRange.pixelToItemRange(pixelRange, itemHeight), tileSize);
	};
	$tab_IntegerRange.isEqual = function IntegerRange$IsEqual(range1, range2) {
		return ss.isValue(range1) && ss.isValue(range2) && range1.get_to() === range2.get_to() && range1.get_from() === range2.get_from();
	};
	$tab_IntegerRange.union = function IntegerRange$Union(range1, range2) {
		if (ss.isNullOrUndefined(range1)) {
			return range2;
		}
		if (ss.isNullOrUndefined(range2)) {
			return range1;
		}
		var combinedRange = new $tab_IntegerRange(0, 0);
		combinedRange.set_from(Math.min(range1.get_from(), range2.get_from()));
		combinedRange.set_to(Math.max(range1.get_to(), range2.get_to()));
		return combinedRange;
	};
	global.tab.IntegerRange = $tab_IntegerRange;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.IView
	var $tab_IView$1 = function(TViewModel) {
		var $type = function() {
		};
		ss.registerGenericInterfaceInstance($type, $tab_IView$1, [TViewModel], { get_viewModel: null, get_rootElement: null }, function() {
			return [ss.IDisposable, $tab_IAppendableView];
		});
		ss.setMetadata($type, { variance: [1] });
		return $type;
	};
	$tab_IView$1.__typeName = 'tab.IView$1';
	ss.initGenericInterface($tab_IView$1, $asm, 1);
	global.tab.IView$1 = $tab_IView$1;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.IViewModel
	var $tab_IViewModel = function() {
	};
	$tab_IViewModel.__typeName = 'tab.IViewModel';
	global.tab.IViewModel = $tab_IViewModel;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.IWidget
	var $tab_IWidget = function() {
	};
	$tab_IWidget.__typeName = 'tab.IWidget';
	global.tab.IWidget = $tab_IWidget;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.ListExtensions
	var $tab_ListExtensions = function() {
	};
	$tab_ListExtensions.__typeName = 'tab.ListExtensions';
	$tab_ListExtensions.where = function(T) {
		return function ListExtensions$Where(list, filterFunc) {
			var resultList = [];
			var $t1 = ss.getEnumerator(list);
			try {
				while ($t1.moveNext()) {
					var item = $t1.current();
					if (filterFunc(item)) {
						resultList.push(item);
					}
				}
			}
			finally {
				$t1.dispose();
			}
			return resultList;
		};
	};
	$tab_ListExtensions.except = function(T) {
		return function ListExtensions$Except(firstList, secondList) {
			return $tab_ListExtensions.where(T).call(null, firstList, function(item) {
				return !ss.contains(secondList, item);
			});
		};
	};
	$tab_ListExtensions.any = function(T) {
		return function ListExtensions$Any(list, predicate) {
			for (var $t1 = 0; $t1 < list.length; $t1++) {
				var item = list[$t1];
				if (predicate(item)) {
					return true;
				}
			}
			return false;
		};
	};
	global.tab.ListExtensions = $tab_ListExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.LocaleStrings
	var $tab_LocaleStrings = function() {
	};
	$tab_LocaleStrings.__typeName = 'tab.LocaleStrings';
	global.tab.LocaleStrings = $tab_LocaleStrings;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.LoopBreakException
	var $tab_LoopBreakException = function() {
		ss.Exception.call(this);
	};
	$tab_LoopBreakException.__typeName = 'tab.LoopBreakException';
	$tab_LoopBreakException.$ctor1 = function(message) {
		ss.Exception.call(this, message);
	};
	$tab_LoopBreakException.$ctor2 = function(message, e) {
		ss.Exception.call(this, message, e);
	};
	global.tab.LoopBreakException = $tab_LoopBreakException;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.MapUtil
	var $tab_MapUtil = function() {
	};
	$tab_MapUtil.__typeName = 'tab.MapUtil';
	$tab_MapUtil.getZoomFactorForDesiredZoomLevel = function MapUtil$GetZoomFactorForDesiredZoomLevel(currentZoomLevel, desiredZoomLevel) {
		return Math.exp(-(Math.LN2 * (desiredZoomLevel - currentZoomLevel)));
	};
	$tab_MapUtil.allowZoomAtCurrentLevel = function MapUtil$AllowZoomAtCurrentLevel(currentZoomLvl, zoomFactor) {
		return currentZoomLvl + $tab_MapUtil.convertZoomFactorToZoomLevel(zoomFactor) >= 0;
	};
	$tab_MapUtil.convertZoomFactorToZoomLevel = function MapUtil$ConvertZoomFactorToZoomLevel(factor) {
		return -(Math.log(factor) / Math.log(2));
	};
	$tab_MapUtil.allowZoomAtCurrentLevelLeaflet = function MapUtil$AllowZoomAtCurrentLevelLeaflet(currentZoomLvl, netZoomLevelDelta) {
		return currentZoomLvl - netZoomLevelDelta >= 0;
	};
	$tab_MapUtil.getVisiblePixelWidth = function MapUtil$GetVisiblePixelWidth(zoom, numWorlds, tilePixelSize) {
		var oneWorldSize = Math.pow(2, zoom) * tilePixelSize;
		var pixelWidth = Math.floor(numWorlds * oneWorldSize);
		return pixelWidth;
	};
	$tab_MapUtil.getScrollDeltaForZoomFactor = function MapUtil$GetScrollDeltaForZoomFactor(zoomFactor) {
		return Math.floor($tab_MapUtil.$scrollDeltaMultiplier * (Math.log(zoomFactor) / Math.log(2)));
	};
	$tab_MapUtil.getLeafletZoomOffsetForTileSize = function MapUtil$GetLeafletZoomOffsetForTileSize(tileSize) {
		return ((tileSize === $tab_MapUtil.$mapboxGLTileSize) ? -1 : 0);
	};
	$tab_MapUtil.calculateZoomFactor = function MapUtil$CalculateZoomFactor(scrollWheelDelta) {
		var numDegrees = ss.Int32.div(scrollWheelDelta, 8);
		var numSteps = ss.Int32.div(numDegrees, 15);
		var zoomFactor = 1;
		var exponent = ss.round(Math.log(zoomFactor) / Math.log(2) * 4) / 4 + numSteps / 4;
		zoomFactor = Math.pow(2, exponent);
		return zoomFactor;
	};
	global.tab.MapUtil = $tab_MapUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.CrossBrowserSupport.MapUtility
	var $tab_MapUtility = function() {
	};
	$tab_MapUtility.__typeName = 'tab.MapUtility';
	$tab_MapUtility.forEachWithInterrupt = function(TKey, TValue) {
		return function MapUtility$ForEachWithInterrupt(map, callbackFn) {
			try {
				map.forEach(callbackFn);
			}
			catch ($t1) {
				$t1 = ss.Exception.wrap($t1);
				if (ss.isInstanceOfType($t1, $tab_LoopBreakException)) {
				}
				else {
					throw $t1;
				}
			}
		};
	};
	$tab_MapUtility.forEachWithInterrupt$1 = function(TKey, TValue) {
		return function MapUtility$ForEachWithInterrupt(map, callbackFn) {
			try {
				map.forEach(function(value, key) {
					callbackFn(value, key);
				});
			}
			catch ($t1) {
				$t1 = ss.Exception.wrap($t1);
				if (ss.isInstanceOfType($t1, $tab_LoopBreakException)) {
				}
				else {
					throw $t1;
				}
			}
		};
	};
	$tab_MapUtility.createCopy = function(TKey, TValue) {
		return function MapUtility$CreateCopy(source) {
			var result = new Map();
			source.forEach(function(value, key) {
				result.set(key, value);
			});
			return result;
		};
	};
	global.tab.MapUtility = $tab_MapUtility;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.MetricsLogger
	var $tab_MetricsLogger = function() {
		this.$eventBuffer = [];
		this.$logger = null;
		this.$beaconImages = [];
		this.$beaconCleanupTimerId = null;
		this.$bufferProcessTimerId = null;
	};
	$tab_MetricsLogger.__typeName = 'tab.MetricsLogger';
	$tab_MetricsLogger.isLoggerEnabled = function MetricsLogger$IsLoggerEnabled() {
		return tsConfig.metricsReportingEnabled;
	};
	$tab_MetricsLogger.$formatEvent = function MetricsLogger$FormatEvent(evt, verbose) {
		var delimiter = (verbose ? ', ' : ',');
		var strBuilder = new ss.StringBuilder();
		strBuilder.append((verbose ? $tab_MetricsLogger.$debugEventNames[evt.eventType] : evt.eventType.toString()));
		var parameters = evt.parameters;
		var eventDict = parameters;
		if (ss.isValue(parameters.ei)) {
			eventDict = $tab_MiscUtil.cloneObject(eventDict);
			var extraInfoParts = parameters.ei.split(': ');
			if (extraInfoParts.length > 1) {
				var fakeProps = ss.mkdict(extraInfoParts);
				eventDict['p'] = fakeProps;
				delete eventDict['ei'];
			}
		}
		var count = ss.getKeyCount(eventDict);
		if (count > 0) {
			strBuilder.append('=');
			strBuilder.append('{');
			var i = 0;
			var propSeparator = (verbose ? ': ' : ':');
			var $t1 = ss.getEnumerator(Object.keys(eventDict));
			try {
				while ($t1.moveNext()) {
					var key = $t1.current();
					if (key === 'id' && evt.eventType !== 'init') {
						continue;
					}
					if (i++ > 0) {
						strBuilder.append(delimiter);
					}
					strBuilder.append((verbose ? $tab_MetricsLogger.$debugParamNames[key] : key.toString()));
					strBuilder.append(propSeparator);
					var val = eventDict[key];
					$tab_MetricsLogger.$formatValue(strBuilder, val, verbose);
				}
			}
			finally {
				$t1.dispose();
			}
			strBuilder.append('}');
		}
		return strBuilder.toString();
	};
	$tab_MetricsLogger.$formatDictionaryValues = function MetricsLogger$FormatDictionaryValues(strBuilder, dict, verbose) {
		var delimiter = (verbose ? ', ' : ',');
		var propSeparator = (verbose ? ': ' : ':');
		var propCount = ss.getKeyCount(dict);
		var j = 0;
		var $t1 = ss.getEnumerator(Object.keys(dict));
		try {
			while ($t1.moveNext()) {
				var propertyName = $t1.current();
				if (dict.hasOwnProperty(propertyName)) {
					var propertyVal = dict[propertyName];
					strBuilder.append(propertyName);
					strBuilder.append(propSeparator);
					$tab_MetricsLogger.$formatValue(strBuilder, propertyVal, verbose);
					if (++j < propCount) {
						strBuilder.append(delimiter);
					}
				}
			}
		}
		finally {
			$t1.dispose();
		}
	};
	$tab_MetricsLogger.$formatValue = function MetricsLogger$FormatValue(strBuilder, value, verbose) {
		var type = typeof(value);
		if (type === 'number' && Math.floor(ss.unbox(ss.cast(value, Number))) !== ss.unbox(ss.cast(value, Number))) {
			strBuilder.append(ss.unbox(ss.cast(value, Number)).toFixed(1));
		}
		else if (type === 'string') {
			if (verbose || ss.isValue(value) && ss.cast(value, String).indexOf('/') !== -1) {
				var tempBuffer = new ss.StringBuilder();
				tempBuffer.append('"');
				tempBuffer.append(value);
				tempBuffer.append('"');
				if (verbose) {
					strBuilder.append(tempBuffer);
				}
				else {
					strBuilder.append(encodeURIComponent(tempBuffer.toString()));
				}
			}
			else {
				strBuilder.append(encodeURIComponent(ss.cast(value, String)));
			}
		}
		else if ($.isArray(value)) {
			strBuilder.append('[');
			strBuilder.append(value);
			strBuilder.append(']');
		}
		else if (type === 'object') {
			strBuilder.append('{');
			var dict = value;
			$tab_MetricsLogger.$formatDictionaryValues(strBuilder, dict, verbose);
			strBuilder.append('}');
		}
		else {
			strBuilder.append(value);
		}
	};
	global.tab.MetricsLogger = $tab_MetricsLogger;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.MiscUtil
	var $tab_MiscUtil = function() {
	};
	$tab_MiscUtil.__typeName = 'tab.MiscUtil';
	$tab_MiscUtil.get_pathName = function MiscUtil$get_PathName() {
		var window = tabBootstrap.Utility.get_locationWindow();
		return tab.WindowHelper.getLocation(window).pathname;
	};
	$tab_MiscUtil.get_urlPathnameParts = function MiscUtil$get_UrlPathnameParts() {
		var pathname = $tab_MiscUtil.get_pathName();
		var siteRoot = tsConfig.site_root;
		var index = pathname.indexOf(siteRoot, 0);
		var actualPath = pathname.substr(index + siteRoot.length);
		var pathnameParts = actualPath.split('/');
		var pathnameProps = {};
		pathnameProps[2] = pathnameParts[2];
		pathnameProps[3] = pathnameParts[3];
		pathnameProps[4] = pathnameParts[4];
		return pathnameProps;
	};
	$tab_MiscUtil.shallowEquals = function MiscUtil$ShallowEquals(valueA, valueB) {
		if (ss.referenceEquals(valueA, valueB)) {
			return true;
		}
		if (ss.isNullOrUndefined(valueA) || ss.isNullOrUndefined(valueB)) {
			return false;
		}
		var keysA = Object.keys(valueA);
		var keysB = Object.keys(valueB);
		if (keysA.length !== keysB.length) {
			return false;
		}
		for (var i = 0; i < keysA.length; i++) {
			var key = keysA[i];
			if (!valueB.hasOwnProperty(key) || !ss.referenceEquals(valueA[key], valueB[key])) {
				return false;
			}
		}
		return true;
	};
	$tab_MiscUtil.percentEncode = function MiscUtil$PercentEncode(valueToEncode, unreservedChars) {
		valueToEncode = encodeURIComponent(valueToEncode);
		if (ss.isNullOrUndefined(unreservedChars)) {
			return valueToEncode;
		}
		var sb = new ss.StringBuilder();
		var i = 0;
		while (i < valueToEncode.length) {
			var s = valueToEncode.substr(i, 1);
			if (s === '%') {
				sb.append(valueToEncode.substr(i, 3));
				i += 2;
			}
			else if (!ss.keyExists(unreservedChars, s)) {
				sb.append('%').append(s.charCodeAt(0).toString(16).toUpperCase());
			}
			else {
				sb.append(s);
			}
			i++;
		}
		return sb.toString();
	};
	$tab_MiscUtil.encodeForWG = function MiscUtil$EncodeForWG(valueToEncode) {
		var usernameValidChars = {};
		var addCodes = function(from, to) {
			for (var i = from; i <= to; i++) {
				var s = String.fromCharCode(i);
				usernameValidChars[s] = s;
			}
		};
		addCodes(97, 122);
		addCodes(65, 90);
		addCodes(48, 57);
		addCodes(95, 95);
		addCodes(45, 45);
		valueToEncode = $tab_MiscUtil.percentEncode(valueToEncode, usernameValidChars);
		valueToEncode = $tab_MiscUtil.percentEncode(valueToEncode, null);
		return valueToEncode;
	};
	$tab_MiscUtil.isNullOrUndefined = function MiscUtil$IsNullOrUndefined(args) {
		if (ss.isNullOrUndefined(args)) {
			return true;
		}
		for (var i = 0; i < args.length; i++) {
			if (ss.isNullOrUndefined(args[i])) {
				return true;
			}
		}
		return false;
	};
	$tab_MiscUtil.isNullOrEmpty$2 = function MiscUtil$IsNullOrEmpty(args) {
		if (ss.isNullOrUndefined(args)) {
			return true;
		}
		var dict = args;
		if (ss.isValue(dict['length']) && dict['length'] === 0) {
			return true;
		}
		return false;
	};
	$tab_MiscUtil.isNullOrEmpty$3 = function MiscUtil$IsNullOrEmpty(s) {
		return ss.isNullOrEmptyString(s);
	};
	$tab_MiscUtil.isNullOrEmpty$1 = function MiscUtil$IsNullOrEmpty(list) {
		return ss.isNullOrUndefined(list) || list.length === 0;
	};
	$tab_MiscUtil.isNullOrEmpty = function MiscUtil$IsNullOrEmpty(array) {
		return ss.isNullOrUndefined(array) || array.length === 0;
	};
	$tab_MiscUtil.isValidIndex = function MiscUtil$IsValidIndex(index, arr) {
		return index >= 0 && index < arr.length;
	};
	$tab_MiscUtil.toBoolean = function MiscUtil$ToBoolean(value, defaultIfMissing) {
		var positiveRegex = new RegExp('^(yes|y|true|t|1)$', 'i');
		if ($tab_MiscUtil.isNullOrEmpty$3(value)) {
			return defaultIfMissing;
		}
		var match = value.match(positiveRegex);
		return !$tab_MiscUtil.isNullOrEmpty$2(match);
	};
	$tab_MiscUtil.shouldShowDataTab = function MiscUtil$ShouldShowDataTab() {
		return tsConfig.allow_add_new_datasource && $tab_FeatureFlags.isEnabled('DataToTheWeb') && (!tsConfig.is_mobile || tsConfig.is_mobile && $tab_FeatureFlags.isEnabled('DataToTheWebMobile'));
	};
	$tab_MiscUtil.replaceUriQueryParameters = function MiscUtil$ReplaceUriQueryParameters(uri, parameters) {
		if (ss.getKeyCount(parameters) === 0) {
			return uri;
		}
		var newQueryString = new ss.StringBuilder();
		var first = true;
		var appendSeparator = function() {
			newQueryString.append((first ? '?' : '&'));
			first = false;
		};
		var $t1 = _.keys(parameters);
		for (var $t2 = 0; $t2 < $t1.length; $t2++) {
			var key = $t1[$t2];
			var vals = parameters[key];
			var keyEncoded = encodeURIComponent(key);
			if (ss.isNullOrUndefined(vals) || vals.length === 0) {
				appendSeparator();
				newQueryString.append(keyEncoded);
			}
			else {
				for (var $t3 = 0; $t3 < vals.length; $t3++) {
					var value = vals[$t3];
					appendSeparator();
					newQueryString.append(keyEncoded).append('=').append(encodeURIComponent(value));
				}
			}
		}
		var hash = '';
		var baseUri = '';
		if (uri.length > 0) {
			var indexOfQuery = uri.indexOf('?');
			var indexOfHash = uri.indexOf('#');
			var indexOfEnd = Math.min(((indexOfQuery < 0) ? uri.length : indexOfQuery), ((indexOfHash < 0) ? uri.length : indexOfHash));
			baseUri = uri.substr(0, indexOfEnd);
			hash = ((indexOfHash < 0) ? '' : uri.substr(indexOfHash));
		}
		return baseUri + newQueryString + hash;
	};
	$tab_MiscUtil.sanatizeBoolean = function MiscUtil$SanatizeBoolean(value) {
		if (ss.isNullOrUndefined(value)) {
			return value;
		}
		return value.toString().toLowerCase() === 'true';
	};
	$tab_MiscUtil.dispose$1 = function MiscUtil$Dispose(d) {
		if (ss.isValue(d)) {
			d.dispose();
		}
		return null;
	};
	$tab_MiscUtil.dispose = function MiscUtil$Dispose(d) {
		if (ss.isValue(d)) {
			for (var $t1 = 0; $t1 < d.length; $t1++) {
				var v = d[$t1];
				if (ss.isValue(v)) {
					v.dispose();
				}
			}
			ss.clear(d);
		}
		return null;
	};
	$tab_MiscUtil.clearTimeout = function MiscUtil$ClearTimeout(handle) {
		if (ss.isValue(handle)) {
			window.clearTimeout(ss.unbox(handle));
		}
		return null;
	};
	$tab_MiscUtil.clearInterval = function MiscUtil$ClearInterval(handle) {
		if (ss.isValue(handle)) {
			window.clearInterval(ss.unbox(handle));
		}
		return null;
	};
	$tab_MiscUtil.cloneObject = function MiscUtil$CloneObject(src) {
		var objStr = JSON.stringify(src, function(k, v) {
			if (ss.isInstanceOfType(v, Uint32Array) || ss.isInstanceOfType(v, Int32Array) || ss.isInstanceOfType(v, Float64Array) || ss.isInstanceOfType(v, Float32Array)) {
				return Array.prototype.slice.call(v);
			}
			return v;
		});
		return JSON.parse(objStr);
	};
	global.tab.MiscUtil = $tab_MiscUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.NaturalLanguageUtil
	var $tab_NaturalLanguageUtil = function() {
	};
	$tab_NaturalLanguageUtil.__typeName = 'tab.NaturalLanguageUtil';
	$tab_NaturalLanguageUtil.isNlpView = function NaturalLanguageUtil$IsNlpView() {
		if (!$tab_FeatureFlags.isEnabled('NLBox')) {
			return false;
		}
		return tsConfig.nlpLayoutMode === 'landing' || tsConfig.nlpLayoutMode === 'exploration';
	};
	global.tab.NaturalLanguageUtil = $tab_NaturalLanguageUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.NavigationMetricsCollector
	var $tab_NavigationMetricsCollector = function() {
	};
	$tab_NavigationMetricsCollector.__typeName = 'tab.NavigationMetricsCollector';
	$tab_NavigationMetricsCollector.collectMetrics = function NavigationMetricsCollector$CollectMetrics() {
		if (typeof(window) !== 'undefined' && typeof(window.performance) !== 'undefined' && typeof(window.performance.timing) !== 'undefined' && typeof(tabBootstrap.MetricsEvent) !== 'undefined') {
			$tab_NavigationMetricsCollector.$navMetrics = window.performance.timing;
			if ('navigationStart' in $tab_NavigationMetricsCollector.$navMetrics) {
				var start = $tab_NavigationMetricsCollector.$navMetrics[$tab_NavigationMetricsCollector.$navigationMetricsOrder[0]];
				var metricArray = [];
				for (var $t1 = 0; $t1 < $tab_NavigationMetricsCollector.$navigationMetricsOrder.length; $t1++) {
					var name = $tab_NavigationMetricsCollector.$navigationMetricsOrder[$t1];
					var metric = $tab_NavigationMetricsCollector.$navMetrics[name];
					metric = ((metric === 0) ? 0 : (metric - start));
					metricArray.push(metric);
				}
				var parameters = { v: metricArray };
				var evt = new tabBootstrap.MetricsEvent('nav', 1, parameters);
				tabBootstrap.MetricsController.logEventInternalUse(evt);
			}
		}
	};
	global.tab.NavigationMetricsCollector = $tab_NavigationMetricsCollector;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.NewRelicMetricsLogger
	var $tab_NewRelicMetricsLogger = function() {
	};
	$tab_NewRelicMetricsLogger.__typeName = 'tab.NewRelicMetricsLogger';
	$tab_NewRelicMetricsLogger.isLoggerSupported = function NewRelicMetricsLogger$IsLoggerSupported() {
		return 'newrelic' in window;
	};
	$tab_NewRelicMetricsLogger.$timeForNewRelic = function NewRelicMetricsLogger$TimeForNewRelic(time) {
		return time + tabBootstrap.MetricsController.recordingStart;
	};
	global.tab.NewRelicMetricsLogger = $tab_NewRelicMetricsLogger;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Bootstrap.ObjectAccessTracker
	var $tab_ObjectAccessTracker = function(tracker, id) {
		this.$tracker = null;
		this.$id = null;
		this.$tracker = tracker;
		this.$id = id;
	};
	$tab_ObjectAccessTracker.__typeName = 'tab.ObjectAccessTracker';
	$tab_ObjectAccessTracker.$isSymbol = function ObjectAccessTracker$IsSymbol(o) {
		return typeof(o) === 'symbol';
	};
	global.tab.ObjectAccessTracker = $tab_ObjectAccessTracker;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Bootstrap.ObjectCoverage
	var $tab_ObjectCoverage = function(coverageName) {
		this.$wasCalled = {};
		this.$originalObject = null;
		this.$name = null;
		this.$name = coverageName;
		$tab_ObjectCoverage.trackedObjects[coverageName] = this;
	};
	$tab_ObjectCoverage.__typeName = 'tab.ObjectCoverage';
	$tab_ObjectCoverage.shouldTrack = function ObjectCoverage$ShouldTrack(objectId) {
		if (ss.isNullOrUndefined($tab_ObjectCoverage.$coveredObjects)) {
			$tab_ObjectCoverage.$coveredObjects = {};
			var xfpData = $tab_FeatureParamsLookup.getString(47);
			if (!ss.isNullOrUndefined(xfpData)) {
				var ids = xfpData.split(',');
				for (var $t1 = 0; $t1 < ids.length; $t1++) {
					var id = ids[$t1];
					$tab_ObjectCoverage.$coveredObjects[id] = true;
				}
			}
		}
		return ss.keyExists($tab_ObjectCoverage.$coveredObjects, objectId) && $tab_ObjectCoverage.$coveredObjects[objectId];
	};
	global.tab.ObjectCoverage = $tab_ObjectCoverage;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.ObjectRegistry
	var $tab_ObjectRegistry = function() {
	};
	$tab_ObjectRegistry.__typeName = 'tab.ObjectRegistry';
	$tab_ObjectRegistry.registerType = function(TBase, TActual) {
		return function ObjectRegistry$RegisterType() {
			if (ss.isNullOrUndefined($tab_ObjectRegistry.$typeRegistry)) {
				$tab_ObjectRegistry.$typeRegistry = {};
			}
			$tab_ObjectRegistry.$typeRegistry[ss.getTypeFullName(TBase)] = TActual;
		};
	};
	$tab_ObjectRegistry.registerDeferredType = function(TBase) {
		return function ObjectRegistry$RegisterDeferredType() {
			var typePromise = $.Deferred();
			if (ss.isNullOrUndefined($tab_ObjectRegistry.$deferredRegistry)) {
				$tab_ObjectRegistry.$deferredRegistry = {};
			}
			$tab_ObjectRegistry.$deferredRegistry[ss.getTypeFullName(TBase)] = typePromise;
		};
	};
	$tab_ObjectRegistry.resolveDeferredType = function(T) {
		return function ObjectRegistry$ResolveDeferredType(type) {
			if (ss.isNullOrUndefined($tab_ObjectRegistry.$deferredRegistry)) {
				return;
			}
			$tab_ObjectRegistry.$deferredRegistry[ss.getTypeFullName(T)].resolve(type);
		};
	};
	$tab_ObjectRegistry.newView$1 = function(T) {
		return function ObjectRegistry$NewView(baseType, vms) {
			return $tab_ObjectRegistry.$newViewOrWidget(T).call(null, baseType, vms);
		};
	};
	$tab_ObjectRegistry.newView = function(T) {
		return function ObjectRegistry$NewView(vms) {
			return $tab_ObjectRegistry.$newViewOrWidget(T).call(null, T, vms);
		};
	};
	$tab_ObjectRegistry.newDeferred = function(T) {
		return function ObjectRegistry$NewDeferred(args) {
			var t = T;
			if (ss.isNullOrUndefined($tab_ObjectRegistry.$deferredRegistry)) {
				throw new ss.Exception('No deferred types registered');
			}
			var typePromise = $tab_ObjectRegistry.$deferredRegistry[ss.getTypeFullName(t)];
			if (ss.isNullOrUndefined(typePromise)) {
				throw new ss.Exception('Unknown type: ' + ss.getTypeFullName(t));
			}
			var instancePromise = $.Deferred();
			typePromise.done(function(type) {
				instancePromise.resolve(ss.cast(ss.applyConstructor(type, args), T));
			});
			return instancePromise;
		};
	};
	$tab_ObjectRegistry.newWidget$2 = function(T) {
		return function ObjectRegistry$NewWidget(baseType, vms) {
			return $tab_ObjectRegistry.$newViewOrWidget(T).call(null, baseType, vms);
		};
	};
	$tab_ObjectRegistry.newWidget = function(T) {
		return function ObjectRegistry$NewWidget() {
			return $tab_ObjectRegistry.$newViewOrWidget(T).call(null, T, []);
		};
	};
	$tab_ObjectRegistry.newWidget$1 = function(T) {
		return function ObjectRegistry$NewWidget(ctorArgs) {
			return $tab_ObjectRegistry.$newViewOrWidget(T).call(null, T, ctorArgs);
		};
	};
	$tab_ObjectRegistry.$newViewOrWidget = function(T) {
		return function ObjectRegistry$NewViewOrWidget(baseType, ctorArgs) {
			if (ss.isNullOrUndefined($tab_ObjectRegistry.$typeRegistry)) {
				throw new ss.Exception('No types registered');
			}
			var viewType = $tab_ObjectRegistry.$typeRegistry[ss.getTypeFullName(baseType)];
			if (ss.isNullOrUndefined(viewType)) {
				throw new ss.Exception('Unknown view type: ' + ss.getTypeFullName(baseType));
			}
			var view = ((ctorArgs.length === 0) ? ss.createInstance(viewType) : ss.applyConstructor(viewType, ctorArgs));
			return ($tab_ObjectRegistry.$isCastable(viewType, T) ? ss.cast(view, T) : view);
		};
	};
	$tab_ObjectRegistry.newLegacyTooltip = function(T) {
		return function ObjectRegistry$NewLegacyTooltip(baseType, tooltipContextProvider, visualId) {
			if (ss.isNullOrUndefined($tab_ObjectRegistry.$typeRegistry)) {
				throw new ss.Exception('No types registered');
			}
			var tooltipLegacyModeType = $tab_ObjectRegistry.$typeRegistry[ss.getTypeFullName(baseType)];
			if (ss.isNullOrUndefined(tooltipLegacyModeType)) {
				throw new ss.Exception('Unknown tooltip type: ' + ss.getTypeFullName(baseType));
			}
			var tooltip = new tooltipLegacyModeType(tooltipContextProvider, visualId);
			return ss.cast(tooltip, T);
		};
	};
	$tab_ObjectRegistry.newLegacyTooltipBehavior = function(T) {
		return function ObjectRegistry$NewLegacyTooltipBehavior(t, tooltip) {
			if (ss.isNullOrUndefined($tab_ObjectRegistry.$typeRegistry)) {
				throw new ss.Exception('No types registered');
			}
			var tooltipBehaviorType = $tab_ObjectRegistry.$typeRegistry[ss.getTypeFullName(t)];
			if (ss.isNullOrUndefined(tooltipBehaviorType)) {
				throw new ss.Exception('Unknown tooltip type: ' + ss.getTypeFullName(t));
			}
			var behavior = new tooltipBehaviorType(tooltip);
			return ss.cast(behavior, T);
		};
	};
	$tab_ObjectRegistry.resolve = function(T) {
		return function ObjectRegistry$Resolve(args) {
			var t = T;
			if (ss.isNullOrUndefined($tab_ObjectRegistry.$typeRegistry)) {
				throw new ss.Exception('No types registered');
			}
			var type = $tab_ObjectRegistry.$typeRegistry[ss.getTypeFullName(t)];
			if (ss.isNullOrUndefined(type)) {
				throw new ss.Exception('Unknown type: ' + ss.getTypeFullName(t));
			}
			return ss.cast(ss.applyConstructor(type, args), T);
		};
	};
	$tab_ObjectRegistry.$isCastable = function ObjectRegistry$IsCastable(sourceType, targetType) {
		return ss.isNullOrUndefined(ss.getGenericTypeDefinition(targetType)) || ss.isValue(ss.getGenericTypeDefinition(sourceType));
	};
	global.tab.ObjectRegistry = $tab_ObjectRegistry;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Bootstrap.ObjectWriteDetectionProxy
	var $tab_ObjectWriteDetectionProxy = function() {
	};
	$tab_ObjectWriteDetectionProxy.__typeName = 'tab.ObjectWriteDetectionProxy';
	global.tab.ObjectWriteDetectionProxy = $tab_ObjectWriteDetectionProxy;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.Param
	var $tab_Param = function() {
	};
	$tab_Param.__typeName = 'tab.Param';
	$tab_Param.createArgumentNullOrUndefinedException = function Param$CreateArgumentNullOrUndefinedException(paramName) {
		var ex = new ss.Exception(paramName + ' is null or undefined.');
		ex.paramName = paramName;
		return ex;
	};
	$tab_Param.verifyString = function Param$VerifyString(param, paramName) {
		$tab_Param.verifyValue(param, paramName);
		if (param.trim().length === 0) {
			var ex = new ss.Exception(paramName + ' contains only white space');
			ex.paramName = paramName;
			$tab_Param.$showParameterAlert(ex);
			throw ex;
		}
	};
	$tab_Param.verifyValue = function Param$VerifyValue(param, paramName) {
		if (ss.isNullOrUndefined(param)) {
			var ex = $tab_Param.createArgumentNullOrUndefinedException(paramName);
			$tab_Param.$showParameterAlert(ex);
			throw ex;
		}
	};
	$tab_Param.$showParameterAlert = function Param$ShowParameterAlert(ex) {
		if ($tab_Param.suppressAlerts) {
			return;
		}
		try {
			throw ex;
		}
		catch ($t1) {
			var exceptionWithStack = ss.Exception.wrap($t1);
			window.alert($tab_Param.$formatExceptionMessage(exceptionWithStack));
		}
	};
	$tab_Param.$formatExceptionMessage = function Param$FormatExceptionMessage(ex) {
		var message;
		if (!!ss.isValue(ex.stack)) {
			message = ss.cast(ex.stack, String);
		}
		else {
			message = ex.get_message();
		}
		return message;
	};
	global.tab.Param = $tab_Param;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.PathnameKey
	var $tab_PathnameKey = function() {
	};
	$tab_PathnameKey.__typeName = 'tab.PathnameKey';
	global.tab.PathnameKey = $tab_PathnameKey;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.PointDUtil
	var $tab_PointDUtil = function() {
	};
	$tab_PointDUtil.__typeName = 'tab.PointDUtil';
	$tab_PointDUtil.subtract = function PointDUtil$Subtract(first, second) {
		return { x: first.x - second.x, y: first.y - second.y };
	};
	$tab_PointDUtil.timesScalar = function PointDUtil$TimesScalar(p, scalar) {
		return { x: p.x * scalar, y: p.y * scalar };
	};
	$tab_PointDUtil.round = function PointDUtil$Round(p) {
		return { x: Math.round(p.x), y: Math.round(p.y) };
	};
	global.tab.PointDUtil = $tab_PointDUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.PointUtil
	var $tab_PointUtil = function() {
	};
	$tab_PointUtil.__typeName = 'tab.PointUtil';
	$tab_PointUtil.fromPresModel = function PointUtil$FromPresModel(pointPM) {
		if (ss.isNullOrUndefined(pointPM)) {
			return null;
		}
		return { x: pointPM.x, y: pointPM.y };
	};
	$tab_PointUtil.toPresModel = function PointUtil$ToPresModel(pt) {
		if (ss.isNullOrUndefined(pt)) {
			return null;
		}
		var pointPM = { x: ss.round(pt.x), y: ss.round(pt.y) };
		return pointPM;
	};
	$tab_PointUtil.fromPosition = function PointUtil$FromPosition(position) {
		return { x: $tab_DoubleUtil.roundToInt(position.left), y: $tab_DoubleUtil.roundToInt(position.top) };
	};
	$tab_PointUtil.fromPointD = function PointUtil$FromPointD(pointD) {
		return { x: $tab_DoubleUtil.roundToInt(pointD.x), y: $tab_DoubleUtil.roundToInt(pointD.y) };
	};
	$tab_PointUtil.add = function PointUtil$Add(first, second) {
		if (ss.isNullOrUndefined(first) || ss.isNullOrUndefined(second)) {
			return first;
		}
		return { x: first.x + second.x, y: first.y + second.y };
	};
	$tab_PointUtil.subtract = function PointUtil$Subtract(first, second) {
		return { x: first.x - second.x, y: first.y - second.y };
	};
	$tab_PointUtil.multiply = function PointUtil$Multiply(first, second) {
		return { x: first.x * second.x, y: first.y * second.y };
	};
	$tab_PointUtil.distance = function PointUtil$Distance(first, second) {
		$tab_Param.verifyValue(first, 'first');
		$tab_Param.verifyValue(second, 'second');
		var diffX = first.x - second.x;
		var diffY = first.y - second.y;
		return Math.sqrt(diffX * diffX + diffY * diffY);
	};
	$tab_PointUtil.isWithinDistance = function PointUtil$IsWithinDistance(first, second, distance) {
		var diffX = first.x - second.x;
		var diffY = first.y - second.y;
		return diffX * diffX + diffY * diffY <= distance * distance;
	};
	$tab_PointUtil.equals = function PointUtil$Equals(p, p2) {
		return ss.isValue(p) && ss.isValue(p2) && p2.x === p.x && p2.y === p.y;
	};
	$tab_PointUtil.timesScalar = function PointUtil$TimesScalar(p, scalar) {
		return { x: p.x * scalar, y: p.y * scalar };
	};
	global.tab.PointUtil = $tab_PointUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.PropertyChangedEventArgs
	var $tab_PropertyChangedEventArgs = function(propertyName) {
		this.$propertyName = null;
		ss.EventArgs.call(this);
		this.$propertyName = propertyName;
	};
	$tab_PropertyChangedEventArgs.__typeName = 'tab.PropertyChangedEventArgs';
	global.tab.PropertyChangedEventArgs = $tab_PropertyChangedEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Bootstrap.ReadOnlyProxy
	var $tab_ReadOnlyProxy = function() {
	};
	$tab_ReadOnlyProxy.__typeName = 'tab.ReadOnlyProxy';
	global.tab.ReadOnlyProxy = $tab_ReadOnlyProxy;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.RecordCast
	var $tab_RecordCast = function() {
	};
	$tab_RecordCast.__typeName = 'tab.RecordCast';
	$tab_RecordCast.rectPresModelAsRectXY = function RecordCast$RectPresModelAsRectXY(rpm) {
		return (ss.isNullOrUndefined(rpm) ? null : { x: rpm.x, y: rpm.y, w: rpm.w, h: rpm.h });
	};
	$tab_RecordCast.doubleRectPresModelAsDoubleRectXY = function RecordCast$DoubleRectPresModelAsDoubleRectXY(rpm) {
		return (ss.isNullOrUndefined(rpm) ? null : { x: rpm.doubleLeft, y: rpm.doubleTop, w: rpm.width, h: rpm.height });
	};
	$tab_RecordCast.sizeAsSizePresModel = function RecordCast$SizeAsSizePresModel(sz) {
		return (ss.isNullOrUndefined(sz) ? null : { w: sz.w, h: sz.h });
	};
	global.tab.RecordCast = $tab_RecordCast;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.RectUtil
	var $tab_RectUtil = function() {
	};
	$tab_RectUtil.__typeName = 'tab.RectUtil';
	$tab_RectUtil.isEmpty = function RectUtil$IsEmpty(r) {
		return r.w === 0 || r.h === 0;
	};
	$tab_RectUtil.isEqual = function RectUtil$IsEqual(r1, r2) {
		return r1.t === r2.t && r1.l === r2.l && r1.w === r2.w && r1.h === r2.h;
	};
	$tab_RectUtil.inRect = function RectUtil$InRect(r, p) {
		return p.x >= r.l && p.x < r.l + r.w && p.y >= r.t && p.y < r.t + r.h;
	};
	$tab_RectUtil.intersectsWith = function RectUtil$IntersectsWith(r1, r2) {
		return !(r2.l + r2.w < r1.l || r2.t + r2.h < r1.t || r2.l > r1.l + r1.w || r2.t > r1.t + r1.h);
	};
	$tab_RectUtil.intersect = function RectUtil$Intersect(rect1, rect2) {
		if (!$tab_RectUtil.intersectsWith(rect1, rect2) || $tab_RectUtil.isEmpty(rect2) || $tab_RectUtil.isEmpty(rect1)) {
			return { l: 0, t: 0, w: 0, h: 0 };
		}
		var newLeft = Math.max(rect1.l, rect2.l);
		var newTop = Math.max(rect1.t, rect2.t);
		var newRight = Math.min(rect1.l + rect1.w, rect2.l + rect2.w);
		var newBottom = Math.min(rect1.t + rect1.h, rect2.t + rect2.h);
		return { l: newLeft, t: newTop, w: newRight - newLeft, h: newBottom - newTop };
	};
	$tab_RectUtil.translateRectToFitInBounds = function RectUtil$TranslateRectToFitInBounds(innerRect, boundsRect) {
		var minTop = boundsRect.t;
		var minLeft = boundsRect.l;
		var maxTop = boundsRect.t + boundsRect.h - innerRect.h;
		var maxLeft = boundsRect.l + boundsRect.w - innerRect.w;
		var clampedTop = Math.max(Math.min(maxTop, innerRect.t), minTop);
		var clampedLeft = Math.max(Math.min(maxLeft, innerRect.l), minLeft);
		return { l: clampedLeft, t: clampedTop, w: innerRect.w, h: innerRect.h };
	};
	$tab_RectUtil.toRectXY = function RectUtil$ToRectXY(r) {
		return { x: r.l, y: r.t, w: r.w, h: r.h };
	};
	global.tab.RectUtil = $tab_RectUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.RectXYUtil
	var $tab_RectXYUtil = function() {
	};
	$tab_RectXYUtil.__typeName = 'tab.RectXYUtil';
	$tab_RectXYUtil.set = function RectXYUtil$Set(thisRect, other) {
		thisRect.x = other.x;
		thisRect.y = other.y;
		thisRect.w = other.w;
		thisRect.h = other.h;
	};
	$tab_RectXYUtil.set$1 = function RectXYUtil$Set(thisRect, x, y, width, height) {
		thisRect.x = x;
		thisRect.y = y;
		thisRect.w = width;
		thisRect.h = height;
	};
	$tab_RectXYUtil.isEmpty = function RectXYUtil$IsEmpty(r) {
		if (!ss.isValue(r)) {
			tab.Log.get(r).warn('Rect should not be empty when testing IsEmpty', []);
			return true;
		}
		return r.w === 0 || r.h === 0;
	};
	$tab_RectXYUtil.isEqual = function RectXYUtil$IsEqual(r1, r2) {
		return r1.x === r2.x && r1.y === r2.y && r1.w === r2.w && r1.h === r2.h;
	};
	$tab_RectXYUtil.isNull = function RectXYUtil$IsNull(r) {
		return r.x === 0 && r.y === 0 && r.w === 0 && r.h === 0;
	};
	$tab_RectXYUtil.inRect = function RectXYUtil$InRect(r, p) {
		return p.x >= r.x && p.x < r.x + r.w && p.y >= r.y && p.y < r.y + r.h;
	};
	$tab_RectXYUtil.inRect$1 = function RectXYUtil$InRect(r, x, y) {
		return x >= r.x && x < r.x + r.w && y >= r.y && y < r.y + r.h;
	};
	$tab_RectXYUtil.inRectPointF = function RectXYUtil$InRectPointF(r, p) {
		return p.x >= r.x && p.x < r.x + r.w && p.y >= r.y && p.y < r.y + r.h;
	};
	$tab_RectXYUtil.inRectPointF$1 = function RectXYUtil$InRectPointF(r, x, y) {
		return x >= r.x && x < r.x + r.w && y >= r.y && y < r.y + r.h;
	};
	$tab_RectXYUtil.intersectsWith = function RectXYUtil$IntersectsWith(r1, r2) {
		return !(r2.x + r2.w < r1.x || r2.y + r2.h < r1.y || r2.x > r1.x + r1.w || r2.y > r1.y + r1.h);
	};
	$tab_RectXYUtil.intersectsWith$1 = function RectXYUtil$IntersectsWith(r1, x2, y2, w2, h2) {
		return !(x2 + w2 < r1.x || y2 + h2 < r1.y || x2 > r1.x + r1.w || y2 > r1.y + r1.h);
	};
	$tab_RectXYUtil.intersectsWithMoreThanSharedEdge = function RectXYUtil$IntersectsWithMoreThanSharedEdge(r1, r2) {
		return !(r2.x + r2.w <= r1.x || r2.y + r2.h <= r1.y || r2.x >= r1.x + r1.w || r2.y >= r1.y + r1.h);
	};
	$tab_RectXYUtil.toPresModel = function RectXYUtil$ToPresModel(r) {
		return { x: r.x | 0, y: r.y | 0, w: r.w | 0, h: r.h | 0 };
	};
	$tab_RectXYUtil.fromPresModel = function RectXYUtil$FromPresModel(r) {
		return { x: r.x | 0, y: r.y | 0, w: r.w | 0, h: r.h | 0 };
	};
	$tab_RectXYUtil.clone = function RectXYUtil$Clone(r) {
		return { x: r.x, y: r.y, w: r.w, h: r.h };
	};
	$tab_RectXYUtil.nonemptyify = function RectXYUtil$Nonemptyify(r) {
		return { x: r.x, y: r.y, w: Math.max(1, r.w), h: Math.max(1, r.h) };
	};
	$tab_RectXYUtil.intersectsWithAny = function RectXYUtil$IntersectsWithAny(r1, rectangles) {
		var result = false;
		for (var $t1 = 0; $t1 < rectangles.length; $t1++) {
			var rectangle = rectangles[$t1];
			if (ss.isNullOrUndefined(rectangle)) {
				continue;
			}
			if ($tab_RectXYUtil.intersectsWith(r1, rectangle)) {
				result = true;
				break;
			}
		}
		return result;
	};
	$tab_RectXYUtil.intersectsWithAny$1 = function RectXYUtil$IntersectsWithAny(r1, r2, xOffsets) {
		if (r2.y + r2.h < r1.y || r2.y > r1.y + r1.h) {
			return false;
		}
		var rect1Left = r1.x;
		var rect1Right = r1.x + r1.w;
		for (var $t1 = 0; $t1 < xOffsets.length; $t1++) {
			var offset = xOffsets[$t1];
			var left = r2.x + offset;
			var right = left + r2.w;
			if (!(right < rect1Left || left > rect1Right)) {
				return true;
			}
		}
		return false;
	};
	$tab_RectXYUtil.completelyContains = function RectXYUtil$CompletelyContains(r1, r2) {
		return $tab_RectXYUtil.inRect(r1, { x: r2.x, y: r2.y }) && $tab_RectXYUtil.inRect(r1, { x: r2.x + r2.w - 1, y: r2.y + r2.h - 1 });
	};
	$tab_RectXYUtil.completelyContains$1 = function RectXYUtil$CompletelyContains(r1, x2, y2, w2, h2) {
		return $tab_RectXYUtil.inRect$1(r1, x2, y2) && $tab_RectXYUtil.inRect$1(r1, x2 + w2 - 1, y2 + h2 - 1);
	};
	$tab_RectXYUtil.toRect = function RectXYUtil$ToRect(r) {
		return { l: r.x, t: r.y, w: r.w, h: r.h };
	};
	$tab_RectXYUtil.offsetRect = function RectXYUtil$OffsetRect(r, p) {
		return { x: r.x + p.x, y: r.y + p.y, w: r.w, h: r.h };
	};
	$tab_RectXYUtil.offsetRectXY = function RectXYUtil$OffsetRectXY(r, offsetX, offsetY) {
		return { x: r.x + offsetX, y: r.y + offsetY, w: r.w, h: r.h };
	};
	$tab_RectXYUtil.offsetRectXYInPlace = function RectXYUtil$OffsetRectXYInPlace(r, offsetX, offsetY) {
		r.x += offsetX;
		r.y += offsetY;
	};
	$tab_RectXYUtil.offsetRectF = function RectXYUtil$OffsetRectF(r, p) {
		return { x: r.x + Math.round(p.x), y: r.y + Math.round(p.y), w: r.w, h: r.h };
	};
	$tab_RectXYUtil.outsetRect = function RectXYUtil$OutsetRect(r, dx, dy) {
		return { x: r.x - dx, y: r.y - dy, w: r.w + dx + dx, h: r.h + dy + dy };
	};
	$tab_RectXYUtil.outsetRectInPlace = function RectXYUtil$OutsetRectInPlace(r, dx, dy) {
		r.x -= dx;
		r.y -= dy;
		r.w += 2 * dx;
		r.h += 2 * dy;
	};
	$tab_RectXYUtil.outsetRectSizeF = function RectXYUtil$OutsetRectSizeF(r, d) {
		return $tab_RectXYUtil.outsetRect(r, Math.ceil(d.w), Math.ceil(d.h));
	};
	$tab_RectXYUtil.encompassCircleInPlace = function RectXYUtil$EncompassCircleInPlace(oldRect, centerX, centerY, radius) {
		var diameter = radius * 2;
		var x = Math.floor(centerX - radius + 0.5);
		var y = Math.floor(centerY - radius + 0.5);
		var size = Math.floor(diameter + 0.5);
		$tab_RectXYUtil.unionInPlace$1(oldRect, x, y, size, size);
	};
	$tab_RectXYUtil.union = function RectXYUtil$Union(bounds1, bounds2) {
		if ($tab_RectXYUtil.isEmpty(bounds1)) {
			return $tab_RectXYUtil.clone(bounds2);
		}
		if ($tab_RectXYUtil.isEmpty(bounds2)) {
			return $tab_RectXYUtil.clone(bounds1);
		}
		var newLeft = Math.min(bounds1.x, bounds2.x);
		var newTop = Math.min(bounds1.y, bounds2.y);
		var maxRight = Math.max(bounds1.x + bounds1.w, bounds2.x + bounds2.w);
		var maxBottom = Math.max(bounds1.y + bounds1.h, bounds2.y + bounds2.h);
		return { x: newLeft, y: newTop, w: maxRight - newLeft, h: maxBottom - newTop };
	};
	$tab_RectXYUtil.unionInPlace$1 = function RectXYUtil$UnionInPlace(thisRect, otherX, otherY, otherWidth, otherHeight) {
		if ($tab_RectXYUtil.isEmpty(thisRect)) {
			$tab_RectXYUtil.set$1(thisRect, otherX, otherY, otherWidth, otherHeight);
			return;
		}
		if (otherWidth === 0 || otherHeight === 0) {
			return;
		}
		var newLeft = Math.min(thisRect.x, otherX);
		var newTop = Math.min(thisRect.y, otherY);
		var maxRight = Math.max(thisRect.x + thisRect.w, otherX + otherWidth);
		var maxBottom = Math.max(thisRect.y + thisRect.h, otherY + otherHeight);
		$tab_RectXYUtil.set$1(thisRect, newLeft, newTop, maxRight - newLeft, maxBottom - newTop);
	};
	$tab_RectXYUtil.unionInPlace = function RectXYUtil$UnionInPlace(thisRect, otherRect) {
		$tab_RectXYUtil.unionInPlace$1(thisRect, otherRect.x, otherRect.y, otherRect.w, otherRect.h);
	};
	$tab_RectXYUtil.unionAll = function RectXYUtil$UnionAll(rectangles) {
		var numRects = rectangles.length;
		if (numRects === 0) {
			return { x: 0, y: 0, w: 0, h: 0 };
		}
		var rect = rectangles[0];
		var curLeft = rect.x;
		var curTop = rect.y;
		var curRight = rect.x + rect.w;
		var curBottom = rect.y + rect.h;
		for (var i = 1; i < numRects; i++) {
			rect = rectangles[i];
			curLeft = Math.min(curLeft, rect.x);
			curTop = Math.min(curTop, rect.y);
			curRight = Math.max(curRight, rect.x + rect.w);
			curBottom = Math.max(curBottom, rect.y + rect.h);
		}
		return { x: curLeft, y: curTop, w: curRight - curLeft, h: curBottom - curTop };
	};
	$tab_RectXYUtil.rectXYFromCorners = function RectXYUtil$RectXYFromCorners(corner1, corner2) {
		return $tab_RectXYUtil.rectXYFromCorners$2(corner1.x, corner1.y, corner2.x, corner2.y);
	};
	$tab_RectXYUtil.rectXYFromCorners$1 = function RectXYUtil$RectXYFromCorners(corner1, corner2) {
		var left = Math.round(Math.min(corner1.x, corner2.x));
		var top = Math.round(Math.min(corner1.y, corner2.y));
		var width = Math.abs(Math.round(corner1.x - corner2.x));
		var height = Math.abs(Math.round(corner1.y - corner2.y));
		return { x: left, y: top, w: width, h: height };
	};
	$tab_RectXYUtil.rectXYFromCorners$2 = function RectXYUtil$RectXYFromCorners(x1, y1, x2, y2) {
		var left = Math.round(Math.min(x1, x2));
		var top = Math.round(Math.min(y1, y2));
		var width = Math.abs(Math.round(x1 - x2));
		var height = Math.abs(Math.round(y1 - y2));
		return { x: left, y: top, w: width, h: height };
	};
	$tab_RectXYUtil.rectXYFromBBoxRectF = function RectXYUtil$RectXYFromBBoxRectF(bounds) {
		return $tab_RectXYUtil.rectXYFromMinAndMax(bounds.minX, bounds.minY, bounds.maxX, bounds.maxY);
	};
	$tab_RectXYUtil.rectXYFromMinAndMax = function RectXYUtil$RectXYFromMinAndMax(minX, minY, maxX, maxY) {
		var fminx = Math.floor(minX);
		var fminy = Math.floor(minY);
		var fmaxx = Math.ceil(maxX);
		var fmaxy = Math.ceil(maxY);
		return { x: fminx, y: fminy, w: fmaxx - fminx, h: fmaxy - fminy };
	};
	$tab_RectXYUtil.dialate = function RectXYUtil$Dialate(r, dialation) {
		var x = r.x - dialation;
		var y = r.y - dialation;
		var width = r.w + 2 * dialation;
		var height = r.h + 2 * dialation;
		return { x: x, y: y, w: width, h: height };
	};
	$tab_RectXYUtil.intersect = function RectXYUtil$Intersect(rect1, rect2) {
		if (!$tab_RectXYUtil.intersectsWith(rect1, rect2) || $tab_RectXYUtil.isEmpty(rect2) || $tab_RectXYUtil.isEmpty(rect1)) {
			return { x: 0, y: 0, w: 0, h: 0 };
		}
		var newLeft = Math.max(rect1.x, rect2.x);
		var newTop = Math.max(rect1.y, rect2.y);
		var newRight = Math.min(rect1.x + rect1.w, rect2.x + rect2.w);
		var newBottom = Math.min(rect1.y + rect1.h, rect2.y + rect2.h);
		return { x: newLeft, y: newTop, w: newRight - newLeft, h: newBottom - newTop };
	};
	$tab_RectXYUtil.intersectInPlace = function RectXYUtil$IntersectInPlace(result, other) {
		if (!$tab_RectXYUtil.intersectsWith(result, other) || $tab_RectXYUtil.isEmpty(result) || $tab_RectXYUtil.isEmpty(other)) {
			$tab_RectXYUtil.set$1(result, 0, 0, 0, 0);
			return;
		}
		var newLeft = Math.max(result.x, other.x);
		var newTop = Math.max(result.y, other.y);
		var newRight = Math.min(result.x + result.w, other.x + other.w);
		var newBottom = Math.min(result.y + result.h, other.y + other.h);
		$tab_RectXYUtil.set$1(result, newLeft, newTop, newRight - newLeft, newBottom - newTop);
	};
	$tab_RectXYUtil.shiftCoordsTowardsCenter = function RectXYUtil$ShiftCoordsTowardsCenter(coords, rect, marginSize) {
		if (ss.isNullOrUndefined(rect)) {
			return coords;
		}
		var shiftedCoords = { x: coords.x, y: coords.y };
		shiftedCoords = $tab_RectXYUtil.horizontalShiftCoordsTowardsCenter(shiftedCoords, rect, marginSize);
		return $tab_RectXYUtil.verticalShiftCoordsTowardsCenter(shiftedCoords, rect, marginSize);
	};
	$tab_RectXYUtil.horizontalShiftCoordsTowardsCenter = function RectXYUtil$HorizontalShiftCoordsTowardsCenter(coords, rect, marginSize) {
		if (ss.isNullOrUndefined(rect)) {
			return coords;
		}
		var toRet = { x: coords.x, y: coords.y };
		if (toRet.x <= rect.x + marginSize) {
			toRet.x += marginSize;
		}
		else if (toRet.x >= rect.x + rect.w - 2 * marginSize) {
			toRet.x -= marginSize;
		}
		return toRet;
	};
	$tab_RectXYUtil.verticalShiftCoordsTowardsCenter = function RectXYUtil$VerticalShiftCoordsTowardsCenter(coords, rect, marginSize) {
		if (ss.isNullOrUndefined(rect)) {
			return coords;
		}
		var toRet = { x: coords.x, y: coords.y };
		if (toRet.y <= rect.y + marginSize) {
			toRet.y += marginSize;
		}
		else if (toRet.y >= rect.y + rect.h - 2 * marginSize) {
			toRet.y -= marginSize;
		}
		return toRet;
	};
	$tab_RectXYUtil.clampCoords = function RectXYUtil$ClampCoords(coords, rect) {
		var x = Math.min(Math.max(rect.x, coords.x), rect.x + rect.w);
		var y = Math.min(Math.max(rect.y, coords.y), rect.y + rect.h);
		return { x: x, y: y };
	};
	$tab_RectXYUtil.getChangedRects = function RectXYUtil$GetChangedRects(originalRect, newRect) {
		var addedRects = [];
		if (!ss.isValue(originalRect) || !ss.isValue(newRect) || !$tab_RectXYUtil.intersectsWith(originalRect, newRect)) {
			return addedRects;
		}
		var originalRight = originalRect.x + originalRect.w;
		var originalBottom = originalRect.y + originalRect.h;
		var newRight = newRect.x + newRect.w;
		var newBottom = newRect.y + newRect.h;
		var minLeft = Math.min(originalRect.x, newRect.x);
		var maxLeft = Math.max(originalRect.x, newRect.x);
		var minRight = Math.min(originalRight, newRight);
		var maxRight = Math.max(originalRight, newRight);
		var minTop = Math.min(originalRect.y, newRect.y);
		var maxTop = Math.max(originalRect.y, newRect.y);
		var minBottom = Math.min(originalBottom, newBottom);
		var maxBottom = Math.max(originalBottom, newBottom);
		var top = { x: minLeft, y: minTop, w: maxRight - minLeft, h: maxTop - minTop };
		var left = { x: minLeft, y: maxTop, w: maxLeft - minLeft, h: minBottom - maxTop };
		var right = { x: minRight, y: maxTop, w: maxRight - minRight, h: minBottom - maxTop };
		var bottom = { x: minLeft, y: minBottom, w: maxRight - minLeft, h: maxBottom - minBottom };
		if (!$tab_RectXYUtil.isEmpty(top)) {
			addedRects.push(top);
		}
		if (!$tab_RectXYUtil.isEmpty(left)) {
			addedRects.push(left);
		}
		if (!$tab_RectXYUtil.isEmpty(right)) {
			addedRects.push(right);
		}
		if (!$tab_RectXYUtil.isEmpty(bottom)) {
			addedRects.push(bottom);
		}
		return addedRects;
	};
	$tab_RectXYUtil.reduceRectangles = function RectXYUtil$ReduceRectangles(rects) {
		if (ss.isNullOrUndefined(rects)) {
			return null;
		}
		var rectCount = rects.length;
		if (rectCount === 1) {
			return rects;
		}
		var modifiedRects = new Array(rectCount);
		for (var i = 0; i < rectCount; i++) {
			var curRect = modifiedRects[i] || rects[i];
			modifiedRects[i] = curRect;
			if ($tab_RectXYUtil.isEmpty(curRect)) {
				continue;
			}
			for (var j = i + 1; j < rectCount; j++) {
				var compareRect = modifiedRects[j] || rects[j];
				if ($tab_RectXYUtil.isEmpty(compareRect)) {
					continue;
				}
				var intersect = $tab_RectXYUtil.intersect(curRect, compareRect);
				if ($tab_RectXYUtil.isEmpty(intersect)) {
					continue;
				}
				var modifiedCurRect = $tab_RectXYUtil.$subtractRectFromEdge(curRect, intersect);
				if (ss.referenceEquals(modifiedCurRect, curRect)) {
					compareRect = $tab_RectXYUtil.$subtractRectFromEdge(compareRect, intersect);
				}
				modifiedRects[i] = modifiedCurRect;
				modifiedRects[j] = compareRect;
			}
		}
		for (var i1 = modifiedRects.length - 1; i1 >= 0; i1--) {
			if ($tab_RectXYUtil.isEmpty(modifiedRects[i1])) {
				modifiedRects.splice(i1, 1);
			}
		}
		return modifiedRects;
	};
	$tab_RectXYUtil.$subtractRectFromEdge = function RectXYUtil$SubtractRectFromEdge(rect, toSubtract) {
		if (toSubtract.x === rect.x && toSubtract.w === rect.w) {
			if (toSubtract.y > rect.y) {
				return { x: rect.x, y: rect.y, w: rect.w, h: rect.h - toSubtract.h };
			}
			else {
				return { x: rect.x, y: rect.y + toSubtract.h, w: rect.w, h: rect.h - toSubtract.h };
			}
		}
		else if (toSubtract.y === rect.y && toSubtract.h === rect.h) {
			if (toSubtract.x > rect.x) {
				return { x: rect.x, y: rect.y, w: rect.w - toSubtract.w, h: rect.h };
			}
			else {
				return { x: rect.x + toSubtract.w, y: rect.y, w: rect.w - toSubtract.w, h: rect.h };
			}
		}
		return rect;
	};
	$tab_RectXYUtil.getCenter = function RectXYUtil$GetCenter(r) {
		return { x: r.x + ss.Int32.div(r.w, 2), y: r.y + ss.Int32.div(r.h, 2) };
	};
	global.tab.RectXYUtil = $tab_RectXYUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.RegionRectUtil
	var $tab_RegionRectUtil = function() {
	};
	$tab_RegionRectUtil.__typeName = 'tab.RegionRectUtil';
	$tab_RegionRectUtil.sizesAreEqual = function RegionRectUtil$SizesAreEqual(r1, r2) {
		return ss.isValue(r1) && ss.isValue(r2) && r1.h === r2.h && r1.w === r2.w;
	};
	global.tab.RegionRectUtil = $tab_RegionRectUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.ScrollCapabilities
	var $tab_ScrollCapabilities = function() {
	};
	$tab_ScrollCapabilities.__typeName = 'tab.ScrollCapabilities';
	global.tab.ScrollCapabilities = $tab_ScrollCapabilities;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.ScrollCapabilitiesUtil
	var $tab_ScrollCapabilitiesUtil = function() {
	};
	$tab_ScrollCapabilitiesUtil.__typeName = 'tab.ScrollCapabilitiesUtil';
	$tab_ScrollCapabilitiesUtil.hasCapabilities = function ScrollCapabilitiesUtil$HasCapabilities(capabilities, capabilitiesToCheck) {
		return (capabilities & capabilitiesToCheck) === capabilitiesToCheck;
	};
	global.tab.ScrollCapabilitiesUtil = $tab_ScrollCapabilitiesUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.SetUtilities
	var $tab_SetUtilities = function() {
	};
	$tab_SetUtilities.__typeName = 'tab.SetUtilities';
	$tab_SetUtilities.interserctWith = function(T) {
		return function SetUtilities$InterserctWith(set, other) {
			var result = new Set();
			for (var $t1 = 0; $t1 < other.length; $t1++) {
				var otherItem = other[$t1];
				if (set.has(otherItem)) {
					result.add(otherItem);
				}
			}
			set.forEach(function(item) {
				if (!result.has(item) && _.contains(other, item)) {
					result.add(item);
				}
			});
			return result;
		};
	};
	$tab_SetUtilities.getValues = function(T) {
		return function SetUtilities$GetValues(set) {
			var result = [];
			set.forEach(function(i) {
				result.push(i);
			});
			return result;
		};
	};
	$tab_SetUtilities.addAll = function(T) {
		return function SetUtilities$AddAll(set, itemsToAddToSet) {
			for (var $t1 = 0; $t1 < itemsToAddToSet.length; $t1++) {
				var i = itemsToAddToSet[$t1];
				set.add(i);
			}
		};
	};
	$tab_SetUtilities.symmetricDifferenceWith = function(T) {
		return function SetUtilities$SymmetricDifferenceWith(set, other) {
			var result = new Set();
			set.forEach(function(i) {
				if (!other.has(i)) {
					result.add(i);
				}
			});
			other.forEach(function(i1) {
				if (!set.has(i1)) {
					result.add(i1);
				}
			});
			return result;
		};
	};
	global.tab.SetUtilities = $tab_SetUtilities;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.SizeUtil
	var $tab_SizeUtil = function() {
	};
	$tab_SizeUtil.__typeName = 'tab.SizeUtil';
	$tab_SizeUtil.isEmpty = function SizeUtil$IsEmpty(s) {
		return s.w === 0 && s.h === 0;
	};
	$tab_SizeUtil.union = function SizeUtil$Union(s1, s2) {
		return { w: Math.max(s1.w, s2.w), h: Math.max(s1.h, s2.h) };
	};
	$tab_SizeUtil.add = function SizeUtil$Add(first, second) {
		if (ss.isNullOrUndefined(first) || ss.isNullOrUndefined(second)) {
			return first;
		}
		return { w: first.w + second.w, h: first.h + second.h };
	};
	$tab_SizeUtil.subtract = function SizeUtil$Subtract(first, second) {
		return { w: first.w - second.w, h: first.h - second.h };
	};
	$tab_SizeUtil.equals = function SizeUtil$Equals(p, p2) {
		return ss.isValue(p) && ss.isValue(p2) && p2.w === p.w && p2.h === p.h;
	};
	global.tab.SizeUtil = $tab_SizeUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.SourceCacheForErrorStacks
	var $tab_SourceCacheForErrorStacks = function() {
	};
	$tab_SourceCacheForErrorStacks.__typeName = 'tab.SourceCacheForErrorStacks';
	$tab_SourceCacheForErrorStacks.$getSource = function SourceCacheForErrorStacks$GetSource(url) {
		if (ss.isNullOrUndefined(url)) {
			return [];
		}
		if (!ss.keyExists($tab_SourceCacheForErrorStacks.$sourceCache, url)) {
			var source = '';
			if (url.indexOf(document.domain) > -1) {
				source = $tab_SourceCacheForErrorStacks.$loadSource(url);
			}
			$tab_SourceCacheForErrorStacks.$sourceCache[url] = (ss.isNullOrEmptyString(source) ? [] : source.split('\n'));
		}
		return $tab_SourceCacheForErrorStacks.$sourceCache[url];
	};
	$tab_SourceCacheForErrorStacks.$guessFunctionName = function SourceCacheForErrorStacks$GuessFunctionName(url, lineNo) {
		var functionArgNames = new RegExp('function ([^(]*)\\(([^)]*)\\)');
		var guessFunction = new RegExp('[\'"]?([0-9A-Za-z$_]+)[\'"]?\\s*[:=]\\s*(function|eval|new Function)');
		var line = '';
		var MaxLines = 10;
		var source = $tab_SourceCacheForErrorStacks.$getSource(url);
		if (source.length === 0) {
			return $tab_SourceCacheForErrorStacks.$unknownFunctionName;
		}
		for (var i = 0; i < MaxLines; i++) {
			line = source[lineNo] + line;
			if (!ss.isNullOrEmptyString(line)) {
				var matches = guessFunction.exec(line);
				if (ss.isValue(matches) && matches.length > 0) {
					return matches[1];
				}
				matches = functionArgNames.exec(line);
				if (ss.isValue(matches) && matches.length > 0) {
					return matches[1];
				}
			}
		}
		return $tab_SourceCacheForErrorStacks.$unknownFunctionName;
	};
	$tab_SourceCacheForErrorStacks.$gatherContext = function SourceCacheForErrorStacks$GatherContext(url, lineNo, colPos) {
		var source = $tab_SourceCacheForErrorStacks.$getSource(url);
		if (ss.isNullOrUndefined(source) || source.length === 0) {
			return null;
		}
		var context = [];
		var LinesOfContext = 3;
		var linesBefore = Math.floor(1.5);
		var linesAfter = linesBefore + 1;
		var start = Math.max(0, lineNo - linesBefore);
		var end = Math.min(source.length, lineNo + linesAfter);
		for (var i = start; i < end; i++) {
			if (!ss.isNullOrEmptyString(source[i])) {
				context.push(source[i]);
			}
		}
		return context;
	};
	$tab_SourceCacheForErrorStacks.$loadSource = function SourceCacheForErrorStacks$LoadSource(url) {
		if (false) {
			return '';
		}
		try {
			var srcRequest = new XMLHttpRequest();
			srcRequest.open('GET', url, false);
			srcRequest.send('');
			return srcRequest.responseText;
		}
		catch ($t1) {
			return '';
		}
	};
	global.tab.SourceCacheForErrorStacks = $tab_SourceCacheForErrorStacks;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.StackLocation
	var $tab_StackLocation = function(url, lineNo, colNo, defaultContextLine, functionName) {
		this.url = null;
		this.lineNo = 0;
		this.columnNo = 0;
		this.functionName = null;
		this.context = null;
		this.url = url;
		this.lineNo = lineNo;
		this.columnNo = colNo;
		var zeroIndexedLineNumber = lineNo - 1;
		this.context = $tab_SourceCacheForErrorStacks.$gatherContext(this.url, zeroIndexedLineNumber, colNo) || [defaultContextLine];
		var $t1 = functionName;
		if (ss.isNullOrUndefined($t1)) {
			$t1 = $tab_SourceCacheForErrorStacks.$guessFunctionName(this.url, zeroIndexedLineNumber);
		}
		this.functionName = $t1;
	};
	$tab_StackLocation.__typeName = 'tab.StackLocation';
	global.tab.StackLocation = $tab_StackLocation;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.StackTrace
	var $tab_StackTrace = function(traceMode, message, name, locations) {
		this.userAgent = window.navigator.userAgent;
		this.message = null;
		this.url = null;
		this.traceMode = null;
		this.locations = null;
		this.isIncomplete = false;
		this.name = null;
		this.traceMode = traceMode;
		this.message = message;
		this.url = document.URL;
		this.name = name;
		this.locations = locations || [];
	};
	$tab_StackTrace.__typeName = 'tab.StackTrace';
	global.tab.StackTrace = $tab_StackTrace;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.StackTraceAppender
	var $tab_StackTraceAppender = function() {
		tab.BaseLogAppender.call(this);
	};
	$tab_StackTraceAppender.__typeName = 'tab.StackTraceAppender';
	global.tab.StackTraceAppender = $tab_StackTraceAppender;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.StringTuple
	var $tab_StringTuple = function(first, second) {
		this.$first = null;
		this.$second = null;
		this.$first = first;
		this.$second = second;
	};
	$tab_StringTuple.__typeName = 'tab.StringTuple';
	global.tab.StringTuple = $tab_StringTuple;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.StyleUtil
	var $tab_StyleUtil = function() {
	};
	$tab_StyleUtil.__typeName = 'tab.StyleUtil';
	$tab_StyleUtil.appendCSSRule = function StyleUtil$AppendCSSRule(selector, declarations) {
		$tab_StyleUtil.appendCSSRuleToStyleSheet$1($tab_StyleUtil.defaultCustomStyleElementId, selector, declarations);
	};
	$tab_StyleUtil.appendCSSRuleToStyleSheet = function StyleUtil$AppendCSSRuleToStyleSheet(styleSheet, selector, declarations) {
		var cssCode = selector + ' {\n' + $tab_StyleUtil.createCSSRules(declarations) + '}\n';
		var index = styleSheet.cssRules.length;
		styleSheet.insertRule(cssCode, index);
	};
	$tab_StyleUtil.appendCSSRuleToStyleSheet$1 = function StyleUtil$AppendCSSRuleToStyleSheet(styleElementId, selector, declarations) {
		if (!ss.keyExists($tab_StyleUtil.$customStyleSheetDictionary, styleElementId)) {
			$tab_StyleUtil.$createNewStyleElement(styleElementId);
		}
		var styleSheet = $tab_StyleUtil.$customStyleSheetDictionary[styleElementId] || $tab_StyleUtil.$getStyleSheetById(styleElementId);
		$tab_StyleUtil.appendCSSRuleToStyleSheet(styleSheet, selector, declarations);
	};
	$tab_StyleUtil.createCSSRules = function StyleUtil$CreateCSSRules(declarations) {
		var styleBody = '';
		var $t1 = _.keys(declarations);
		for (var $t2 = 0; $t2 < $t1.length; $t2++) {
			var key = $t1[$t2];
			var value = declarations[key];
			if (!ss.isNullOrEmptyString(value)) {
				styleBody += key + ':' + value + ';\n';
			}
		}
		return styleBody;
	};
	$tab_StyleUtil.clearDefaultStyleSheet = function StyleUtil$ClearDefaultStyleSheet() {
		$tab_StyleUtil.clearStyleSheet($tab_StyleUtil.defaultCustomStyleElementId);
	};
	$tab_StyleUtil.clearStyleSheet = function StyleUtil$ClearStyleSheet(styleElementId) {
		var stylesheet = $tab_StyleUtil.$customStyleSheetDictionary[styleElementId];
		if (ss.isNullOrUndefined(stylesheet)) {
			return;
		}
		var customStyleElement = ss.cast(stylesheet.ownerNode, HTMLElement);
		if (ss.isValue(customStyleElement) && ss.isValue(customStyleElement.parentNode)) {
			customStyleElement.parentNode.removeChild(customStyleElement);
			delete $tab_StyleUtil.$customStyleSheetDictionary[styleElementId];
		}
	};
	$tab_StyleUtil.isValidCssClassName = function StyleUtil$IsValidCssClassName(cssClassName) {
		var match = cssClassName.match($tab_StyleUtil.$regexCssClassName);
		return ss.isValue(match);
	};
	$tab_StyleUtil.$createNewStyleElement = function StyleUtil$CreateNewStyleElement(styleElementId) {
		var customStyleElement = document.createElement('style');
		customStyleElement.setAttribute('type', 'text/css');
		customStyleElement.id = styleElementId;
		customStyleElement.appendChild(document.createTextNode(''));
		document.head.appendChild(customStyleElement);
		$tab_StyleUtil.$customStyleSheetDictionary[styleElementId] = $tab_StyleUtil.$getStyleSheetById(styleElementId);
		return customStyleElement;
	};
	$tab_StyleUtil.$getStyleSheetById = function StyleUtil$GetStyleSheetById(styleElementId) {
		var $t1 = document.getElementById(styleElementId);
		var element = ss.cast($t1, ss.isValue($t1) && (ss.isInstanceOfType($t1, Element) && $t1.tagName === 'STYLE'));
		return element.sheet;
	};
	global.tab.StyleUtil = $tab_StyleUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.Transform
	var $tab_Transform = function(translateX, translateY, scale, type) {
		this.$translate = null;
		this.$scale = 0;
		this.$inverseScale = 0;
		this.$transformType = 0;
		this.$translate = { x: translateX, y: translateY };
		this.$scale = scale;
		this.$inverseScale = 1 / scale;
		this.$transformType = type;
	};
	$tab_Transform.__typeName = 'tab.Transform';
	$tab_Transform.none = function Transform$None() {
		return $tab_Transform.$nullTransform;
	};
	$tab_Transform.offset = function Transform$Offset(offsetX, offsetY) {
		return ((offsetX === 0 && offsetY === 0) ? $tab_Transform.$nullTransform : new $tab_Transform(offsetX, offsetY, 1, 3));
	};
	$tab_Transform.pixelToDomain = function Transform$PixelToDomain(translateX, translateY, scale) {
		if ($tab_DoubleUtil.isApproximatelyZero(translateX) && $tab_DoubleUtil.isApproximatelyZero(translateY) && $tab_DoubleUtil.isApproximatelyEqual(1, scale)) {
			return $tab_Transform.$nullTransform;
		}
		return new $tab_Transform(translateX, translateY, scale, 1);
	};
	$tab_Transform.domainToPixel = function Transform$DomainToPixel(translateX, translateY, scale) {
		if ($tab_DoubleUtil.isApproximatelyZero(translateX) && $tab_DoubleUtil.isApproximatelyZero(translateY) && $tab_DoubleUtil.isApproximatelyEqual(1, scale)) {
			return $tab_Transform.$nullTransform;
		}
		return new $tab_Transform(translateX, translateY, scale, 2);
	};
	global.tab.Transform = $tab_Transform;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.TransformationMatrix
	var $tab_TransformationMatrix = function() {
		this.$matrix = null;
		this.reset();
	};
	$tab_TransformationMatrix.__typeName = 'tab.TransformationMatrix';
	global.tab.TransformationMatrix = $tab_TransformationMatrix;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.TransformationType
	var $tab_TransformationType = function() {
	};
	$tab_TransformationType.__typeName = 'tab.TransformationType';
	global.tab.TransformationType = $tab_TransformationType;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.UriUtil
	var $tab_UriUtil = function() {
	};
	$tab_UriUtil.__typeName = 'tab.UriUtil';
	$tab_UriUtil.get_serverRootUrl = function UriUtil$get_ServerRootUrl() {
		return ss.formatString($tab_UriUtil.$serverRootUrlTemplate, tabBootstrap.BaseUrlFormatter.formatBaseUrl(), tsConfig.serverUrlPrefix);
	};
	$tab_UriUtil.get_helpVersion = function UriUtil$get_HelpVersion() {
		ss.Debug.assert(!ss.isNullOrEmptyString(tsConfig.externalVersion), 'Expected TsConfig.ExternalVersion to be defined.');
		var Dot = '.';
		var segments = tsConfig.externalVersion.split(Dot);
		if (segments.length >= 2) {
			var major = segments[0];
			var minor = segments[1];
			if ($.isNumeric(major) && $.isNumeric(minor)) {
				return [major, minor].join(Dot);
			}
		}
		return $tab_UriUtil.defaultHelpVersion;
	};
	$tab_UriUtil.get_$helpEdition = function UriUtil$get_HelpEdition() {
		return (tsConfig.is_saas ? 'online' : 'server');
	};
	$tab_UriUtil.get_$helpLang = function UriUtil$get_HelpLang() {
		if (ss.isNullOrUndefined(tsConfig.language)) {
			return 'en-us';
		}
		switch (tsConfig.language) {
			case 'de': {
				return 'de-de';
			}
			case 'en': {
				return 'en-us';
			}
			case 'en_GB': {
				return 'en-gb';
			}
			case 'es': {
				return 'es-es';
			}
			case 'fr': {
				return 'fr-fr';
			}
			case 'ja': {
				return 'ja-jp';
			}
			case 'ko': {
				return 'ko-kr';
			}
			case 'pt': {
				return 'pt-br';
			}
			case 'zh': {
				return 'zh-cn';
			}
			case 'zh_TW': {
				return 'zh-tw';
			}
			default: {
				return 'en-us';
			}
		}
	};
	$tab_UriUtil.makeHelpUri = function UriUtil$MakeHelpUri(helpToken, helpPage) {
		var helpUri;
		if (tsConfig.useOfflineHelp) {
			ss.Debug.assert(!ss.isNullOrEmptyString(helpPage), '!string.IsNullOrEmpty(helpPage)');
			helpUri = $tab_UriUtil.getOfflineHelpHref(helpPage);
		}
		else {
			ss.Debug.assert(!ss.isNullOrEmptyString(helpToken), '!string.IsNullOrEmpty(helpToken)');
			var platform = (!ss.isNullOrEmptyString(tsConfig.serverPlatform) ? ss.formatString('platform={0}&', tsConfig.serverPlatform.toLowerCase()) : '');
			helpUri = ss.formatString('{0}/{1}/app/{2}?edition={3}&lang={1}&{5}version={4}', $tab_UriUtil.onlineHelpOrigin, $tab_UriUtil.get_$helpLang(), helpToken, $tab_UriUtil.get_$helpEdition(), $tab_UriUtil.get_helpVersion(), platform);
		}
		ss.Debug.assert(!ss.isNullOrEmptyString(helpUri), '!string.IsNullOrEmpty(helpUri)');
		return helpUri;
	};
	$tab_UriUtil.getOfflineHelpHref = function UriUtil$GetOfflineHelpHref(helpPage) {
		var lang = ss.replaceAllString($tab_UriUtil.get_$helpLang(), '-', '_');
		return ss.formatString($tab_UriUtil.$offlineHelpUrl, lang, helpPage);
	};
	$tab_UriUtil.makeHelpSearchUri = function UriUtil$MakeHelpSearchUri(query) {
		var escapedQuery = encodeURIComponent(query);
		if (tsConfig.useOfflineHelp) {
			return $tab_UriUtil.getOfflineHelpHref(ss.formatString('search-{0}', escapedQuery));
		}
		return (($tab_UriUtil.get_$helpLang() === 'en-us') ? ss.formatString('{0}/search/support/{1}', $tab_UriUtil.onlineHelpOrigin, escapedQuery) : ss.formatString('{0}/{1}/search/support/{2}', $tab_UriUtil.onlineHelpOrigin, $tab_UriUtil.get_$helpLang(), escapedQuery));
	};
	$tab_UriUtil.makeSupportUri = function UriUtil$MakeSupportUri() {
		return (tsConfig.useOfflineHelp ? $tab_UriUtil.getOfflineHelpHref('support') : $tab_UriUtil.onlineHelpOrigin) + '/support';
	};
	$tab_UriUtil.makeAbsoluteCorsProxyPrefixUrl = function UriUtil$MakeAbsoluteCorsProxyPrefixUrl(corsProxyPrefix) {
		ss.Debug.assert(!ss.isNullOrEmptyString(corsProxyPrefix), '!string.IsNullOrEmpty(corsProxyPrefix)');
		return ss.formatString($tab_UriUtil.$corsProxyUrlTemplate, $tab_UriUtil.get_serverRootUrl(), corsProxyPrefix);
	};
	$tab_UriUtil.isServerRootUrlHttps = function UriUtil$IsServerRootUrlHttps() {
		return ss.startsWithString($tab_UriUtil.get_serverRootUrl().toLowerCase(), 'https');
	};
	global.tab.UriUtil = $tab_UriUtil;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.WindowAppender
	var $tab_WindowAppender = function() {
		this.$logDiv = null;
		tab.BaseLogAppender.call(this);
	};
	$tab_WindowAppender.__typeName = 'tab.WindowAppender';
	global.tab.WindowAppender = $tab_WindowAppender;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.ZIndexConstants
	var $tab_ZIndexConstants = function() {
	};
	$tab_ZIndexConstants.__typeName = 'tab.ZIndexConstants';
	global.tab.ZIndexConstants = $tab_ZIndexConstants;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.Format
	var $tableau_format = function() {
	};
	$tableau_format.__typeName = 'tableau.format';
	$tableau_format.convertFullwidthNumberToAscii = function Format$ConvertFullwidthNumberToAscii(numberValue) {
		var $t1 = ss.getEnumerator(Object.keys($tableau_format.$fullwidthToAscii));
		try {
			while ($t1.moveNext()) {
				var fullwidthNumber = $t1.current();
				numberValue = ss.replaceAllString(numberValue, fullwidthNumber, $tableau_format.$fullwidthToAscii[fullwidthNumber]);
			}
		}
		finally {
			$t1.dispose();
		}
		return numberValue;
	};
	$tableau_format.formatDataValue = function Format$FormatDataValue(dv, role, format, precision, showFullDateTimes) {
		var dvs = dv.s;
		if (ss.isNullOrUndefined(dvs) || ss.referenceEquals(dvs, $tableau_types_DataSpecial.DS_NORMAL)) {
			var dvt = ss.coalesce(dv.t, '');
			var dvv = dv.v;
			switch (dvt) {
				case 's': {
					return dvv;
				}
				case 'b': {
					return dvv.toString();
				}
				case 'i': {
					if (typeof(dvv) !== 'number') {
						dvv = parseInt(dvv, 10);
					}
					return $tableau_format.$formatDataValueInt(role, format, dvv);
				}
				case 'r': {
					if (typeof(dvv) !== 'number') {
						dvv = parseFloat(dvv);
					}
					return $tableau_format.$formatReal(dvv, dvt, format, precision, role);
				}
				case 't': {
					return $tableau_format.$formatJsOrOleDateTime(dv, format, showFullDateTimes);
				}
				case 'd': {
					return $tableau_format.$formatJsOrOleDateTime(dv, format, 0);
				}
			}
			throw new ss.Exception('Invalid Tableau Format Type');
		}
		if (ss.referenceEquals(dvs, $tableau_types_DataSpecial.DS_NULL)) {
			return 'null';
		}
		if (ss.referenceEquals(dvs, $tableau_types_DataSpecial.DS_MISSING)) {
			return tab.Strings.SpecialMissing;
		}
		return '#special:' + dvs + '#';
	};
	$tableau_format.$formatJsOrOleDateTime = function Format$FormatJsOrOleDateTime(dv, format, datetimeFormatMode) {
		var dvv = dv.v;
		var dvt = dv.t;
		if (_.isDate(dvv)) {
			return $tableau_format.formatJsDateTime(dvv, format, datetimeFormatMode, dvt);
		}
		else {
			var dvvDouble = (_.isNumber(dvv) ? dvv : parseFloat(dvv));
			return $tableau_format.$formatOleDateTime(dvvDouble, format, datetimeFormatMode, dvt);
		}
	};
	$tableau_format.$formatDataValueInt = function Format$FormatDataValueInt(role, format, dvv) {
		if (role === 'd') {
			if (ss.isNullOrUndefined(format) || format.length !== $tableau_format.$nfStringsArrayLength) {
				return $tableau_format.$formatRawInt(dvv).toString();
			}
			var formatType = format[$tableau_format.$nfType];
			switch (formatType) {
				case '': {
					var formatNoSeparators = ss.arrayClone(format);
					formatNoSeparators[$tableau_format.$nfUseSeparators] = $tableau_format.$nfSeparatorsFalse;
					return $tableau_format.$formatInt(dvv, formatNoSeparators);
				}
				default: {
					return $tableau_format.$formatInt(dvv, format);
				}
			}
		}
		return $tableau_format.$formatInt(dvv, format);
	};
	$tableau_format.parseQuantitativeDataValue = function Format$ParseQuantitativeDataValue(input, dataType, format, showFullDateTimes, oldValue) {
		switch (dataType) {
			case 'i': {
				return parseInt($tableau_format.reformatNumberToJsFormat(input, format), 10);
			}
			case 'r': {
				return parseFloat($tableau_format.reformatNumberToJsFormat(input, format));
			}
			case 'd':
			case 't': {
				var dateStr = $tableau_format.formatToJSCompliantFormat(input, format, showFullDateTimes, oldValue);
				return $tableau_types.OleDateFromJsDate((new Date(Date.parse(dateStr + ' GMT'))).getTime());
			}
		}
		ss.Debug.fail('Invalid Quantitative Data Type: ' + dataType);
		return (ss.isValue(oldValue) ? parseFloat(oldValue.v) : 0);
	};
	$tableau_format.reformatNumberToJsFormat = function Format$ReformatNumberToJsFormat(numberString, format) {
		var escapedSeparators = format[$tableau_format.$nfGroupSeparatorChars].replace($tableau_format.$regexpMetacharacters, '\\$1');
		if (escapedSeparators.indexOf(' ') !== -1) {
			escapedSeparators += ' ';
		}
		var escapedDecimals = format[$tableau_format.$nfDecimalPointChars].replace($tableau_format.$regexpMetacharacters, '\\$1');
		if (escapedSeparators.indexOf('.') === -1 && escapedDecimals.indexOf('.') === -1) {
			numberString = numberString.replace(new RegExp('\\.', 'g'), '?');
		}
		return numberString.replace(new RegExp('[' + escapedSeparators + ']', 'g'), '').replace(new RegExp('[' + escapedDecimals + ']', 'g'), '.');
	};
	$tableau_format.formatToJSCompliantFormat = function Format$FormatToJsCompliantFormat(dateTimeString, formattingInfo, showFullDateTimes, previousValue) {
		var normalizedDateTimeFormat = $tableau_format.normalizeDateTimeFormat(formattingInfo, showFullDateTimes, previousValue.t);
		var tokens = $tableau_format.tokenizeDateTime(dateTimeString, normalizedDateTimeFormat, showFullDateTimes);
		return (ss.isValue(tokens) ? $tableau_format.$assembleDateString(tokens, previousValue) : '');
	};
	$tableau_format.normalizeDateTimeFormat = function Format$NormalizeDateTimeFormat(formattingInfo, showFullDateTimes, dataValueType) {
		var dateTimeFormat = formattingInfo.format;
		var timeFormat = formattingInfo.timeFormat;
		if (dateTimeFormat.charCodeAt(0) === 42) {
			dateTimeFormat = dateTimeFormat.substr(1);
		}
		if (showFullDateTimes !== 0 && ss.isValue(timeFormat) && (ss.isNullOrUndefined(formattingInfo.originalFormat) || formattingInfo.originalFormat.length === 0 || formattingInfo.originalFormat === 'S') && dataValueType === 't') {
			if (timeFormat.charCodeAt(0) === 42) {
				timeFormat = timeFormat.substr(1);
			}
			dateTimeFormat = dateTimeFormat + ' ' + timeFormat;
		}
		dateTimeFormat = dateTimeFormat.replace(new RegExp('ampm', 'g'), 'tt');
		dateTimeFormat = ss.replaceAllString(dateTimeFormat, 'H', 'h');
		dateTimeFormat = dateTimeFormat.replace($tableau_format.$charactersAfterDay, function(matched) {
			return matched.replace(new RegExp('m', 'gi'), 'm');
		});
		dateTimeFormat = dateTimeFormat.replace($tableau_format.$charactersAfterHour, function(matched1) {
			return matched1.replace(new RegExp('m', 'gi'), 'n');
		});
		return dateTimeFormat;
	};
	$tableau_format.tokenizeDateTime = function Format$TokenizeDateTime(dateTime, normalizedDateTimeFormat, showFullDateTimes) {
		var formatParse = normalizedDateTimeFormat;
		formatParse = formatParse.replace($tableau_format.$regexpMetacharacters, '\\$1');
		formatParse = formatParse.replace($tableau_format.$tt, '($1)');
		formatParse = formatParse.replace($tableau_format.$numericFields, '($1)');
		var formatTokens = normalizedDateTimeFormat.match(new RegExp(formatParse));
		var dateTimeParse = normalizedDateTimeFormat;
		dateTimeParse = dateTimeParse.replace($tableau_format.$regexpMetacharacters, '\\$1');
		if (showFullDateTimes === 1) {
			dateTimeParse = dateTimeParse.replace($tableau_format.$dateSpaceTime, '(?:$1 )?$2');
		}
		else {
			dateTimeParse = dateTimeParse.replace($tableau_format.$dateSpaceTime, '$1(?: $2)?');
		}
		dateTimeParse = dateTimeParse.replace($tableau_format.$secondsField, '(?:$1)?');
		dateTimeParse = dateTimeParse.replace($tableau_format.$numericFields, '(\\d+)');
		dateTimeParse = dateTimeParse.replace($tableau_format.$tt, '([^0-9\\s]+)?');
		dateTimeParse = dateTimeParse.replace($tableau_format.$spaceBetweenNumbers, function(match) {
			return match.replace(new RegExp('\\s+', 'g'), '\\s+');
		});
		dateTimeParse = dateTimeParse.replace($tableau_format.$otherWhitespace, '\\s*');
		var tokens = dateTime.match(new RegExp(dateTimeParse));
		if (ss.isNullOrUndefined(tokens)) {
			return null;
		}
		var tokenMap = {};
		for (var t = 1; t < tokens.length; ++t) {
			if (ss.isValue(tokens[t]) && tokens[t].length > 0) {
				tokenMap[formatTokens[t].substr(0, 1).toLowerCase()] = tokens[t];
			}
		}
		return tokenMap;
	};
	$tableau_format.$assembleDateString = function Format$AssembleDateString(tokens, previousValue) {
		if (!ss.keyExists(tokens, 'y') && !ss.keyExists(tokens, 'm') && !ss.keyExists(tokens, 'd')) {
			var baseDate = (!!previousValue.v ? new Date($tableau_types.JsDateFromOleDate(previousValue.v)) : new Date($tableau_types.javaScriptOLEEpoch()));
			tokens['y'] = baseDate.getUTCFullYear().toString();
			tokens['m'] = (baseDate.getUTCMonth() + 1).toString();
			tokens['d'] = baseDate.getUTCDate().toString();
		}
		var yearToken = tokens['y'].replace(new RegExp('^(\\d{2})$'), function(m) {
			var year = parseInt(m, 10);
			return ((year < 30) ? ('20' + m) : ('19' + m));
		});
		var finalDateString = tokens['m'] + '/' + tokens['d'] + '/' + yearToken;
		if (ss.keyExists(tokens, 'h') && ss.keyExists(tokens, 'n')) {
			finalDateString += ' ' + tokens['h'] + ':' + tokens['n'] + ':';
			finalDateString += (ss.keyExists(tokens, 's') ? tokens['s'] : '00');
			if (ss.keyExists(tokens, 't')) {
				if (ss.isValue(tokens['t'].match($tableau_format.$am))) {
					finalDateString += ' am';
				}
				else if (ss.isValue(tokens['t'].match($tableau_format.$pm))) {
					finalDateString += ' pm';
				}
			}
		}
		return finalDateString;
	};
	$tableau_format.mapIcuToOleFormat = function Format$MapIcuToOleFormat(icuFormat) {
		return $tableau_format.$mapTokens($tableau_format.$icuToOleMap, icuFormat);
	};
	$tableau_format.$mapTokens = function Format$MapTokens(tokens, input) {
		if (ss.isNullOrUndefined(tokens) || ss.isNullOrEmptyString(input)) {
			return input;
		}
		var stringBuilder = [];
		var start = 0;
		var end = 0;
		var token = null;
		while (++end <= input.length) {
			var tmp = tokens[input.substring(start, end)];
			if (ss.isValue(tmp)) {
				token = tmp;
			}
			else {
				if (ss.isValue(token)) {
					stringBuilder.push(token);
					--end;
				}
				else {
					stringBuilder.push(input.substring(start, start + 1));
				}
				start = end;
				token = null;
			}
		}
		if (ss.isValue(token)) {
			stringBuilder.push(token);
		}
		return stringBuilder.join('');
	};
	$tableau_format.formatQualifiedName = function Format$FormatQualifiedName(qname) {
		var ret = '';
		for (var $t1 = 0; $t1 < qname.length; $t1++) {
			var t = qname[$t1];
			if (ret.length !== 0) {
				ret += '.';
			}
			ret += '[' + t.replace(new RegExp('\\]', 'g'), ']]') + ']';
		}
		return ret;
	};
	$tableau_format.$formatIntAuto = function Format$FormatIntAuto(v, doSeparators, separatorStr, groupingSpecStr) {
		var result = $tableau_format.$applySeparators(v, doSeparators, separatorStr, groupingSpecStr);
		return (($tableau_format.$trunc(v) >= 0) ? result : ('-' + result));
	};
	$tableau_format.isDateTimeWithNonMidnightTime = function Format$IsDateTimeWithNonMidnightTime(dv) {
		return ss.isValue(dv) && (ss.isNullOrEmptyString(dv.s) || ss.referenceEquals(dv.s, $tableau_types_DataSpecial.DS_NORMAL)) && dv.t === 't' && !$tableau_format.$isMidnight(new Date($tableau_types.JsDateFromOleDate(parseFloat(dv.v))));
	};
	$tableau_format.applyDecimalPlaces = function Format$ApplyDecimalPlaces(v, places, decimalStr) {
		if (places >= 0) {
			var fpart = v - $tableau_format.$trunc(v);
			var str = $tableau_format.$toFixedRounded(fpart, places);
			var parsedInt = parseInt(str, 10);
			if (Math.abs(parsedInt) === 1) {
				return parsedInt;
			}
			if (places === 0) {
				return '';
			}
			str = str.replace(new RegExp('^-?0\\.'), decimalStr);
			return str;
		}
		return '';
	};
	$tableau_format.formatString = function Format$FormatString(value, vizColumn) {
		var type = vizColumn.dataType;
		var formatStrings = vizColumn.formatStrings;
		var role = vizColumn.fieldRole;
		var format = formatStrings;
		var dataValueType;
		var dataValueValue = value;
		switch (type) {
			case 'cstring': {
				dataValueType = 's';
				break;
			}
			case 'date': {
				dataValueType = 'd';
				dataValueValue = $tab_DateUtil.parsePresModelDate(value);
				format = $tableau_format._convertFormatStringsToFormattingInfo(formatStrings);
				break;
			}
			case 'datetime': {
				dataValueType = 't';
				dataValueValue = $tab_DateUtil.parsePresModelDate(value);
				format = $tableau_format._convertFormatStringsToFormattingInfo(formatStrings);
				break;
			}
			case 'integer': {
				dataValueType = 'i';
				dataValueValue = parseInt(value);
				break;
			}
			case 'real': {
				dataValueType = 'r';
				dataValueValue = parseFloat(value);
				break;
			}
			case 'tuple': {
				dataValueType = 's';
				dataValueValue = $tableau_format.$formatTupleString(value);
				break;
			}
			case 'unknown':
			default: {
				dataValueType = null;
				break;
			}
		}
		var dataValue = { t: dataValueType, v: dataValueValue, s: null };
		var tableauTypesRole;
		switch (role) {
			case 'dimension': {
				tableauTypesRole = 'd';
				break;
			}
			case 'measure': {
				tableauTypesRole = 'm';
				break;
			}
			case 'unknown':
			default: {
				tableauTypesRole = null;
				break;
			}
		}
		return $tableau_format.formatDataValue(dataValue, tableauTypesRole, format, null, 0);
	};
	$tableau_format.formatSpecial = function Format$FormatSpecial(specialValue, specialOverride) {
		if (ss.isValue(specialOverride)) {
			return specialOverride;
		}
		switch (specialValue) {
			case '%many-values%': {
				return tab.Strings.SpecialManyValues;
			}
			case '%null%': {
				return '';
			}
			case '%error%': {
				return tab.Strings.SpecialError;
			}
			case '%ragged%': {
				return tab.Strings.SpecialRagged;
			}
			case '%skipped%': {
				return tab.Strings.SpecialSkipped;
			}
			case '%missing%': {
				return '';
			}
			case '%all%': {
				return tab.Strings.SpecialAll;
			}
			case '%no-access%': {
				return tab.Strings.SpecialNoAccess;
			}
			case '%wildcard%': {
				return tab.Strings.SpecialWildcard;
			}
			default: {
				return '#Special';
			}
		}
	};
	$tableau_format.isSpecialValue = function Format$IsSpecialValue(value) {
		return $tableau_format.$specialValues[value];
	};
	$tableau_format.stripFormattedText = function Format$StripFormattedText(formattedText) {
		return (ss.isNullOrUndefined(formattedText) ? null : $(formattedText).find('run').text());
	};
	$tableau_format.deriveNumberEditingFormat = function Format$DeriveNumberEditingFormat(format) {
		return (ss.isNullOrUndefined(format) ? null : [$tableau_format.$autoFormat, '-1', format[$tableau_format.$nfUseSeparators], '', '', '', '', format[$tableau_format.$nfDecimalPointChars], format[$tableau_format.$nfGroupSeparatorChars], format[$tableau_format.$nfGroupingSpec]]);
	};
	$tableau_format.$pad = function Format$Pad(n, d) {
		var ret = n.toString();
		while (ret.length < d) {
			ret = '0' + ret;
		}
		return ret;
	};
	$tableau_format.$isMidnight = function Format$IsMidnight(dt) {
		return ss.isValue(dt) && (dt.getUTCHours() === 0 && dt.getUTCMinutes() === 0 && dt.getUTCSeconds() === 0 || dt.getUTCHours() === 23 && dt.getUTCMinutes() === 59 && dt.getUTCSeconds() === 59);
	};
	$tableau_format.$dtGetAmPm = function Format$DtGetAmPm(d) {
		return ((d.getUTCHours() < 12) ? 'AM' : 'PM');
	};
	$tableau_format.$dtGetHours12 = function Format$DtGetHours12(d) {
		var hours = d.getUTCHours();
		if (hours < 12) {
			if (hours === 0) {
				hours = 12;
			}
		}
		else if (hours > 12) {
			hours -= 12;
		}
		return hours;
	};
	$tableau_format.$dtGetHours24 = function Format$DtGetHours24(d) {
		return d.getUTCHours();
	};
	$tableau_format.$dtGetDayOfYear = function Format$DtGetDayOfYear(d) {
		var startOfYear = new Date(d.getUTCFullYear(), 0, 1, 12);
		var today = new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate(), 12);
		return Math.round((today - startOfYear) / 86400000) + 1;
	};
	$tableau_format.$calendarYearContainingFiscalYearStart = function Format$CalendarYearContainingFiscalYearStart(d, fiscalYearStart) {
		return d.getUTCFullYear() + ((d.getUTCMonth() + 1 < fiscalYearStart) ? -1 : 0);
	};
	$tableau_format.$dtGetYearOfWeekOfYear = function Format$DtGetYearOfWeekOfYear(d, startOfWeek, minDaysInFirstWeek) {
		var daysSinceStartOfWeek = (d.getUTCDay() + 7 - (startOfWeek - 1)) % 7;
		var dateOffset = -daysSinceStartOfWeek + (7 - minDaysInFirstWeek);
		var newDate = new Date(Date.UTC(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate() + dateOffset));
		return newDate.getUTCFullYear();
	};
	$tableau_format.$dtGetWeekOfYear = function Format$DtGetWeekOfYear(d, calOpts) {
		var startOfYear;
		if (calOpts.fiscalYearStart <= 1) {
			var yearToUse = (calOpts.brokenWeeks ? d.getUTCFullYear() : $tableau_format.$dtGetYearOfWeekOfYear(d, calOpts.startOfWeek, calOpts.minDaysInFirstWeek));
			startOfYear = new Date(Date.UTC(yearToUse, 0, 1));
		}
		else {
			startOfYear = new Date(Date.UTC($tableau_format.$calendarYearContainingFiscalYearStart(d, calOpts.fiscalYearStart), calOpts.fiscalYearStart - 1, 1));
		}
		var truncatedDate = new Date(Date.UTC(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate()));
		var daysInFirstWeekBeforeFirstDayOfYear = (startOfYear.getUTCDay() + 7 - (calOpts.startOfWeek - 1)) % 7;
		var dayDiff = ss.Int32.div(truncatedDate - startOfYear, $tableau_format.$millisPerDay) + daysInFirstWeekBeforeFirstDayOfYear;
		if (calOpts.fiscalYearStart <= 1 && 7 - daysInFirstWeekBeforeFirstDayOfYear < calOpts.minDaysInFirstWeek) {
			dayDiff -= 7;
		}
		return Math.floor(dayDiff / 7) + 1;
	};
	$tableau_format.$dtGetFiscalYear = function Format$DtGetFiscalYear(d, fiscalYearStart) {
		var year = d.getUTCFullYear();
		var month = d.getUTCMonth() + 1;
		return ((month < fiscalYearStart || fiscalYearStart === 1) ? 0 : 1) + year;
	};
	$tableau_format.$dtGetFiscalQuarter = function Format$DTGetFiscalQuarter(d, fiscalYearStart) {
		if (fiscalYearStart < 1) {
			fiscalYearStart = 1;
		}
		return Math.floor((d.getUTCMonth() + 1 - fiscalYearStart + 12) % 12 / 3) + 1;
	};
	$tableau_format.$dtGetISOQuarterFromISOWeek = function Format$DTGetISOQuarterFromISOWeek(isoWeekNumber) {
		return ((isoWeekNumber === 53) ? 4 : Math.floor((isoWeekNumber + 12) / 13));
	};
	$tableau_format.$dtGetFiscalOrISOQuarter = function Format$DtGetFiscalOrISOQuarter(d, calendarOptions) {
		if (calendarOptions.forceIso8601Calendar) {
			var isoWeekNumber = $tableau_format.$dtGetWeekOfYear(d, calendarOptions);
			return $tableau_format.$dtGetISOQuarterFromISOWeek(isoWeekNumber);
		}
		return $tableau_format.$dtGetFiscalQuarter(d, calendarOptions.fiscalYearStart);
	};
	$tableau_format.$_dtGetLongDay = function Format$_dtGetLongDay(d, format) {
		if (ss.isNullOrUndefined(format)) {
			return null;
		}
		return format.day[d.getUTCDay() + 1];
	};
	$tableau_format.$_dtGetShortDay = function Format$_dtGetShortDay(d, format) {
		if (ss.isNullOrUndefined(format)) {
			return null;
		}
		return format.shortDay[d.getUTCDay() + 1];
	};
	$tableau_format.$_dtGetLongMonth = function Format$_dtGetLongMonth(d, format) {
		if (ss.isNullOrUndefined(format)) {
			return null;
		}
		return format.month[d.getUTCMonth()];
	};
	$tableau_format.$_dtGetShortMonth = function Format$_dtGetShortMonth(d, format) {
		if (ss.isNullOrUndefined(format)) {
			return null;
		}
		return format.shortMonth[d.getUTCMonth()];
	};
	$tableau_format.formatJsDateTime = function Format$FormatJsDateTime(d, formattingInfo, showFullDateTimes, dataValueType) {
		if (ss.isNullOrUndefined(formattingInfo)) {
			formattingInfo = { format: '*M/d/yyyy', originalFormat: $tab_LocaleStrings.unitedStates, timeFormat: '' };
			if (showFullDateTimes === 2 && $tableau_format.$isMidnight(d)) {
				showFullDateTimes = 0;
			}
		}
		return $tableau_format.formatCustomJsDateTime(d, formattingInfo, showFullDateTimes, dataValueType);
	};
	$tableau_format.formatCustomJsDateTime = function Format$FormatCustomJsDateTime(date, formattingInfo, showFullDateTimes, dataValueType) {
		var format = formattingInfo.format;
		var timeFormat = formattingInfo.timeFormat;
		var calOpts = formattingInfo.calOpts;
		var i = 0, lastHour = 0, len;
		if (ss.isNullOrUndefined(calOpts)) {
			calOpts = new $tab_CalendarOptions();
		}
		var hasTimeFormat = ss.isValue(timeFormat);
		var originalFormatIsAuto = ss.isNullOrUndefined(formattingInfo.originalFormat) || formattingInfo.originalFormat.length === 0 || formattingInfo.originalFormat === 'S';
		var isTimeType = dataValueType === 't';
		if (ss.isValue(showFullDateTimes) && showFullDateTimes !== 0 && hasTimeFormat && originalFormatIsAuto && isTimeType) {
			if (timeFormat.charCodeAt(0) === 42) {
				timeFormat = timeFormat.substr(1);
			}
			if (showFullDateTimes === 2) {
				format = format + ' ' + timeFormat;
			}
			else {
				format = timeFormat;
			}
		}
		if (format === 'L') {
			format = '*dddd, mmmm dd, yyyy';
		}
		if (format.charCodeAt(0) === 42) {
			format = format.substr(1);
		}
		len = format.length;
		var year, yearOfWeek;
		if (calOpts.fiscalYearStart > 1) {
			year = yearOfWeek = $tableau_format.$dtGetFiscalYear(date, calOpts.fiscalYearStart);
		}
		else {
			year = date.getUTCFullYear();
			yearOfWeek = (calOpts.brokenWeeks ? year : $tableau_format.$dtGetYearOfWeekOfYear(date, calOpts.startOfWeek, calOpts.minDaysInFirstWeek));
		}
		var longYearOfWeek = yearOfWeek.toString();
		var shortYearOfWeek = longYearOfWeek.substr(longYearOfWeek.length - 2);
		var longCalendarYear = year.toString();
		var shortCalendarYear = longCalendarYear.substr(longCalendarYear.length - 2);
		var $t1 = [];
		$t1.push(new $tab_StringTuple('ampm', $tableau_format.$dtGetAmPm(date)));
		$t1.push(new $tab_StringTuple('tt', $tableau_format.$dtGetAmPm(date)));
		$t1.push(new $tab_StringTuple('yyyy', (calOpts.forceIso8601Calendar ? longYearOfWeek : longCalendarYear)));
		$t1.push(new $tab_StringTuple('yy', (calOpts.forceIso8601Calendar ? shortYearOfWeek : shortCalendarYear)));
		$t1.push(new $tab_StringTuple('mmmm', $tableau_format.$_dtGetLongMonth(date, formattingInfo.locale_formatting_strings)));
		$t1.push(new $tab_StringTuple('mmm', $tableau_format.$_dtGetShortMonth(date, formattingInfo.locale_formatting_strings)));
		$t1.push(new $tab_StringTuple('dddd', $tableau_format.$_dtGetLongDay(date, formattingInfo.locale_formatting_strings)));
		$t1.push(new $tab_StringTuple('ddd', $tableau_format.$_dtGetShortDay(date, formattingInfo.locale_formatting_strings)));
		$t1.push(new $tab_StringTuple('mm', $tableau_format.$pad(date.getUTCMonth() + 1, 2)));
		$t1.push(new $tab_StringTuple('m', (date.getUTCMonth() + 1).toString()));
		$t1.push(new $tab_StringTuple('dd', $tableau_format.$pad(date.getUTCDate(), 2)));
		$t1.push(new $tab_StringTuple('d', date.getUTCDate().toString()));
		$t1.push(new $tab_StringTuple('hh', $tableau_format.$pad($tableau_format.$dtGetHours24(date), 2)));
		$t1.push(new $tab_StringTuple('h', $tableau_format.$dtGetHours24(date).toString()));
		$t1.push(new $tab_StringTuple('nn', $tableau_format.$pad(date.getUTCMinutes(), 2)));
		$t1.push(new $tab_StringTuple('n', date.getUTCMinutes().toString()));
		$t1.push(new $tab_StringTuple('ss', $tableau_format.$pad(date.getUTCSeconds(), 2)));
		$t1.push(new $tab_StringTuple('s', date.getUTCSeconds().toString()));
		$t1.push(new $tab_StringTuple('ww', $tableau_format.$dtGetWeekOfYear(date, calOpts).toString()));
		$t1.push(new $tab_StringTuple('y', $tableau_format.$dtGetDayOfYear(date).toString()));
		$t1.push(new $tab_StringTuple('w', (date.getUTCDay() + 1).toString()));
		$t1.push(new $tab_StringTuple('q', $tableau_format.$dtGetFiscalOrISOQuarter(date, calOpts).toString()));
		var tokens = $t1;
		var result = $tableau_format.$formatCustomJsDateTimeCompute(date, i, len, tokens, format, lastHour, calOpts, longYearOfWeek, shortYearOfWeek, longCalendarYear, shortCalendarYear);
		format = result.join('');
		return format;
	};
	$tableau_format.$formatCustomJsDateTimeCompute = function Format$FormatCustomJsDateTimeCompute(date, i, len, tokens, format, lastHour, calOpts, longYearOfWeek, shortYearOfWeek, longCalendarYear, shortCalendarYear) {
		var result = [];
		var seenHours = null;
		var seenWeeks = false;
		var seenDateParts = false;
		var lastYearPlaceholder = -1;
		var lastYearIsLong = false;
		var lastTokenWasYear = false;
		var canChangeLastYear = false;
		while (i < len) {
			var matchedToken = false;
			var tokenIsYear = false;
			for (var $t1 = 0; $t1 < tokens.length; $t1++) {
				var pair = tokens[$t1];
				var pattern = pair.get_first();
				var value = pair.get_second();
				if (ss.referenceEquals(pattern, format.substr(i, pattern.length).toLowerCase())) {
					matchedToken = true;
					result.push(value);
					i += pattern.length;
					if (ss.isValue(seenHours) && pattern === 'mm') {
						result[result.length - 1] = $tableau_format.$pad(date.getUTCMinutes(), 2);
					}
					if (ss.isValue(seenHours) && pattern === 'm') {
						result[result.length - 1] = date.getUTCMinutes().toString();
					}
					if (pattern.charCodeAt(0) === 100) {
						seenHours = null;
					}
					if (pattern.charCodeAt(0) === 104) {
						seenHours = pattern;
						lastHour = result.length - 1;
					}
					if (ss.isValue(seenHours) && (pattern === 'ampm' || pattern === 'tt')) {
						result[lastHour] = ((seenHours === 'hh') ? $tableau_format.$pad($tableau_format.$dtGetHours12(date), 2) : $tableau_format.$dtGetHours12(date).toString());
					}
					switch (pattern.charCodeAt(0)) {
						case 121: {
							if (pattern.length > 1) {
								tokenIsYear = true;
								lastYearPlaceholder = result.length - 1;
								lastYearIsLong = pattern.length === 4;
								canChangeLastYear = true;
								if (seenWeeks) {
									if (!calOpts.brokenWeeks) {
										result[lastYearPlaceholder] = (lastYearIsLong ? longYearOfWeek : shortYearOfWeek);
										canChangeLastYear = false;
									}
									seenWeeks = false;
								}
							}
							break;
						}
						case 119: {
							if (pattern.length !== 2) {
								break;
							}
							var hadSeenWeeks = seenWeeks;
							seenWeeks = true;
							if (!hadSeenWeeks && !seenDateParts && canChangeLastYear) {
								if (!calOpts.brokenWeeks) {
									result[lastYearPlaceholder] = (lastYearIsLong ? longYearOfWeek : shortYearOfWeek);
									canChangeLastYear = false;
								}
								seenWeeks = false;
							}
							seenDateParts = false;
							break;
						}
						case 109:
						case 100:
						case 113: {
							if ((pattern === 'mm' || pattern === 'm') && ss.isValue(seenHours)) {
								break;
							}
							seenWeeks = false;
							seenDateParts = true;
							break;
						}
					}
					break;
				}
			}
			if (matchedToken) {
				lastTokenWasYear = tokenIsYear;
				continue;
			}
			if (format.charCodeAt(i) === 92) {
				result.push(format.substr(i + 1, 1));
				i += 2;
			}
			else if (format.charCodeAt(i) === 34) {
				var quote = format.charCodeAt(i);
				var start = ++i;
				while (i < len && format.charCodeAt(i) !== quote) {
					i += 1;
				}
				if (start < len && i > start) {
					result.push(format.substr(start, i - start));
				}
				if (i < len) {
					i += 1;
				}
			}
			else if (format.charCodeAt(i) === 91) {
				var j = ++i;
				while (j < format.length && format.charCodeAt(j) !== 93) {
					j++;
				}
				var contents = format.substring(i, j);
				if ((contents === 'y' || contents === 'Y') && lastTokenWasYear) {
					result[lastYearPlaceholder] = ((contents === 'y') ? (lastYearIsLong ? longCalendarYear : shortCalendarYear) : (lastYearIsLong ? longYearOfWeek : shortYearOfWeek));
					canChangeLastYear = false;
				}
				i = j + 1;
			}
			else {
				result.push(String.fromCharCode(format.charCodeAt(i)));
				i += 1;
			}
			lastTokenWasYear = tokenIsYear;
		}
		return result;
	};
	$tableau_format.$formatOleDateTime = function Format$FormatOleDateTime(v, formattingInfo, showFullDateTimes, dataValueType) {
		var clonedFormattingInfo = null;
		if (!ss.isNullOrUndefined(formattingInfo)) {
			clonedFormattingInfo = $tab_MiscUtil.cloneObject(formattingInfo);
			clonedFormattingInfo.format = $tableau_format.mapIcuToOleFormat(clonedFormattingInfo.format);
		}
		var d = new Date($tableau_types.JsDateFromOleDate(v));
		return $tableau_format.formatJsDateTime(d, clonedFormattingInfo, showFullDateTimes, dataValueType);
	};
	$tableau_format.$trunc = function Format$Trunc(v) {
		return ((v < 0) ? Math.ceil(v) : Math.floor(v));
	};
	$tableau_format.$applySeparators = function Format$ApplySeparators(v, doSeparators, separatorStr, groupingSpecStr) {
		var ipart = Math.abs($tableau_format.$trunc(v));
		var result = '';
		var groupSize = parseInt(String.fromCharCode(groupingSpecStr.charCodeAt(0)), 10) || 3;
		var ipartStr;
		if (ipart < $tableau_format.$minExponentialReal) {
			ipartStr = $tableau_format.$toFixedRounded(ipart, 0);
		}
		else {
			ipartStr = $tableau_format.$toExponentialRounded(ipart, 14);
			var matches = ipartStr.match($tableau_format.$positiveScientificNotation);
			if (ss.isValue(matches)) {
				var trailingDigits = ss.coalesce(matches[2], '');
				var numAddedZeroes = parseInt(matches[3], 10) - trailingDigits.length;
				var zerosString = '';
				for (var i = 0; i < numAddedZeroes; i++) {
					zerosString += '0';
				}
				ipartStr = matches[1] + trailingDigits + zerosString;
			}
		}
		if (!ss.referenceEquals(doSeparators, $tableau_format.$nfSeparatorsTrue)) {
			return ipartStr;
		}
		for (var i1 = ipartStr.length - 1, digitsPassed = 0; i1 >= 0; i1--, digitsPassed++) {
			if (digitsPassed >= groupSize) {
				result = separatorStr + result;
				digitsPassed = 0;
			}
			result = String.fromCharCode(ipartStr.charCodeAt(i1)) + result;
		}
		return result;
	};
	$tableau_format.$applyUnitAdjustment = function Format$ApplyUnitAdjustment(v, unitType) {
		switch (unitType) {
			case 'B':
			case 'G': {
				return v / 1000000000;
			}
			case 'M': {
				return v / 1000000;
			}
			case 'K': {
				return v / 1000;
			}
			default: {
				return v;
			}
		}
	};
	$tableau_format.$applyNegativeFormat = function Format$ApplyNegativeFormat(v, str, prefix, suffix, negativeFormat) {
		str = str.replace(new RegExp('^-'), '');
		if (v >= 0 || (new RegExp('^[.0]*$')).test(str)) {
			return prefix + str + suffix;
		}
		switch ($tableau_format.$getNegativeFormat(negativeFormat)) {
			case 'parenthesis': {
				return '(' + prefix + str + suffix + ')';
			}
			case 'outerSuffix': {
				return prefix + str + suffix + '-';
			}
			case 'innerPrefix': {
				return prefix + '-' + str + suffix;
			}
			case 'innerSuffix': {
				return prefix + str + '-' + suffix;
			}
			case 'outerPrefix':
			case 'automatic':
			default: {
				return '-' + prefix + str + suffix;
			}
		}
	};
	$tableau_format.$getNegativeFormat = function Format$GetNegativeFormat(negativeFormat) {
		var index = parseInt(negativeFormat, 10);
		var unknownNegativeFormat = index < 0 || index >= $tableau_format.$negativeFormats.length;
		ss.Debug.assert(!unknownNegativeFormat, 'Unknown negative format');
		return (unknownNegativeFormat ? 'automatic' : $tableau_format.$negativeFormats[index]);
	};
	$tableau_format.$formatRawInt = function Format$FormatRawInt(v) {
		return $tableau_format.$trunc(v);
	};
	$tableau_format.$formatNumberAutomatic = function Format$FormatNumberAutomatic(v, dataType, p, decimalStr, doSeparators, separatorStr, groupingSpecStr) {
		if (dataType === 'i') {
			return $tableau_format.$formatAuto(v, dataType, p, decimalStr, doSeparators, separatorStr, groupingSpecStr, null, null);
		}
		else {
			return $tableau_format.$formatAuto(v, dataType, p, decimalStr, doSeparators, separatorStr, groupingSpecStr, $tableau_format.$minFixedPointReal, $tableau_format.$minExponentialReal);
		}
	};
	$tableau_format.$formatNumberStandard = function Format$FormatNumberStandard(v, dataType, decimalStr, doSeparators, separatorStr, groupingSpecStr) {
		if (dataType === 'i') {
			return $tableau_format.$formatAuto(v, dataType, null, decimalStr, doSeparators, separatorStr, groupingSpecStr, null, $tableau_format.$minExponentialInteger);
		}
		else {
			return $tableau_format.$formatAuto(v, dataType, null, decimalStr, doSeparators, separatorStr, groupingSpecStr, $tableau_format.$minFixedPointReal, $tableau_format.$minExponentialReal);
		}
	};
	$tableau_format.$formatAuto = function Format$FormatAuto(v, dataType, placesNeg, decimalStr, doSeparators, separatorStr, groupingSpecStr, minFixedPoint, minExponential) {
		var places;
		var trimTrailingZeros;
		var autoExponential;
		if (ss.isValue(placesNeg) && ss.unbox(placesNeg) <= 0) {
			places = -ss.unbox(placesNeg);
			autoExponential = trimTrailingZeros = false;
		}
		else {
			places = $tableau_format.$maxPlaces(v, dataType, true);
			autoExponential = trimTrailingZeros = true;
		}
		var vabs = Math.abs(v);
		if (autoExponential && vabs !== 0 && (ss.isValue(minExponential) && ss.Nullable$1.ge(vabs, minExponential) || ss.isValue(minFixedPoint) && ss.Nullable$1.lt(vabs, minFixedPoint))) {
			var exponentialPlaces = $tableau_format.$maxPlaces(1, dataType, true);
			var expo = $tableau_format.$formatExponential(v, exponentialPlaces, decimalStr);
			if (trimTrailingZeros) {
				return expo.replace(new RegExp('[' + decimalStr + ']?0+e'), 'e');
			}
		}
		var frac = v - $tableau_format.$trunc(v);
		var intPart = $tableau_format.$formatIntAuto(v, doSeparators, separatorStr, groupingSpecStr);
		var fracPart = $tableau_format.$toFixedRounded(frac, places);
		if (Math.abs(parseFloat(fracPart)) >= 1) {
			intPart = $tableau_format.$formatIntAuto($tableau_format.$trunc(v + parseFloat(fracPart)), doSeparators, separatorStr, groupingSpecStr);
			fracPart = fracPart.replace(new RegExp('1'), '0');
		}
		if (!(fracPart.indexOf('.') !== -1)) {
			return intPart;
		}
		if (trimTrailingZeros) {
			fracPart = fracPart.replace(new RegExp('0+$'), '');
			if (ss.endsWithString(fracPart, '.')) {
				return intPart;
			}
		}
		fracPart = fracPart.replace(new RegExp('^-?0\\.'), decimalStr);
		if (v < 0 && intPart === '0' && !(new RegExp('^\\.0+$')).test(fracPart)) {
			intPart = '-0';
		}
		return intPart + fracPart;
	};
	$tableau_format.$maxPlaces = function Format$MaxPlaces(v, dataType, enforceWinMax) {
		var maxSignificantDigits = ((dataType === 'i') ? $tableau_format.$maxIntegerSignificantDigits : $tableau_format.$maxSignificantDigits);
		var maxPlaces = Math.max(0, maxSignificantDigits - Math.abs($tableau_format.$trunc(v)).toString().length);
		return (enforceWinMax ? Math.min(maxPlaces, $tableau_format.$windowsMaxDecimalPlaces) : maxPlaces);
	};
	$tableau_format.$formatExponential = function Format$FormatExponential(v, decimalPlaces, decimalStr) {
		if (isNaN(v) || !isFinite(v)) {
			return v.toString();
		}
		if (decimalPlaces < 0 || isNaN(decimalPlaces)) {
			decimalPlaces = 0;
		}
		if (decimalPlaces > $tableau_format.$maxSignificantDigits) {
			decimalPlaces = $tableau_format.$maxSignificantDigits;
		}
		var f = $tableau_format.$toExponentialRounded(v, decimalPlaces);
		var whereE = f.indexOf(String.fromCharCode(101));
		var exp = f.substr(whereE);
		if (exp.length < 4) {
			f = f.substr(0, whereE + 2) + '0' + f.substr(whereE + 2);
		}
		f = f.replace(new RegExp('\\.'), decimalStr);
		return f;
	};
	$tableau_format.$toExponentialRounded = function Format$ToExponentialRounded(v, decimalPlaces) {
		return $tableau_format.$toFormatRounded(v, decimalPlaces, $tableau_format.$maxSignificantDigits, function(x, places) {
			return x.toExponential(places);
		});
	};
	$tableau_format.$toFixedRounded = function Format$ToFixedRounded(v, decimalPlaces) {
		return $tableau_format.$toFormatRounded(v, decimalPlaces, $tableau_format.$maxPlaces(v, 'r', false), function(x, places) {
			return x.toFixed(places);
		});
	};
	$tableau_format.$toFormatRounded = function Format$ToFormatRounded(v, decimalPlaces, maxPlaces, converter) {
		maxPlaces = Math.max(maxPlaces - 1, decimalPlaces);
		var f = converter(v, maxPlaces);
		var whereE = f.indexOf(String.fromCharCode(101));
		if (whereE === -1) {
			whereE = f.length;
		}
		var roundPlace = whereE - (maxPlaces - decimalPlaces);
		var trailingDigit = f.charCodeAt(roundPlace);
		if (f.charCodeAt(roundPlace - 1) === $tableau_format.$decimalPoint) {
			roundPlace--;
		}
		f = f.substr(0, roundPlace) + f.substr(whereE, f.length);
		if (trailingDigit >= $tableau_format.$five && trailingDigit <= $tableau_format.$nine) {
			var roundDigit;
			do {
				roundPlace--;
				roundDigit = f.charCodeAt(roundPlace);
				if (roundDigit === $tableau_format.$decimalPoint || roundDigit === $tableau_format.$minusSign) {
					roundDigit = $tableau_format.$zero;
					continue;
				}
				roundDigit++;
				if (roundDigit > $tableau_format.$nine) {
					roundDigit = $tableau_format.$zero;
				}
				f = f.substr(0, roundPlace) + String.fromCharCode(roundDigit) + f.substr(roundPlace + 1, f.length);
			} while (roundDigit === $tableau_format.$zero && roundPlace > 0);
			if (roundDigit === $tableau_format.$zero && roundPlace === 0) {
				f = converter(v, decimalPlaces);
			}
		}
		return f;
	};
	$tableau_format.$formatPercentage = function Format$FormatPercentage(v, dataType, decimalPlaces, format) {
		if (decimalPlaces === -1) {
			return $tableau_format.$formatAuto(v * 100, dataType, null, format[$tableau_format.$nfDecimalPointChars], format[$tableau_format.$nfUseSeparators], format[$tableau_format.$nfGroupSeparatorChars], format[$tableau_format.$nfGroupingSpec], null, null) + '%';
		}
		else {
			return $tableau_format.$formatRealCustom(v * 100, decimalPlaces, format) + '%';
		}
	};
	$tableau_format.$formatReal = function Format$FormatReal(v, dataType, format, precision, role) {
		if (ss.isNullOrUndefined(format) || format.length !== $tableau_format.$nfStringsArrayLength) {
			return $tableau_format.$formatNumberAutomatic(v, dataType, precision, '.', ((role === 'd') ? null : $tableau_format.$nfSeparatorsTrue), ',', '3;0');
		}
		var decimalPlaces = parseInt(format[$tableau_format.$nfDecimalPlaces], 10);
		switch (format[$tableau_format.$nfType]) {
			case '': {
				if (decimalPlaces === -1) {
					return $tableau_format.$formatNumberAutomatic(v, dataType, null, format[$tableau_format.$nfDecimalPointChars], format[$tableau_format.$nfUseSeparators], format[$tableau_format.$nfGroupSeparatorChars], format[$tableau_format.$nfGroupingSpec]);
				}
				else {
					return $tableau_format.$formatNumberAutomatic(v, dataType, -decimalPlaces, format[$tableau_format.$nfDecimalPointChars], format[$tableau_format.$nfUseSeparators], format[$tableau_format.$nfGroupSeparatorChars], format[$tableau_format.$nfGroupingSpec]);
				}
			}
			case 'N': {
				return $tableau_format.$formatNumberStandard(v, dataType, format[$tableau_format.$nfDecimalPointChars], format[$tableau_format.$nfUseSeparators], format[$tableau_format.$nfGroupSeparatorChars], format[$tableau_format.$nfGroupingSpec]);
			}
			case 'e': {
				return $tableau_format.$formatExponential(v, decimalPlaces, format[$tableau_format.$nfDecimalPointChars]);
			}
			case 'p': {
				return $tableau_format.$formatPercentage(v, dataType, decimalPlaces, format);
			}
			default: {
				return $tableau_format.$formatRealCustom(v, decimalPlaces, format);
			}
		}
	};
	$tableau_format.$formatRealCustom = function Format$FormatRealCustom(v, decimalPlaces, format) {
		v = $tableau_format.$applyUnitAdjustment(v, format[$tableau_format.$nfUnits]);
		var combinedSuffix = format[$tableau_format.$nfUnits] + format[$tableau_format.$nfSuffix];
		var decimals = $tableau_format.applyDecimalPlaces(v, decimalPlaces, format[$tableau_format.$nfDecimalPointChars]);
		if (typeof(decimals) === 'number') {
			v += decimals;
			decimals = $tableau_format.applyDecimalPlaces(0, decimalPlaces, format[$tableau_format.$nfDecimalPointChars]);
		}
		var str = $tableau_format.$applySeparators(v, format[$tableau_format.$nfUseSeparators], format[$tableau_format.$nfGroupSeparatorChars], format[$tableau_format.$nfGroupingSpec]) + decimals;
		return $tableau_format.$applyNegativeFormat(v, str, format[$tableau_format.$nfPrefix], combinedSuffix, format[$tableau_format.$nfNegativeFormat]);
	};
	$tableau_format.$formatInt = function Format$FormatInt(v, format) {
		return $tableau_format.$formatReal($tableau_format.$trunc(v), 'i', format, null, null);
	};
	$tableau_format._convertFormatStringsToFormattingInfo = function Format$ConvertFormatStringsToFormattingInfo(formatStrings) {
		var $t1 = new $tab_CalendarOptions();
		$t1.fiscalYearStart = parseInt(formatStrings[4]);
		var fi = { format: formatStrings[0], locale: formatStrings[1], originalFormat: formatStrings[2], timeFormat: formatStrings[3], calOpts: $t1 };
		if (isNaN(fi.calOpts.fiscalYearStart)) {
			fi.calOpts.fiscalYearStart = 0;
		}
		fi.calOpts.startOfWeek = parseInt(formatStrings[5]);
		if (isNaN(fi.calOpts.startOfWeek)) {
			fi.calOpts.startOfWeek = 1;
		}
		fi.calOpts.minDaysInFirstWeek = parseInt(formatStrings[6]);
		if (isNaN(fi.calOpts.minDaysInFirstWeek)) {
			fi.calOpts.minDaysInFirstWeek = 1;
		}
		fi.calOpts.brokenWeeks = formatStrings[7] === '1';
		return fi;
	};
	$tableau_format.$formatTupleString = function Format$FormatTupleString(tuple) {
		var DelimiterTupleValue = 44;
		var DelimiterTupleOpen = 40;
		var DelimiterTupleClose = 41;
		var DelimiterString = 39;
		var EscapeChar = 92;
		var vals = [];
		tuple = tuple.trim();
		if (tuple.length === 0) {
			return '';
		}
		var length = tuple.length;
		var idxHead = 0;
		if (idxHead >= length || tuple.charCodeAt(idxHead) !== 40) {
			return '';
		}
		++idxHead;
		while (idxHead < length) {
			var idxTail = idxHead;
			var done = false;
			var withinString = 0;
			while (idxTail < length && !done) {
				var ch = tuple.charCodeAt(idxTail);
				if (withinString === 0 && (ch === 44 || ch === 41)) {
					done = true;
					break;
				}
				else if (ch === 92) {
					idxTail += 2;
				}
				else {
					if (ch === 39) {
						withinString = 1 - withinString;
					}
					++idxTail;
				}
			}
			if (!done) {
				return '';
			}
			var s = tuple.substring(idxHead + 1, idxTail - 1);
			s = ss.replaceAllString(s, '\\\\', '\\');
			s = ss.replaceAllString(s, '\\"', '"');
			s = ss.replaceAllString(s, '\\,', ',');
			s = ss.replaceAllString(s, '\\(', '(');
			s = ss.replaceAllString(s, '\\)', ')');
			vals.push(s);
			idxHead = idxTail;
			++idxHead;
		}
		return vals.join(', ');
	};
	global.tableau.format = $tableau_format;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.Types
	var $tableau_types = function() {
	};
	$tableau_types.__typeName = 'tableau.types';
	$tableau_types.$millisecondsPerDay = function Types$MillisecondsPerDay() {
		return ss.unbox(ss.cast(tab.LazyUtil.lazyInitStaticField($tableau_types, 'millisecondsPerDay', function() {
			return 86400000;
		}), ss.Int32));
	};
	$tableau_types.javaScriptOLEEpoch = function Types$JavaScriptOLEEpoch() {
		return ss.unbox(ss.cast(tab.LazyUtil.lazyInitStaticField($tableau_types, 'javascriptOleEpoch', function() {
			return Date.UTC(1899, 11, 30, 0, 0, 0, 0);
		}), ss.Int32));
	};
	$tableau_types.JsDateFromOleDate = function Types$JsDateFromOleDate(f) {
		var days = ((f < 0) ? Math.ceil(f) : Math.floor(f));
		var ms = Math.round(Math.abs(f - days) * $tableau_types.$millisecondsPerDay()) + days * $tableau_types.$millisecondsPerDay();
		return ms + $tableau_types.javaScriptOLEEpoch();
	};
	$tableau_types.OleDateFromJsDate = function Types$OleDateFromJsDate(ms) {
		var t = new Date(ms);
		var d = Date.UTC(t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate());
		var days = ss.Int32.div(d - $tableau_types.javaScriptOLEEpoch(), $tableau_types.$millisecondsPerDay());
		var time = (ms - d) / $tableau_types.$millisecondsPerDay();
		return days + ((days < 0) ? -1 : 1) * time;
	};
	$tableau_types.isO = function Types$IsO(field) {
		return ss.referenceEquals(field.fieldType, $tableau_types_FieldTypeTypes.FT_ORDINAL) || ss.referenceEquals(field.fieldType, $tableau_types_FieldTypeTypes.FT_NOMINAL);
	};
	$tableau_types.isMetadata = function Types$IsMetadata(field) {
		return field.column_class === 0;
	};
	$tableau_types.isOm = function Types$IsOm(field) {
		return $tableau_types.isO(field) && $tableau_types.isMetadata(field);
	};
	$tableau_types.getRegionType = function Types$GetRegionType(regionName) {
		switch (regionName) {
			case 'viz':
			case 'bottomaxis':
			case 'topaxis':
			case 'leftaxis':
			case 'rightaxis':
			case 'xheader':
			case 'yheader': {
				return $tableau_types_RegionType.table;
			}
			case 'color':
			case 'shape':
			case 'size':
			case 'map': {
				return $tableau_types_RegionType.legend;
			}
			case 'filter': {
				return $tableau_types_RegionType.filter;
			}
			case 'current-page': {
				return $tableau_types_RegionType.currentPage;
			}
			case 'title': {
				return $tableau_types_RegionType.title;
			}
			case 'text': {
				return $tableau_types_RegionType.text;
			}
			case 'bitmap': {
				return $tableau_types_RegionType.bitmap;
			}
			case 'web': {
				return $tableau_types_RegionType.web;
			}
			case 'paramctrl': {
				return $tableau_types_RegionType.parameter;
			}
			case 'draw': {
				return $tableau_types_RegionType.draw;
			}
			case 'text-block': {
				return $tableau_types_RegionType.textBlock;
			}
			case 'layout-basic':
			case 'layout-flow': {
				return $tableau_types_RegionType.layoutContainer;
			}
			default: {
				return null;
			}
		}
	};
	global.tableau.types = $tableau_types;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.UIUtil
	var $tableau_util = function() {
	};
	$tableau_util.__typeName = 'tableau.util';
	$tableau_util.assetUrl = function UIUtil$AssetUrl(res, useLocal) {
		var prefix = (useLocal ? tsConfig.local_static_asset_prefix : tsConfig.external_static_asset_prefix);
		var result;
		if (res.charCodeAt(0) === 47) {
			var last_prefix_char_index = prefix.length - 1;
			if (prefix.charCodeAt(last_prefix_char_index) === 47) {
				result = prefix.substring(0, last_prefix_char_index - 1) + res;
			}
			else {
				result = prefix + res;
			}
		}
		else {
			result = prefix + '/' + res;
		}
		return $tableau_util.adjustForLocalPaths(result);
	};
	$tableau_util.adjustForLocalPaths = function UIUtil$AdjustForLocalPaths(path) {
		if (tsConfig.useLocalPaths && path.charCodeAt(0) === 47) {
			return path.substring(1, path.length);
		}
		else {
			return path;
		}
	};
	$tableau_util.isPrintableNonNumericKeyPressed = function UIUtil$IsPrintableNonNumericKeyPressed(e) {
		return $tableau_util.isPrintableNonNumericInput(e.which, e.shiftKey, e.ctrlKey);
	};
	$tableau_util.isPrintableNonNumericInput = function UIUtil$IsPrintableNonNumericInput(charCode, shiftKey, ctlKey) {
		var isNavigationOrNumPadkeyCode = charCode >= 91 && charCode <= 105;
		var isFunctionKeyCode = charCode >= 112 && charCode <= 123;
		var isNonPrintable = charCode < 47;
		var isNumber = !shiftKey && !ctlKey && (charCode >= 48 && charCode <= 57);
		return !isNavigationOrNumPadkeyCode && !isNonPrintable && !isNumber && !isFunctionKeyCode;
	};
	$tableau_util.preventNonNumericInput = function UIUtil$PreventNonNumericInput(e) {
		if ($tableau_util.isPrintableNonNumericKeyPressed(e)) {
			e.preventDefault();
			e.stopPropagation();
		}
	};
	$tableau_util.inputWouldOverflowMaxLength = function UIUtil$InputWouldOverflowMaxLength(inputData, currentValue, currentSelectionLength, maxLength) {
		if (ss.isNullOrUndefined(inputData)) {
			inputData = '';
		}
		if (ss.isNullOrUndefined(currentValue)) {
			currentValue = '';
		}
		if (inputData.length === 1) {
			var c = inputData.charCodeAt(0);
			if (c <= 8 || c === 127 || c >= 14 && c <= 31 || c === 11 || c === 12) {
				return false;
			}
		}
		return inputData.length - currentSelectionLength + currentValue.length > maxLength;
	};
	$tableau_util.maxLengthEnforcingBeforeInputHandler = function UIUtil$MaxLengthEnforcingBeforeInputHandler(maxLength) {
		return function(e) {
			var selectionLength = ss.cast(e.target, ss.isValue(e.target) && (ss.isInstanceOfType(e.target, Element) && e.target.tagName === 'INPUT')).selectionEnd - ss.cast(e.target, ss.isValue(e.target) && (ss.isInstanceOfType(e.target, Element) && e.target.tagName === 'INPUT')).selectionStart;
			if ($tableau_util.inputWouldOverflowMaxLength(e.data, ss.cast(e.target, ss.isValue(e.target) && (ss.isInstanceOfType(e.target, Element) && e.target.tagName === 'INPUT')).value, selectionLength, maxLength)) {
				e.preventDefault();
				e.stopPropagation();
			}
		};
	};
	$tableau_util.isElementVisible = function UIUtil$IsElementVisible(node) {
		return $(node).css('display') !== 'none';
	};
	$tableau_util.findElementByTagName = function UIUtil$FindElementByTagName(rootNode, tagName, attrMap) {
		rootNode = rootNode || $tab_DomUtil.get_documentBody();
		if ($tableau_util.isNodeMatch(rootNode, tagName, attrMap)) {
			return rootNode;
		}
		var elems = rootNode.getElementsByTagName(tagName);
		var length = elems.length;
		for (var i = 0; i < length; i += 1) {
			if ($tableau_util.isNodeMatch(elems[i], tagName, attrMap)) {
				return elems[i];
			}
		}
		return null;
	};
	$tableau_util.findDirectParentByClassName = function UIUtil$FindDirectParentByClassName(startNode, className, endNode) {
		if (ss.isNullOrUndefined(startNode) || $tab_MiscUtil.isNullOrEmpty$3(className)) {
			return null;
		}
		endNode = endNode || document.body;
		var currentNode = ss.cast(startNode.parentNode, HTMLElement);
		while (!ss.isNullOrUndefined(currentNode) && !ss.referenceEquals(currentNode, endNode)) {
			if (!$tab_MiscUtil.isNullOrEmpty$3(currentNode.className)) {
				if (ss.referenceEquals(currentNode.className.toLowerCase(), className.toLowerCase())) {
					return currentNode;
				}
				currentNode = ss.cast(currentNode.parentNode, HTMLElement);
			}
		}
		return null;
	};
	$tableau_util.isNodeMatch = function UIUtil$IsNodeMatch(node, tagName, attrMap) {
		if (ss.isNullOrUndefined(node) || !ss.referenceEquals(node.tagName.toLowerCase(), tagName.toLowerCase())) {
			return false;
		}
		if (ss.isNullOrUndefined(attrMap)) {
			return true;
		}
		var $t1 = ss.getEnumerator(Object.keys(attrMap));
		try {
			while ($t1.moveNext()) {
				var attr = $t1.current();
				if (attr in attrMap && !ss.referenceEquals(node[attr], attrMap[attr])) {
					return false;
				}
			}
		}
		finally {
			$t1.dispose();
		}
		return true;
	};
	$tableau_util.binarySearch = function(T) {
		return function UIUtil$BinarySearch(value, array, startIndex, endIndex, comparer) {
			var min = ($tab_MiscUtil.isValidIndex(ss.coalesce(startIndex, -1), array) ? ss.unbox(startIndex) : 0);
			var max = ($tab_MiscUtil.isValidIndex(ss.coalesce(endIndex, -1), array) ? ss.unbox(endIndex) : (array.length - 1));
			if (ss.isNullOrUndefined(comparer)) {
				comparer = $tableau_util.$defaultComparer(T);
			}
			var res = {};
			while (min <= max) {
				var mid = Math.floor(min + (max - min) / 2);
				var compare = comparer(array[mid], value);
				if (compare === 0) {
					res.found = true;
					res.index = mid;
					return res;
				}
				else if (compare < 0) {
					min = mid + 1;
				}
				else {
					max = mid - 1;
				}
			}
			res.found = false;
			res.index = min;
			return res;
		};
	};
	$tableau_util.$defaultComparer = function(T) {
		return function UIUtil$DefaultComparer(item1, item2) {
			if (item1 === item2) {
				return 0;
			}
			else if (item1 > item2) {
				return -1;
			}
			else {
				return 1;
			}
		};
	};
	$tableau_util.transform = function UIUtil$Transform(node, spec) {
		spec = spec || { scale: 1, scaleX: 1, scaleY: 1, translateX: 0, translateY: 0, transformOrigin: null, time: 0 };
		if (ss.isNullOrUndefined(spec.transformOrigin)) {
			spec.transformOrigin = { x: ss.Int32.div(node.offsetWidth, 2), y: ss.Int32.div(node.offsetHeight, 2) };
		}
		if (spec.scale !== 1) {
			spec.scaleX = spec.scaleY = spec.scale;
		}
		var str;
		if (window.WebKitCSSMatrix !== undefined && (new WebKitCSSMatrix()).m11 !== undefined) {
			str = ['translate3d(', spec.translateX.toString(), 'px,', spec.translateY.toString(), 'px, 0px)'].join('');
		}
		else {
			str = ['translate(', spec.translateX.toString(), 'px,', spec.translateY.toString(), 'px)'].join('');
		}
		str += [' scale(', spec.scaleX.toString(), ', ', spec.scaleY.toString(), ')'].join('');
		node.style['transitionProperty'] = 'transform';
		node.style['transitionTimingFunction'] = 'cubic-bezier(0, 0, 0.25, 1)';
		node.style['transitionDuration'] = spec.time + 'ms';
		node.style['transform'] = str;
		node.style['webkitTransitionProperty'] = '-webkit-transform';
		node.style['webkitTransitionTimingFunction'] = 'cubic-bezier(0, 0, 0.25, 1)';
		node.style['webkitTransitionDuration'] = spec.time + 'ms';
		node.style['webkitTransform'] = str;
		node.style['MozTransitionProperty'] = '-moz-transform';
		node.style['MozTransitionTimingFunction'] = 'cubic-bezier(0, 0, 0.25, 1)';
		node.style['MozTransitionDuration'] = spec.time + 'ms';
		node.style['MozTransform'] = str;
		if (ss.isValue(spec.transformOrigin)) {
			var transformOriginStr = spec.transformOrigin.x + 'px ' + spec.transformOrigin.y + 'px';
			node.style['transformOrigin'] = transformOriginStr;
			node.style['webkitTransformOrigin'] = transformOriginStr;
			node.style['MozTransformOrigin'] = transformOriginStr;
		}
	};
	$tableau_util.parseUri = function UIUtil$ParseUri(uri) {
		var $t1 = document.createElement('a');
		var a = ss.cast($t1, ss.isValue($t1) && (ss.isInstanceOfType($t1, Element) && $t1.tagName === 'A'));
		var location = a;
		if (ss.isNullOrUndefined(uri)) {
			return null;
		}
		a.href = uri;
		var parsedUri = ss.mkdict(['href', uri, 'host', location.host, 'hostname', location.hostname, 'pathname', location.pathname, 'port', location.port, 'protocol', location.protocol, 'search', location.search]);
		return parsedUri;
	};
	$tableau_util.setupTitleEllipsis = function UIUtil$SetupTitleEllipsis(domTitleBar) {
		domTitleBar.find('div').each(function(idx, elem) {
			var div = $(elem);
			var partitions = div.children('span');
			var ellipsisPart = null;
			var titleWidth = $tab_DoubleUtil.roundToInt(div.width());
			var ELLIPSIS_BUFFER = 10;
			titleWidth -= ELLIPSIS_BUFFER;
			for (var i = 0; i < partitions.length; i++) {
				var partition = partitions[i];
				var partWidth = $tab_DoubleUtil.roundToInt($(partition).width());
				ellipsisPart = partition;
				if (partWidth > titleWidth) {
					break;
				}
				titleWidth -= partWidth;
			}
			if (ss.isValue(ellipsisPart)) {
				div.css('font-family', ellipsisPart.style.fontFamily);
				div.css('font-size', ellipsisPart.style.fontSize);
				div.css('line-height', ellipsisPart.style.lineHeight);
				div.css('color', ellipsisPart.style.color);
				div.css('font-weight', ellipsisPart.style.fontWeight);
				div.css('font-style', ellipsisPart.style.fontStyle);
				div.css('text-decoration', ellipsisPart.style.textDecoration);
			}
			div.css('text-overflow', 'ellipsis');
			div.css('overflow', 'hidden');
		});
	};
	global.tableau.util = $tableau_util;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.CFStyle
	var $tableau_types_CFStyle = function() {
	};
	$tableau_types_CFStyle.__typeName = 'tableau.types.CFStyle';
	global.tableau.types.CFStyle = $tableau_types_CFStyle;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.CFType
	var $tableau_types_CFType = function() {
	};
	$tableau_types_CFType.__typeName = 'tableau.types.CFType';
	global.tableau.types.CFType = $tableau_types_CFType;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.DataSpecial
	var $tableau_types_DataSpecial = function() {
	};
	$tableau_types_DataSpecial.__typeName = 'tableau.types.DataSpecial';
	global.tableau.types.DataSpecial = $tableau_types_DataSpecial;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.DataValueType
	var $tableau_types_DataType = function() {
	};
	$tableau_types_DataType.__typeName = 'tableau.types.DataType';
	global.tableau.types.DataType = $tableau_types_DataType;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.FieldTypeTypes
	var $tableau_types_FieldTypeTypes = function() {
	};
	$tableau_types_FieldTypeTypes.__typeName = 'tableau.types.FieldTypeTypes';
	global.tableau.types.FieldTypeTypes = $tableau_types_FieldTypeTypes;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.HFStyle
	var $tableau_types_HFStyle = function() {
	};
	$tableau_types_HFStyle.__typeName = 'tableau.types.HFStyle';
	global.tableau.types.HFStyle = $tableau_types_HFStyle;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.QFDomain
	var $tableau_types_QFDomain = function() {
	};
	$tableau_types_QFDomain.__typeName = 'tableau.types.QFDomain';
	global.tableau.types.QFDomain = $tableau_types_QFDomain;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.QFFixed
	var $tableau_types_QFFixed = function() {
	};
	$tableau_types_QFFixed.__typeName = 'tableau.types.QFFixed';
	global.tableau.types.QFFixed = $tableau_types_QFFixed;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.QFInclude
	var $tableau_types_QFInclude = function() {
	};
	$tableau_types_QFInclude.__typeName = 'tableau.types.QFInclude';
	$tableau_types_QFInclude.isRange = function QFInclude$IsRange(v) {
		switch (v) {
			case 'include-all':
			case 'include-null':
			case 'include-non-null': {
				return false;
			}
			default: {
				return true;
			}
		}
	};
	global.tableau.types.QFInclude = $tableau_types_QFInclude;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.RegionType
	var $tableau_types_RegionType = function() {
	};
	$tableau_types_RegionType.__typeName = 'tableau.types.RegionType';
	global.tableau.types.RegionType = $tableau_types_RegionType;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.TableauTypesFieldRole
	var $tableau_types_TableauTypesFieldRole = function() {
	};
	$tableau_types_TableauTypesFieldRole.__typeName = 'tableau.types.TableauTypesFieldRole';
	global.tableau.types.TableauTypesFieldRole = $tableau_types_TableauTypesFieldRole;
	////////////////////////////////////////////////////////////////////////////////
	// Tableau.JavaScript.Vql.Core.NoClickDelay
	var $tableau_util_NoClickDelay = function(el) {
		this.$element = null;
		this.$moved = false;
		this.$element = el;
		if (BrowserSupport.BrowserSupport.IsTouch()) {
			this.$element.addEventListener('touchstart'.toString(), ss.mkdel(this, this.$handleEvent), false);
		}
	};
	$tableau_util_NoClickDelay.__typeName = 'tableau.util.NoClickDelay';
	global.tableau.util.NoClickDelay = $tableau_util_NoClickDelay;
	ss.initEnum($ColumnClass, $asm, { CLASS_METADATA: 0, CLASS_DATABASE: 1, CLASS_NUMERICBIN: 2, CLASS_CATEGORICALBIN: 3, CLASS_INSTANCE: 4, CLASS_MDXCALC: 5, CLASS_USERCALC: 6, CLASS_DANGLING: 7, CLASS_LOCALDATA: 8 });
	ss.initEnum($DrillState, $asm, { DRILLNONE: 0, DRILLDOWN: 1, DRILLUP: 2, DRILLBOTH: 3 });
	ss.initClass($tab_$BrowserSupportSetup, $asm, {});
	ss.initClass($tab_$DateUtil$ISO8601DateParts, $asm, {
		getHashCode: function() {
			var h = this.$isoYear;
			h = h * 397 ^ this.$isoWeek;
			h = h * 397 ^ this.$isoWeekday;
			return h;
		},
		equals: function(o) {
			if (!ss.isInstanceOfType(o, $tab_$DateUtil$ISO8601DateParts)) {
				return false;
			}
			return this.$isoYear === o.$isoYear && this.$isoWeek === o.$isoWeek && this.$isoWeekday === o.$isoWeekday;
		}
	});
	$tab_$DateUtil$ISO8601DateParts.$ctor1.prototype = $tab_$DateUtil$ISO8601DateParts.prototype;
	$tab_$DateUtil$ISO8601DateParts.__class = false;
	ss.initClass($tab_$jQuerySelectorExtensionsImpl, $asm, {});
	ss.initClass($tab_$StackTraceParser, $asm, {});
	ss.initClass($tab_CalendarOptions, $asm, {});
	ss.initClass($tab_CallOnDispose, $asm, {
		dispose: function CallOnDispose$Dispose() {
			if (ss.isNullOrUndefined(this.$callOnDispose)) {
				return;
			}
			this.$callOnDispose();
			this.$callOnDispose = null;
		}
	}, null, [ss.IDisposable]);
	ss.initClass($tab_CircleUtil, $asm, {});
	ss.initClass($tab_DashboardRegionZIndexConstants, $asm, {});
	ss.initClass($tab_DataSourceConnectionAttemptErrorResponse, $asm, {});
	$tab_DataSourceConnectionAttemptErrorResponse.$ctor1.prototype = $tab_DataSourceConnectionAttemptErrorResponse.prototype;
	ss.initEnum($tab_DateTimeAutoFormatMode, $asm, { showDateOnly: 0, showTimeOnly: 1, showFullDateTime: 2 });
	ss.initClass($tab_DateUtil, $asm, {});
	ss.initClass($tab_Debouncer, $asm, {
		get_hasPendingAction: function Debouncer$get_HasPendingAction() {
			return ss.isValue(this.$timeoutHandle);
		},
		invokeActionDelayed: function Debouncer$InvokeActionDelayed() {
			ss.Debug.assert(ss.isValue(this.$action), 'invalid action');
			this.cancel();
			this.$timeoutHandle = window.setTimeout(ss.mkdel(this, function() {
				this.$timeoutHandle = null;
				this.$action();
			}), this.$timeout);
		},
		invokeActionImmediate: function Debouncer$InvokeActionImmediate() {
			ss.Debug.assert(ss.isValue(this.$action), 'invalid action');
			this.cancel();
			this.$action();
		},
		cancel: function Debouncer$Cancel() {
			this.$timeoutHandle = $tab_MiscUtil.clearTimeout(this.$timeoutHandle);
		},
		dispose: function Debouncer$Dispose() {
			this.cancel();
			this.$action = null;
		}
	}, null, [ss.IDisposable]);
	ss.initClass($tab_DisposableHolder, $asm, {
		add: function DisposableHolder$Add(a) {
			this.$disposables.push(new $tab_CallOnDispose(a));
		},
		add$1: function DisposableHolder$Add(d) {
			this.$disposables.push(d);
		},
		add$2: function DisposableHolder$Add(ds) {
			ss.arrayAddRange(this.$disposables, ds);
		},
		dispose: function DisposableHolder$Dispose() {
			for (var $t1 = 0; $t1 < this.$disposables.length; $t1++) {
				var disposable = this.$disposables[$t1];
				$tab_MiscUtil.dispose$1(disposable);
			}
			ss.clear(this.$disposables);
		}
	}, null, [ss.IDisposable]);
	ss.initClass($tab_DomUtil, $asm, {});
	ss.initClass($tab_DoubleRectXYUtil, $asm, {});
	ss.initClass($tab_DoubleUtil, $asm, {});
	ss.initClass($tab_ErrorTrace, $asm, {});
	ss.initClass($tab_FeatureFlags, $asm, {});
	ss.initEnum($tab_FeatureParam, $asm, { unknown: 0, newFilter: 4, fieldTypeConversion: 5, newToolbar: 9, buttonDelay: 11, hoverDelay: 12, maxTooltipWhitespace: 18, mapsUseLeafletForGeoSearch: 19, selectionToolsMobile: 23, mapsSearchDebugAlwaysShow: 28, analyticsObjectsDragToViz: 31, gotoMyLocationButton: 32, designTint: 33, newQFWorkbookLevelFormatting: 35, appearanceOfBlendingIcons: 36, outlineStampedShapes: 38, progressiveLoadDelay: 39, catQFDrowdown: 40, opaqueCanvasBackground: 42, logStoryPointCacheHits: 43, dataHLMaxItems: 44, debugTools: 46, instrumentObjects: 47, greyGlassDelay: 48, spinnerDelay: 49, cancelDelay: 50, runtimeWebHost: 51, showRuntimeStatus: 53, objectWriteDetector: 54, newGestureModel: 55, newGestureModelOnboarding: 56, devicePreviewMode: 57 });
	ss.initClass($tab_FeatureParamsLookup, $asm, {});
	ss.initClass($tab_FifoCache, $asm, {
		clear: function FifoCache$Clear() {
			ss.clearKeys(this.cl);
			this.$nextIndex = 0;
		},
		add: function FifoCache$Add(key, value) {
			ss.Debug.assert(ss.isNullOrUndefined(this.cl[key]), 'Adding existing key into cache');
			var oldKey = this.$keyArray[this.$nextIndex];
			delete this.cl[oldKey];
			this.$keyArray[this.$nextIndex] = key;
			this.cl[key] = value;
			this.$nextIndex = (this.$nextIndex + 1) % this.$size;
		}
	});
	ss.initClass($tab_FontUtil, $asm, {});
	ss.initClass($tab_GestureModelSettings, $asm, {});
	ss.initEnum($tab_GestureModelVersion, $asm, { v1: 'v1', v2: 'v2' }, true);
	ss.initClass($tab_HistoryUtil, $asm, {});
	ss.initClass($tab_HttpResponseCodes, $asm, {});
	ss.initInterface($tab_IAppendableView, $asm, { addToDom: null, onAddedToDom: null });
	ss.initInterface($tab_IBrowserViewport, $asm, { get_dimensions: null, translatePositionToViewport: null, getVisibleRoom: null, getDocumentViewport: null });
	ss.initInterface($tab_ICommonBannerProvider, $asm, { showSuccessBanner: null, showErrorBanner: null });
	ss.initInterface($tab_ICommonDialogProvider, $asm, { showAlertDialog: null, showConfirmationDialog: null, ShowErrorDialog: null, ShowLocalErrorDialog: null, showSheetAuthenticationOverlay: null, showGenericDataSourceErrorOverlay: null, showSheetAuthenticationDialog: null, showGenericDataSourceErrorDialog: null, showFileDownloadDialog: null, showConnectionMissingFileDialog: null, showEditConnectionInformationDialog: null, showConnectionSignInDialog: null });
	ss.initClass($tab_InstrumentationTools, $asm, {});
	ss.initClass($tab_IntegerRange, $asm, {
		get_from: function IntegerRange$get_From() {
			return this.$from;
		},
		set_from: function IntegerRange$set_From(value) {
			this.$from = value;
		},
		get_to: function IntegerRange$get_To() {
			return this.$to;
		},
		set_to: function IntegerRange$set_To(value) {
			this.$to = value;
		}
	});
	ss.initInterface($tab_IViewModel, $asm, { add_disposed: null, remove_disposed: null }, [ss.IDisposable]);
	ss.initInterface($tab_IWidget, $asm, {});
	ss.initClass($tab_ListExtensions, $asm, {});
	ss.initClass($tab_LocaleStrings, $asm, {});
	ss.initClass($tab_LoopBreakException, $asm, {}, ss.Exception);
	$tab_LoopBreakException.$ctor1.prototype = $tab_LoopBreakException.$ctor2.prototype = $tab_LoopBreakException.prototype;
	ss.initClass($tab_MapUtil, $asm, {});
	ss.initClass($tab_MapUtility, $asm, {});
	ss.initClass($tab_MetricsLogger, $asm, {
		logEvent: function MetricsLogger$LogEvent(evt) {
			if (this.$eventBuffer.length >= $tab_MetricsLogger.$maxEventBufferSize) {
				this.$eventBuffer.shift();
			}
			this.$eventBuffer.push(evt);
			this.$startProcessingTimer(250);
		},
		$startProcessingTimer: function MetricsLogger$StartProcessingTimer(delay) {
			if (ss.isValue(this.$bufferProcessTimerId)) {
				return;
			}
			this.$bufferProcessTimerId = window.setTimeout(ss.mkdel(this, this.$processBufferedEvents), delay);
		},
		$processBufferedEvents: function MetricsLogger$ProcessBufferedEvents() {
			this.$bufferProcessTimerId = null;
			var metricsToProcess;
			if (this.$eventBuffer.length > $tab_MetricsLogger.$maxEventsToProcess) {
				metricsToProcess = this.$eventBuffer.slice(0, $tab_MetricsLogger.$maxEventsToProcess);
				this.$eventBuffer = this.$eventBuffer.slice($tab_MetricsLogger.$maxEventsToProcess);
				this.$startProcessingTimer($tab_MetricsLogger.$overflowProcessingDelay);
			}
			else {
				metricsToProcess = this.$eventBuffer;
				this.$eventBuffer = [];
			}
			this.$outputEventsToConsole(metricsToProcess);
			if ($tab_MetricsLogger.isLoggerEnabled()) {
				try {
					this.$outputEventsToServer(metricsToProcess);
				}
				catch ($t1) {
				}
			}
		},
		$outputEventsToConsole: function MetricsLogger$OutputEventsToConsole(evts) {
			this.$logger = this.$logger || tab.Logger.lazyGetLogger($tab_MetricsLogger);
			for (var $t1 = 0; $t1 < evts.length; $t1++) {
				var evt = evts[$t1];
				this.$logger.debug($tab_MetricsLogger.$formatEvent(evt, true), []);
			}
		},
		$outputEventsToServer: function MetricsLogger$OutputEventsToServer(evts) {
			var MaxPayloadLength = 1500;
			var numEvents = evts.length;
			var payload = '';
			if (numEvents === 0) {
				return;
			}
			for (var i = 0; i < numEvents; i++) {
				var evt = evts[i];
				var formattedEvent = $tab_MetricsLogger.$formatEvent(evt, false);
				if (payload.length > 0 && payload.length + formattedEvent.length > MaxPayloadLength) {
					this.$sendBeacon(tsConfig.metricsServerHostname, payload);
					payload = '';
				}
				else if (payload.length > 0) {
					payload += '&';
				}
				payload += formattedEvent;
			}
			if (payload.length > 0) {
				this.$sendBeacon(tsConfig.metricsServerHostname, payload);
			}
			if (ss.isNullOrUndefined(this.$beaconCleanupTimerId)) {
				this.$beaconCleanupTimerId = window.setTimeout(ss.mkdel(this, this.$cleanupBeaconImages), $tab_MetricsLogger.$beaconCleanupDelay);
			}
		},
		$sendBeacon: function MetricsLogger$SendBeacon(hostname, payload) {
			var Version = 1;
			if ($tab_MiscUtil.isNullOrEmpty$3(hostname) || $tab_MiscUtil.isNullOrEmpty$3(payload)) {
				return;
			}
			var $t1 = document.createElement('img');
			var beaconImg = ss.cast($t1, ss.isValue($t1) && (ss.isInstanceOfType($t1, Element) && $t1.tagName === 'IMG'));
			var versionStr = 'v=' + Version.toString();
			var beaconStr = hostname;
			beaconStr += '?' + versionStr + '&' + payload;
			beaconImg.src = beaconStr;
			this.$beaconImages.push(beaconImg);
			if (this.$beaconImages.length > $tab_MetricsLogger.$maxBeaconElementArraySize) {
				this.$beaconImages.shift();
			}
		},
		$cleanupBeaconImages: function MetricsLogger$CleanupBeaconImages() {
			try {
				this.$beaconCleanupTimerId = null;
				var index = 0;
				while (index < this.$beaconImages.length) {
					if (this.$beaconImages[index].complete) {
						this.$beaconImages.splice(index, 1);
					}
					else {
						index++;
					}
				}
				if (this.$beaconImages.length > 0) {
					this.$beaconCleanupTimerId = window.setTimeout(ss.mkdel(this, this.$cleanupBeaconImages), $tab_MetricsLogger.$beaconCleanupDelay);
				}
			}
			catch ($t1) {
			}
		}
	});
	ss.initClass($tab_MiscUtil, $asm, {});
	ss.initClass($tab_NaturalLanguageUtil, $asm, {});
	ss.initClass($tab_NavigationMetricsCollector, $asm, {});
	ss.initClass($tab_NewRelicMetricsLogger, $asm, {
		logEvent: function NewRelicMetricsLogger$LogEvent(evt) {
			if (!$tab_NewRelicMetricsLogger.isLoggerSupported()) {
				return;
			}
			var description = evt.parameters.d;
			if (ss.isNullOrUndefined(description)) {
				return;
			}
			var traceVals = new Object();
			traceVals.name = tabBootstrap.MetricsController.getFriendlyEventDescription(description);
			var eventTimeForNR = $tab_NewRelicMetricsLogger.$timeForNewRelic(evt.parameters.t);
			var elapsed = evt.parameters.e;
			if (ss.isValue(elapsed)) {
				traceVals.end = eventTimeForNR;
				traceVals.start = eventTimeForNR - elapsed;
			}
			else {
				traceVals.start = eventTimeForNR;
			}
			newrelic.addToTrace(traceVals);
		}
	});
	ss.initClass($tab_ObjectAccessTracker, $asm, {
		get: function ObjectAccessTracker$Get(target, property, receiver) {
			if (!$tab_ObjectAccessTracker.$isSymbol(property)) {
				var lid = this.$id + '!' + property;
				if (ss.keyExists(this.$tracker, lid)) {
					this.$tracker[lid] = true;
				}
			}
			return target[property];
		}
	});
	ss.initClass($tab_ObjectCoverage, $asm, {
		instrument: function ObjectCoverage$Instrument(toInstrument, objPath) {
			if (objPath === '') {
				this.$originalObject = JSON.parse(JSON.stringify(toInstrument));
			}
			if (toInstrument === Object(toInstrument) && !$tab_InstrumentationTools.isArray(toInstrument)) {
				var xasJsDict = toInstrument;
				var $t1 = new ss.ObjectEnumerator(xasJsDict);
				try {
					while ($t1.moveNext()) {
						var k = $t1.current();
						this.$wasCalled[objPath + '!' + k.key] = false;
						if (k.value === Object(k.value)) {
							xasJsDict[k.key] = this.instrument(k.value, objPath + '!' + k.key);
						}
					}
				}
				finally {
					$t1.dispose();
				}
				return new Proxy(toInstrument, new $tab_ObjectAccessTracker(this.$wasCalled, objPath));
			}
			else if ($tab_InstrumentationTools.isArray(toInstrument)) {
				var xasJsArray = toInstrument;
				for (var k1 = 0; k1 < xasJsArray.length; k1++) {
					this.$wasCalled[objPath + '!' + k1] = false;
					var $t2 = xasJsArray[k1];
					if ($t2 === Object($t2)) {
						xasJsArray[k1] = this.instrument(xasJsArray[k1], objPath + '!' + k1);
					}
				}
				return new Proxy(toInstrument, new $tab_ObjectAccessTracker(this.$wasCalled, objPath));
			}
			return toInstrument;
		}
	});
	ss.initClass($tab_ObjectRegistry, $asm, {});
	ss.initClass($tab_ObjectWriteDetectionProxy, $asm, {
		set: function ObjectWriteDetectionProxy$Set(target, property, value) {
			switch ($tab_ObjectWriteDetectionProxy.$alarmType) {
				case 0: {
					console.error('Write back to protected object detected', target, property, value);
					break;
				}
				case 1: {
					console.error('Write back to protected object detected', target, property, value);
					break;
				}
				case 2: {
					debugger;
					break;
				}
			}
			target[property] = value;
		}
	});
	ss.initClass($tab_Param, $asm, {});
	ss.initEnum($tab_PathnameKey, $asm, { workbookName: 2, sheetId: 3, authoringSheet: 4 });
	ss.initClass($tab_PointDUtil, $asm, {});
	ss.initClass($tab_PointUtil, $asm, {});
	ss.initClass($tab_PropertyChangedEventArgs, $asm, {
		get_propertyName: function PropertyChangedEventArgs$get_PropertyName() {
			return this.$propertyName;
		}
	}, ss.EventArgs);
	ss.initClass($tab_ReadOnlyProxy, $asm, {
		instrument: function ReadOnlyProxy$Instrument(toInstrument) {
			if ($tab_InstrumentationTools.isTypedArray(toInstrument)) {
				var castArray = toInstrument;
				var boxedArray = new Array(castArray.length);
				for (var i = 0; i < castArray.length; i++) {
					boxedArray[i] = castArray[i];
				}
				toInstrument = boxedArray;
			}
			if (toInstrument === Object(toInstrument) && !$tab_InstrumentationTools.isArray(toInstrument)) {
				var xasJsDict = toInstrument;
				var $t1 = new ss.ObjectEnumerator(xasJsDict);
				try {
					while ($t1.moveNext()) {
						var k = $t1.current();
						if (k.value === Object(k.value)) {
							xasJsDict[k.key] = this.instrument(k.value);
						}
					}
				}
				finally {
					$t1.dispose();
				}
				return new Proxy(toInstrument, new $tab_ObjectWriteDetectionProxy());
			}
			else if ($tab_InstrumentationTools.isArray(toInstrument)) {
				var xasJsArray = toInstrument;
				for (var k1 = 0; k1 < xasJsArray.length; k1++) {
					var $t2 = xasJsArray[k1];
					if ($t2 === Object($t2)) {
						xasJsArray[k1] = this.instrument(xasJsArray[k1]);
					}
				}
				return new Proxy(toInstrument, new $tab_ObjectWriteDetectionProxy());
			}
			return toInstrument;
		}
	});
	ss.initClass($tab_RecordCast, $asm, {});
	ss.initClass($tab_RectUtil, $asm, {});
	ss.initClass($tab_RectXYUtil, $asm, {});
	ss.initClass($tab_RegionRectUtil, $asm, {});
	ss.initEnum($tab_ScrollCapabilities, $asm, { xScrollable: 1, yScrollable: 2, none: 0, bothScrollable: 3 });
	ss.initClass($tab_ScrollCapabilitiesUtil, $asm, {});
	ss.initClass($tab_SetUtilities, $asm, {});
	ss.initClass($tab_SizeUtil, $asm, {});
	ss.initClass($tab_SourceCacheForErrorStacks, $asm, {});
	ss.initClass($tab_StackLocation, $asm, {});
	ss.initClass($tab_StackTrace, $asm, {});
	ss.initClass($tab_StackTraceAppender, $asm, {
		logInternal: function StackTraceAppender$LogInternal(source, level, message, args) {
			message = this.formatMessage(ss.replaceAllString(message, '\\n', '<br />'), args);
			if (level > 2) {
				try {
					throw new ss.Exception('Logged(' + tab.Logger.loggerLevelNames[level] + ', from ' + source.get_name() + '): ' + message);
				}
				catch ($t1) {
					var e = ss.Exception.wrap($t1);
					$tab_ErrorTrace.report(e);
				}
			}
		}
	}, tab.BaseLogAppender);
	ss.initClass($tab_StringTuple, $asm, {
		get_first: function StringTuple$get_First() {
			return this.$first;
		},
		get_second: function StringTuple$get_Second() {
			return this.$second;
		}
	});
	ss.initClass($tab_StyleUtil, $asm, {});
	ss.initClass($tab_Transform, $asm, {
		get_translateX: function Transform$get_TranslateX() {
			return this.$translate.x;
		},
		get_translateY: function Transform$get_TranslateY() {
			return this.$translate.y;
		},
		get_transformType: function Transform$get_TransformType() {
			return this.$transformType;
		},
		get_isNull: function Transform$get_IsNull() {
			return this.$transformType === 0;
		},
		transformBounds: function Transform$TransformBounds(bounds) {
			switch (this.$transformType) {
				case 0: {
					return { x: bounds.minX, y: bounds.minY, w: bounds.maxX - bounds.minX, h: bounds.maxY - bounds.minY };
				}
				case 2: {
					var minX = bounds.minX * this.$scale + this.$translate.x;
					var minY = bounds.minY * this.$scale + this.$translate.y;
					var maxX = bounds.maxX * this.$scale + this.$translate.x;
					var maxY = bounds.maxY * this.$scale + this.$translate.y;
					return { x: minX, y: minY, w: maxX - minX, h: maxY - minY };
				}
				default: {
					ss.Debug.fail('Cannot transform bounds for transform type: ' + this.$transformType);
					return null;
				}
			}
		},
		transformPoint: function Transform$TransformPoint(point) {
			switch (this.$transformType) {
				case 0: {
					return point;
				}
				case 1:
				case 3: {
					return { x: (point.x - this.$translate.x) * this.$inverseScale, y: (point.y - this.$translate.y) * this.$inverseScale };
				}
				default: {
					ss.Debug.fail('Cannot transform point for transform type: ' + this.$transformType);
					return null;
				}
			}
		},
		transformRect: function Transform$TransformRect(rect) {
			switch (this.$transformType) {
				case 0: {
					return { x: rect.x, y: rect.y, w: rect.w, h: rect.h };
				}
				case 1:
				case 3: {
					return { x: (rect.x - this.$translate.x) * this.$inverseScale, y: (rect.y - this.$translate.y) * this.$inverseScale, w: rect.w * this.$inverseScale, h: rect.h * this.$inverseScale };
				}
				default: {
					ss.Debug.fail('Cannot transform rect for transform type: ' + this.$transformType);
					return null;
				}
			}
		},
		transformCircle: function Transform$TransformCircle(c) {
			switch (this.$transformType) {
				case 0: {
					return c;
				}
				case 1:
				case 3: {
					var newCenterX = (c.center.x - this.$translate.x) * this.$inverseScale;
					var newCenterY = (c.center.y - this.$translate.y) * this.$inverseScale;
					return { center: { x: newCenterX, y: newCenterY }, radius: c.radius * this.$inverseScale };
				}
				default: {
					ss.Debug.fail('Cannot transform circle for transform type: ' + this.$transformType);
					return null;
				}
			}
		},
		transformPolygon: function Transform$TransformPolygon(listOfPoints) {
			switch (this.$transformType) {
				case 0: {
					return listOfPoints;
				}
				case 1:
				case 3: {
					var cnt = listOfPoints.length;
					var toRet = new Array(cnt);
					for (var i = 0; i < cnt; i = i + 2) {
						toRet[i] = (listOfPoints[i] - this.$translate.x) * this.$inverseScale;
						toRet[i + 1] = (listOfPoints[i + 1] - this.$translate.y) * this.$inverseScale;
					}
					return toRet;
				}
				default: {
					ss.Debug.fail('Cannot transform polygon for transform type: ' + this.$transformType);
					return null;
				}
			}
		}
	});
	ss.initClass($tab_TransformationMatrix, $asm, {
		get_matrix: function TransformationMatrix$get_Matrix() {
			return this.$matrix;
		},
		reset: function TransformationMatrix$Reset() {
			this.$matrix = [1, 0, 0, 1, 0, 0];
		},
		rotate: function TransformationMatrix$Rotate(rad) {
			var c = Math.cos(rad);
			var s = Math.sin(rad);
			var m11 = this.$matrix[0] * c + this.$matrix[2] * s;
			var m12 = this.$matrix[1] * c + this.$matrix[3] * s;
			var m21 = this.$matrix[0] * -s + this.$matrix[2] * c;
			var m22 = this.$matrix[1] * -s + this.$matrix[3] * c;
			this.$matrix[0] = m11;
			this.$matrix[1] = m12;
			this.$matrix[2] = m21;
			this.$matrix[3] = m22;
		},
		translate: function TransformationMatrix$Translate(dx, dy) {
			this.$matrix[4] = this.$matrix[4] + this.$matrix[0] * dx + this.$matrix[2] * dy;
			this.$matrix[5] = this.$matrix[5] + this.$matrix[1] * dx + this.$matrix[3] * dy;
		},
		scale: function TransformationMatrix$Scale(sx, sy) {
			this.$matrix[0] = this.$matrix[0] * sx;
			this.$matrix[1] = this.$matrix[1] * sx;
			this.$matrix[2] = this.$matrix[2] * sy;
			this.$matrix[3] = this.$matrix[3] * sy;
		},
		setTransform: function TransformationMatrix$SetTransform(m) {
			this.$matrix[0] = m.get_matrix()[0];
			this.$matrix[1] = m.get_matrix()[1];
			this.$matrix[2] = m.get_matrix()[2];
			this.$matrix[3] = m.get_matrix()[3];
			this.$matrix[4] = m.get_matrix()[4];
			this.$matrix[5] = m.get_matrix()[5];
		},
		isEqual: function TransformationMatrix$IsEqual(m) {
			return this.$matrix[0] === m.get_matrix()[0] && this.$matrix[1] === m.get_matrix()[1] && this.$matrix[2] === m.get_matrix()[2] && this.$matrix[3] === m.get_matrix()[3] && this.$matrix[4] === m.get_matrix()[4] && this.$matrix[5] === m.get_matrix()[5];
		},
		clone: function TransformationMatrix$Clone() {
			var clone = new $tab_TransformationMatrix();
			clone.setTransform(this);
			return clone;
		}
	});
	ss.initEnum($tab_TransformationType, $asm, { none: 0, pixelToDomain: 1, domainToPixel: 2, offset: 3 });
	ss.initClass($tab_UriUtil, $asm, {});
	ss.initClass($tab_WindowAppender, $asm, {
		logInternal: function WindowAppender$LogInternal(source, level, message, args) {
			if (ss.isNullOrUndefined(this.$logDiv)) {
				this.$buildLogDiv();
			}
			message = this.formatMessage(ss.replaceAllString(message, '\\n', '<br />'), args);
			this.$logDiv.html(message);
		},
		$buildLogDiv: function WindowAppender$BuildLogDiv() {
			this.$logDiv = $("<div class='log-window-appender'>Debug mode ON</div>");
			this.$logDiv.css(ss.mkdict(['position', 'absolute', 'bottom', '0px', 'right', '0px', 'backgroundColor', 'white', 'opacity', '.8', 'border', '1px solid black', 'minWidth', '5px', 'minHeight', '5px', 'z-index', '100']));
			$('body').append(this.$logDiv);
		}
	}, tab.BaseLogAppender);
	ss.initClass($tab_ZIndexConstants, $asm, {});
	ss.initClass($tableau_format, $asm, {});
	ss.initClass($tableau_types, $asm, {});
	ss.initClass($tableau_util, $asm, {});
	ss.initClass($tableau_types_CFStyle, $asm, {});
	ss.initClass($tableau_types_CFType, $asm, {});
	ss.initClass($tableau_types_DataSpecial, $asm, {});
	ss.initClass($tableau_types_DataType, $asm, {});
	ss.initClass($tableau_types_FieldTypeTypes, $asm, {});
	ss.initClass($tableau_types_HFStyle, $asm, {});
	ss.initClass($tableau_types_QFDomain, $asm, {});
	ss.initClass($tableau_types_QFFixed, $asm, {});
	ss.initClass($tableau_types_QFInclude, $asm, {});
	ss.initClass($tableau_types_RegionType, $asm, {});
	ss.initClass($tableau_types_TableauTypesFieldRole, $asm, {});
	ss.initClass($tableau_util_NoClickDelay, $asm, {
		$handleEvent: function NoClickDelay$HandleEvent(e) {
			var touchEvent = e;
			switch (e.type) {
				case 'touchstart': {
					this.$onTouchStart(touchEvent);
					break;
				}
				case 'touchmove': {
					this.$onTouchMove(touchEvent);
					break;
				}
				case 'touchend': {
					this.$onTouchEnd(touchEvent);
					break;
				}
			}
		},
		$onTouchStart: function NoClickDelay$OnTouchStart(e) {
			e.preventDefault();
			this.$moved = false;
			this.$element.addEventListener('touchmove'.toString(), ss.mkdel(this, this.$handleEvent), false);
			this.$element.addEventListener('touchend'.toString(), ss.mkdel(this, this.$handleEvent), false);
		},
		$onTouchMove: function NoClickDelay$OnTouchMove(e) {
			this.$moved = true;
		},
		$onTouchEnd: function NoClickDelay$OnTouchEnd(e) {
			this.$element.removeEventListener('touchmove', ss.mkdel(this, this.$handleEvent), false);
			this.$element.removeEventListener('touchend', ss.mkdel(this, this.$handleEvent), false);
			if (!this.$moved) {
				var theTarget = document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);
				if (theTarget.nodeType === 3) {
					theTarget = ss.cast(theTarget.parentNode, HTMLElement);
				}
				var theEvent = document.createEvent('MouseEvents');
				theEvent['initEvent']('click', true, true);
				theTarget.dispatchEvent(theEvent);
			}
		}
	});
	ss.setMetadata($tab_IView$1, { variance: [1] });
	ss.setMetadata($tab_ScrollCapabilities, { enumFlags: true });
	(function() {
		var config = {
			isMobile: function() {
				return tsConfig.is_mobile;
			}
		};
		BrowserSupport.BrowserSupport.setConfig(config);
	})();
	(function() {
		$tab_SourceCacheForErrorStacks.$unknownFunctionName = '?';
		$tab_SourceCacheForErrorStacks.$sourceCache = {};
		$tab_SourceCacheForErrorStacks.$remoteFetching = true;
	})();
	(function() {
		$tab_$StackTraceParser.$safariNativeCodeRegexp = new RegExp('^(eval@)?(\\[native code\\])?$');
		$tab_$StackTraceParser.$chromeIEStackRegexp = new RegExp('^\\s*at .*(\\S+\\:\\d+|\\(native\\))', 'm');
		$tab_$StackTraceParser.$throwAwayEvalRegexp = new RegExp('(\\(eval at [^\\()]*)|(\\)\\,.*$)');
		$tab_$StackTraceParser.$extractLocationRegexp = new RegExp('(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$');
		$tab_$StackTraceParser.$extractLocationUrlLikeRegexp = new RegExp('[\\(\\)]', 'g');
	})();
	(function() {
		$tab_DoubleUtil.epsilon = Math.pow(2, -52);
		$tab_DoubleUtil.$onePlusEpsilon = 1 + $tab_DoubleUtil.epsilon;
		$tab_DoubleUtil.$upperBound = $tab_DoubleUtil.$onePlusEpsilon;
		$tab_DoubleUtil.$lowerBound = 1 / $tab_DoubleUtil.$onePlusEpsilon;
		$tab_DoubleUtil.$longMaxValue = 9.22337203685477E+18;
		$tab_DoubleUtil.$longMinValue = -9.22337203685477E+18;
	})();
	(function() {
		$tab_DashboardRegionZIndexConstants.visibleReadinessChromeZIndex = 700;
		$tab_DashboardRegionZIndexConstants.readinessChromeResizersZIndex = 701;
		$tab_DashboardRegionZIndexConstants.gridOverlayZIndex = 699;
		$tab_DashboardRegionZIndexConstants.zoneRectPreviewZIndex = $tab_DashboardRegionZIndexConstants.visibleReadinessChromeZIndex;
		$tab_DashboardRegionZIndexConstants.dsdGlassZIndex = 702;
	})();
	(function() {
		$tableau_types_FieldTypeTypes.FT_QUANTITATIVE = 'Q';
		$tableau_types_FieldTypeTypes.FT_ORDINAL = 'O';
		$tableau_types_FieldTypeTypes.FT_NOMINAL = 'N';
		$tableau_types_FieldTypeTypes.FT_UNKNOWN = null;
	})();
	(function() {
		$tableau_types_RegionType.table = 't';
		$tableau_types_RegionType.legend = 'l';
		$tableau_types_RegionType.filter = 'f';
		$tableau_types_RegionType.currentPage = 'p';
		$tableau_types_RegionType.title = 'i';
		$tableau_types_RegionType.text = 'x';
		$tableau_types_RegionType.bitmap = 'b';
		$tableau_types_RegionType.web = 'w';
		$tableau_types_RegionType.draw = 'd';
		$tableau_types_RegionType.textBlock = 'k';
		$tableau_types_RegionType.layoutContainer = 'c';
		$tableau_types_RegionType.parameter = 'a';
	})();
	(function() {
		$tableau_types.ExportDialogType = null;
		var exportDialogType = {};
		exportDialogType['ExportImage'] = ss.mkdict(['title', tab.Strings.ExportImageDialogTitle, 'mimeType', 'image/png', 'message', tab.Strings.ExportImageDialogMessage]);
		exportDialogType['ExportData'] = ss.mkdict(['title', tab.Strings.ExportDataDialogTitle, 'mimeType', 'text/csv', 'message', tab.Strings.ExportDataDialogMessage]);
		exportDialogType['ExportCrosstab'] = ss.mkdict(['title', tab.Strings.ExportCrosstabDialogTitle, 'message', tab.Strings.ExportCrosstabDialogMessage]);
		exportDialogType['PrintPDF'] = ss.mkdict(['title', tab.Strings.PrintPdfDialogTitle, 'mimeType', 'application/pdf', 'message', tab.Strings.PrintPdfDialogMessage, 'noping', true]);
		exportDialogType['ExportPowerPoint'] = ss.mkdict(['title', tab.Strings.ExportPowerPointDialogTitle, 'mimeType', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'message', tab.Strings.ExportPowerPointDialogMessage, 'noping', true]);
		$tableau_types.ExportDialogType = exportDialogType;
	})();
	(function() {
		$tab_DateUtil.oneSecond = (new Date(2008, 11, 21, 1, 1, 2)).getTime() - (new Date(2008, 11, 21, 1, 1, 1)).getTime();
		$tab_DateUtil.oneMinute = (new Date(2008, 11, 21, 1, 2)).getTime() - (new Date(2008, 11, 21, 1, 1)).getTime();
		$tab_DateUtil.oneHour = (new Date(2008, 11, 21, 2)).getTime() - (new Date(2008, 11, 21, 1)).getTime();
		$tab_DateUtil.oneDay = (new Date(2008, 11, 21)).getTime() - (new Date(2008, 11, 20)).getTime();
		$tab_DateUtil.oneWeek = (new Date(2008, 11, 21)).getTime() - (new Date(2008, 11, 14)).getTime();
		$tab_DateUtil.$milisInADay = 86400000;
	})();
	(function() {
		$tab_FeatureFlags.$defaultValues = null;
	})();
	(function() {
		$tab_Param.suppressAlerts = false;
	})();
	(function() {
		$tab_DomUtil.$testWaitAttributeName = 'data-tab-test-wait';
		$tab_DomUtil.$translationFuncIndexer = ss.mkdict(['matrix', 4, 'matrix3d', 12, 'translate', 0, 'translate3d', 0, 'translateX', 0, 'translateY', -1]);
		$tab_DomUtil.$uniqueId = (new Date()).getTime();
	})();
	(function() {
		$tab_ErrorTrace.$shouldReThrow = false;
		$tab_ErrorTrace.$collectWindowErrors = true;
		$tab_ErrorTrace.$getStack = false;
		$tab_ErrorTrace.$queuedTraces = [];
		$tab_ErrorTrace.$onErrorHandlerInstalled = false;
		$tab_ErrorTrace.$oldOnErrorHandler = null;
	})();
	(function() {
		$tab_FeatureParamsLookup.$logger = null;
		$tab_FeatureParamsLookup.$booleanParams = null;
		$tab_FeatureParamsLookup.$floatParams = null;
		$tab_FeatureParamsLookup.$intParams = null;
		$tab_FeatureParamsLookup.$stringParams = null;
		$tab_FeatureParamsLookup.$stringToEnumLookup = null;
		$tab_FeatureParamsLookup.$booleanLookUp = null;
		$tab_FeatureParamsLookup.$floatLookUp = null;
		$tab_FeatureParamsLookup.$intLookUp = null;
		$tab_FeatureParamsLookup.$stringLookUp = null;
		{
			$tab_FeatureParamsLookup.$logger = tab.Logger.lazyGetLogger($tab_FeatureParamsLookup);
			$tab_FeatureParamsLookup.$booleanParams = [];
			$tab_FeatureParamsLookup.$floatParams = [];
			$tab_FeatureParamsLookup.$intParams = [];
			$tab_FeatureParamsLookup.$stringParams = [];
			$tab_FeatureParamsLookup.$stringToEnumLookup = {};
			$tab_FeatureParamsLookup.$booleanLookUp = {};
			$tab_FeatureParamsLookup.$floatLookUp = {};
			$tab_FeatureParamsLookup.$intLookUp = {};
			$tab_FeatureParamsLookup.$stringLookUp = {};
		}
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':newfilter', 4, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':fieldconversion', 5, true);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':newtoolbar', 9, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':selectiontoolsmobile', 23, true);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':mapssearchdebugalwaysshow', 28, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':useleafletforgeosearch', 19, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':aodragtoviz', 31, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':gotomylocationbutton', 32, true);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':designtint', 33, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':newqfwolf', 35, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':appearanceofblendingicons', 36, true);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':outlinestampedshapes', 38, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':catqfdropdown', 40, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':opaquecanvas', 42, true);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':logstorypointcachehits', 43, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':debugtools', 46, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':showruntimestatus', 53, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':newgesturemodel', 55, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':newgesturemodelonboarding', 56, false);
		$tab_FeatureParamsLookup.$registerBooleanFeatureParam(':devicepreviewmode', 57, false);
		$tab_FeatureParamsLookup.$registerIntFeatureParam(':buttondelay', 11);
		$tab_FeatureParamsLookup.$registerIntFeatureParam(':hoverdelay', 12);
		$tab_FeatureParamsLookup.$registerIntFeatureParam(':maxtooltipwhitespace', 18);
		$tab_FeatureParamsLookup.$registerIntFeatureParam(':datahlmaxitems', 44);
		$tab_FeatureParamsLookup.$registerIntFeatureParam(':greyglassdelay', 48);
		$tab_FeatureParamsLookup.$registerIntFeatureParam(':spinnerdelay', 49);
		$tab_FeatureParamsLookup.$registerIntFeatureParam(':canceldelay', 50);
		$tab_FeatureParamsLookup.$registerIntFeatureParam(':owd', 54);
		$tab_FeatureParamsLookup.$registerIntFeatureParam(':progloaddelay', 39);
		$tab_FeatureParamsLookup.$registerStringFeatureParam(':instrumentobjects', 47);
		$tab_FeatureParamsLookup.$registerStringFeatureParam(':runtimewebhost', 51);
		$tab_FeatureParamsLookup.$parseFeatureParamsFromUrl();
	})();
	(function() {
		$tab_FontUtil.tableauFallback = 'Arial';
		$tab_FontUtil.sansSerifFallback = 'sans-serif';
		$tab_FontUtil.$fallbackFontCache = new $tab_FifoCache(20);
	})();
	(function() {
		$tab_HttpResponseCodes.httpUnauthorizedCode = 401;
		$tab_HttpResponseCodes.httpServiceUnavailable = 503;
		$tab_HttpResponseCodes.httpInternalServerError = 500;
	})();
	(function() {
		$tab_LocaleStrings.afrikaans = 'af_ZA';
		$tab_LocaleStrings.albanian = 'sq_AL';
		$tab_LocaleStrings.amharic = 'am_ET';
		$tab_LocaleStrings.arabic = 'ar_BH';
		$tab_LocaleStrings.france = 'fr_FR';
		$tab_LocaleStrings.japan = 'ja_JP';
		$tab_LocaleStrings.unitedKingdom = 'en_UK';
		$tab_LocaleStrings.unitedStates = 'en_US';
	})();
	(function() {
		$tab_MapUtil.touchEventSamplingRate = 4;
		$tab_MapUtil.defaultWheelDeltaIncrement = 120;
		$tab_MapUtil.minimumZoomLevelIncrement = 0.25;
		$tab_MapUtil.maxWheelDelta = 360;
		$tab_MapUtil.$scrollDeltaMultiplier = 480;
		$tab_MapUtil.$mapboxGLTileSize = 512;
	})();
	(function() {
		$tab_MetricsLogger.$maxBeaconElementArraySize = 100;
		$tab_MetricsLogger.$maxEventBufferSize = 400;
		$tab_MetricsLogger.$maxEventsToProcess = 20;
		$tab_MetricsLogger.$defaultProcessingDelay = 250;
		$tab_MetricsLogger.$overflowProcessingDelay = 5;
		$tab_MetricsLogger.$beaconCleanupDelay = 250;
		$tab_MetricsLogger.$debugParamNames = null;
		$tab_MetricsLogger.$debugEventNames = null;
		$tab_MetricsLogger.$debugParamNames = {};
		$tab_MetricsLogger.$debugParamNames['d'] = 'DESC';
		$tab_MetricsLogger.$debugParamNames['t'] = 'TIME';
		$tab_MetricsLogger.$debugParamNames['id'] = 'ID';
		$tab_MetricsLogger.$debugParamNames['sid'] = 'SESSION_ID';
		$tab_MetricsLogger.$debugParamNames['e'] = 'ELAPSED';
		$tab_MetricsLogger.$debugParamNames['v'] = 'VALS';
		$tab_MetricsLogger.$debugParamNames['wb'] = 'WORKBOOK';
		$tab_MetricsLogger.$debugParamNames['s'] = 'SHEET_NAME';
		$tab_MetricsLogger.$debugParamNames['p'] = 'PROPS';
		$tab_MetricsLogger.$debugParamNames['m'] = 'MOBILE';
		$tab_MetricsLogger.$debugEventNames = {};
		$tab_MetricsLogger.$debugEventNames['nav'] = 'Navigation';
		$tab_MetricsLogger.$debugEventNames['wp'] = 'ProfileEnd';
		$tab_MetricsLogger.$debugEventNames['gen'] = 'Generic';
		$tab_MetricsLogger.$debugEventNames['init'] = 'SessionInit';
	})();
	(function() {
		$tab_NavigationMetricsCollector.$navigationMetricsOrder = ['navigationStart', 'unloadEventStart', 'unloadEventEnd', 'redirectStart', 'redirectEnd', 'fetchStart', 'domainLookupStart', 'domainLookupEnd', 'connectStart', 'connectEnd', 'secureConnectionStart', 'requestStart', 'responseStart', 'responseEnd', 'domLoading', 'domInteractive', 'domContentLoadedEventStart', 'domContentLoadedEventEnd', 'domComplete', 'loadEventStart', 'loadEventEnd'];
		$tab_NavigationMetricsCollector.$navMetrics = null;
		var w = window;
		var loadHandler = function(ev) {
			_.defer($tab_NavigationMetricsCollector.collectMetrics);
		};
		if (!!ss.isValue(w.addEventListener)) {
			window.addEventListener('load', loadHandler, false);
		}
		else if (!!ss.isValue(w.attachEvent)) {
			w.attachEvent('load', loadHandler);
		}
	})();
	(function() {
		$tab_ObjectCoverage.trackedObjects = {};
		$tab_ObjectCoverage.$coveredObjects = null;
	})();
	(function() {
		$tab_ObjectRegistry.$typeRegistry = null;
		$tab_ObjectRegistry.$deferredRegistry = null;
	})();
	(function() {
		$tab_ObjectWriteDetectionProxy.$alarmType = $tab_FeatureParamsLookup.getInt(54);
	})();
	(function() {
		$tab_StackTraceAppender.globalAppender = new tab.LogAppenderInstance(function() {
			return new $tab_StackTraceAppender();
		});
		$tab_StackTraceAppender.globalAppender.enableLogging(function(_, loggerLevel) {
			return loggerLevel > 2;
		});
	})();
	(function() {
		$tab_StyleUtil.defaultCustomStyleElementId = 'tab-appendedCustomStyle';
		$tab_StyleUtil.$regexCssClassName = new RegExp('-?[_a-zA-Z]+[_a-zA-Z0-9-]*');
		$tab_StyleUtil.$customStyleSheetDictionary = {};
	})();
	(function() {
		$tab_Transform.$nullTransform = null;
		$tab_Transform.$nullTransform = new $tab_Transform(0, 0, 1, 0);
	})();
	(function() {
		$tab_UriUtil.defaultHelpVersion = '0.0';
		$tab_UriUtil.onlineHelpOrigin = 'http://www.tableau.com';
		$tab_UriUtil.$offlineHelpUrl = '/offline_help/{0}/help.htm#{1}';
		$tab_UriUtil.$serverRootUrlTemplate = '{0}/{1}';
		$tab_UriUtil.$corsProxyUrlTemplate = '{0}/proxy/-/{1}';
	})();
	(function() {
		$tab_WindowAppender.globalAppender = new tab.LogAppenderInstance(function() {
			return new $tab_WindowAppender();
		});
		$tab_WindowAppender.globalAppender.enableLogging(function(logger, _) {
			return logger.get_name() === 'WindowAppender';
		});
	})();
	(function() {
		$tab_ZIndexConstants.waitHandlerGlassZIndex = 990;
		$tab_ZIndexConstants.dialogAboveGlassAndSpinnerStandardZIndex = 1000;
		$tab_ZIndexConstants.belowGlassAndSpinnerStandardZIndex = 988;
		$tab_ZIndexConstants.glassStyleZIndex = 999;
	})();
	(function() {
		$tableau_types_DataSpecial.DS_NORMAL = null;
		$tableau_types_DataSpecial.DS_NULL = 'n';
		$tableau_types_DataSpecial.DS_ALL = 'a';
		$tableau_types_DataSpecial.DS_WILDCARD = 'w';
		$tableau_types_DataSpecial.DS_SKIPPED = 's';
		$tableau_types_DataSpecial.DS_NOACCESS = 'p';
		$tableau_types_DataSpecial.DS_RAGGED = 'r';
		$tableau_types_DataSpecial.DS_ERROR = 'e';
		$tableau_types_DataSpecial.DS_MISSING = 'm';
	})();
	(function() {
		$tableau_format.specialManyValues = '%many-values%';
		$tableau_format.specialNull = '%null%';
		$tableau_format.specialError = '%error%';
		$tableau_format.specialRagged = '%ragged%';
		$tableau_format.specialSkipped = '%skipped%';
		$tableau_format.specialMissing = '%missing%';
		$tableau_format.specialAll = '%all%';
		$tableau_format.specialNoAccess = '%no-access%';
		$tableau_format.specialWildcard = '%wildcard%';
		$tableau_format.$millisPerDay = 86400000;
		$tableau_format.$maxSignificantDigits = 15;
		$tableau_format.$maxIntegerSignificantDigits = 6;
		$tableau_format.$minExponentialReal = 1E+15;
		$tableau_format.$minExponentialInteger = 1000000;
		$tableau_format.$minFixedPointReal = 0.0001;
		$tableau_format.$windowsMaxDecimalPlaces = 9;
		$tableau_format.$decimalPoint = 46;
		$tableau_format.$minusSign = 45;
		$tableau_format.$zero = 48;
		$tableau_format.$five = 53;
		$tableau_format.$nine = 57;
		$tableau_format.$nfSeparatorsTrue = 't';
		$tableau_format.$nfSeparatorsFalse = 'f';
		$tableau_format.$nfStringsArrayLength = 10;
		$tableau_format.$nfType = 0;
		$tableau_format.$autoFormat = '';
		$tableau_format.$systemNumber = 'N';
		$tableau_format.$customScientific = 'e';
		$tableau_format.$customPercentage = 'p';
		$tableau_format.$nfDecimalPlaces = 1;
		$tableau_format.$nfUseSeparators = 2;
		$tableau_format.$nfPrefix = 3;
		$tableau_format.$nfSuffix = 4;
		$tableau_format.$nfUnits = 5;
		$tableau_format.$nfNegativeFormat = 6;
		$tableau_format.$nfDecimalPointChars = 7;
		$tableau_format.$nfGroupSeparatorChars = 8;
		$tableau_format.$nfGroupingSpec = 9;
		$tableau_format.$negativeFormats = ['automatic', 'parenthesis', 'outerPrefix', 'outerSuffix', 'innerPrefix', 'innerSuffix'];
		$tableau_format.isO8601DateFormat = {};
		$tableau_format.isO8601DateTimeFormat = {};
		$tableau_format.isO8601TimeFormat = {};
		$tableau_format.$regexpMetacharacters = new RegExp('(\\\\|\\^|\\$|\\*|\\+|\\?|\\.|\\:|\\,|\\(|\\)|\\[|\\]|\\{|\\}|\\|)', 'g');
		$tableau_format.$dateSpaceTime = new RegExp('^([yYmMdD\\W]+)\\s+([hnst\\W]+)$');
		$tableau_format.$secondsField = new RegExp('(\\\\[:.]s+)');
		$tableau_format.$tt = new RegExp('(t+)', 'g');
		$tableau_format.$numericFields = new RegExp('([yYmMdDhnswq]+)', 'g');
		$tableau_format.$spaceBetweenNumbers = new RegExp('\\(\\\\d\\+\\)(?:\\(\\?\\:)?\\s+\\(\\\\d\\+\\)', 'g');
		$tableau_format.$otherWhitespace = new RegExp('\\s', 'g');
		$tableau_format.$charactersAfterDay = new RegExp('(^|d)([^h]*)(h|$)', 'gi');
		$tableau_format.$charactersAfterHour = new RegExp('h([^d]*)(d|$)', 'gi');
		$tableau_format.$am = new RegExp('^(a|a\\.?m\\.?|㏂|π\\.?µ\\.?|午前)$', 'i');
		$tableau_format.$pm = new RegExp('^(p|p\\.?m\\.?|㏘|µ\\.?µ\\.?|午後)$', 'i');
		$tableau_format.$positiveScientificNotation = new RegExp('(\\d)(?:\\.(\\d+))?e\\+(\\d+)');
		$tableau_format.$icuToOleMap = ss.mkdict(['yyyyy', 'yyyyy', 'yyyy', 'yyyy', 'yyy', 'yyyy', 'yy', 'yy', 'y', 'yyyy', 'L', 'm', 'LL', 'mm', 'LLL', 'mmm', 'LLLL', 'mmmm']);
		$tableau_format.defaultLocaleStrings = { day: ['', tab.Strings.Sunday, tab.Strings.Monday, tab.Strings.Tuesday, tab.Strings.Wednesday, tab.Strings.Thursday, tab.Strings.Friday, tab.Strings.Saturday, tab.Strings.Sunday], shortDay: ['', tab.Strings.SundayShort, tab.Strings.MondayShort, tab.Strings.TuesdayShort, tab.Strings.WednesdayShort, tab.Strings.ThursdayShort, tab.Strings.FridayShort, tab.Strings.SaturdayShort, tab.Strings.SundayShort], shortMonth: [tab.Strings.JanuaryShort, tab.Strings.FebruaryShort, tab.Strings.MarchShort, tab.Strings.AprilShort, tab.Strings.MayShort, tab.Strings.JuneShort, tab.Strings.JulyShort, tab.Strings.AugustShort, tab.Strings.SeptemberShort, tab.Strings.OctoberShort, tab.Strings.NovemberShort, tab.Strings.DecemberShort], month: [tab.Strings.January, tab.Strings.February, tab.Strings.March, tab.Strings.April, tab.Strings.May, tab.Strings.June, tab.Strings.July, tab.Strings.August, tab.Strings.September, tab.Strings.October, tab.Strings.November, tab.Strings.December] };
		$tableau_format.baseTimestamp = { t: 't', v: $tableau_types.OleDateFromJsDate(Date.UTC(1918, 10, 11, 11, 11, 0)), s: null };
		$tableau_format.$specialValues = null;
		$tableau_format.$fullwidthToAscii = ss.mkdict(['０', '0', '１', '1', '２', '2', '３', '3', '４', '4', '５', '5', '６', '6', '７', '7', '８', '8', '９', '9', '－', '-', '．', '.', '。', '.']);
		$tableau_format.isO8601DateFormat.format = 'yyyy-mm-dd';
		$tableau_format.isO8601DateFormat.timeFormat = 'hh:nn';
		$tableau_format.isO8601DateTimeFormat.format = 'yyyy-mm-ddThh:nn';
		$tableau_format.isO8601TimeFormat.format = 'hh:nn';
		$tableau_format.$specialValues = ss.mkdict([$tableau_format.specialManyValues, true, $tableau_format.specialNull, true, $tableau_format.specialError, true, $tableau_format.specialRagged, true, $tableau_format.specialSkipped, true, $tableau_format.specialMissing, true, $tableau_format.specialAll, true, $tableau_format.specialNoAccess, true, $tableau_format.specialWildcard, true]);
	})();
	(function() {
		if (BrowserSupport.BrowserSupport.IsMac()) {
			$(document).addClass('tb_mac');
		}
	})();
	(function() {
		$tableau_types_CFStyle.CFS_ALL = 'all';
		$tableau_types_CFStyle.CFS_SINGLE = 'single-select';
		$tableau_types_CFStyle.CFS_MULTIPLE = 'multi-select';
	})();
	(function() {
		$tableau_types_CFType.CFT_INCLUSIVE = 'include';
		$tableau_types_CFType.CFT_EXCLUSIVE = 'exclude';
	})();
	(function() {
		$tableau_types_HFStyle.HFS_SINGLE = 'single-select';
		$tableau_types_HFStyle.HFS_MULTIPLE = 'multi-select';
	})();
	(function() {
		$tableau_types_QFDomain.QFD_ALL = 'all';
		$tableau_types_QFDomain.QFD_CONTEXT = 'context';
		$tableau_types_QFDomain.QFD_RELEVANT = 'relevant';
		$tableau_types_QFDomain.QFD_CASCADING = 'cascading';
		$tableau_types_QFDomain.QFD_CASCADING_CONTEXT = 'cascading-context';
	})();
	(function() {
		$tableau_types_QFFixed.QFF_FIXED_START = 'start';
		$tableau_types_QFFixed.QFF_FIXED_END = 'end';
	})();
	(function() {
		$tableau_types_QFInclude.QFI_ALL = 'include-all';
		$tableau_types_QFInclude.QFI_NON_NULL = 'include-non-null';
		$tableau_types_QFInclude.QFI_NULL_ONLY = 'include-null';
		$tableau_types_QFInclude.QFI_RANGE = 'include-range';
		$tableau_types_QFInclude.QFI_RANGE_OR_NULL = 'include-range-or-null';
	})();
})();

}());

// END Core
