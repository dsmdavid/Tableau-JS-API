<!DOCTYPE html>
<html>
<title>API autorefresh</title>
<!-- Importing Tableau API -->
<script type="text/javascript" src="https://public.tableau.com/javascripts/api/tableau-2.js"></script>

    
<body onload="initialize();">
       
    <div>API embed - Autorefresh every N seconds</div>
        <div class="circle" id="countdown"></div>
    <div id="myViz"> </div>
    <!-- Remove this to see info about the selected marks
    <div id="markDetails">Information about selected marks displays here.</div>
    -->
</body>
<script>

var viz;
var ourInterval = 10000;

    function refreshView(){
        viz.refreshDataAsync();
    }

    
    function initialize() {

        var placeholderDiv = document.getElementById("myViz");
        var url = "https://public.tableau.com/views/TheTime_0/withboxes?";
        var options = {
            width: 1200,
            height: 600,
            hideTabs: true,
            hideToolbar: true,
            onFirstInteractive: function(){
                listenToMarksSelection();

            }
        }
        viz = new tableau.Viz(placeholderDiv, url, options);
        }

    
var refreshInterval =  setInterval(refreshView,ourInterval);
    
 
    function launchIntervalRefresh(){
        clearInterval(refreshInterval);
       // console.log("This is :")
//        setInterval(refreshView,ourInterval);
        refreshInterval =  setInterval(refreshView,ourInterval);
        //console.log(setInterval)
    }
    
var timeleft = ourInterval/1000;
    
    function countdownDownloadTimer() {
          document.getElementById("countdown").innerHTML = timeleft + " ";
          timeleft -= 1;
          if(timeleft <= 0){
            timeleft = ourInterval/1000;
            document.getElementById("countdown").innerHTML = timeleft + " ";
              var div = document.getElementById("countdown");
                div.style.background = '#000000';
          }
              
            
        
    }
    
var downloadTimer = setInterval(countdownDownloadTimer, 1000);
    
    /*  Catching Interval Time    */
 function listenToMarksSelection() {
  viz.addEventListener(tableau.TableauEventName.MARKS_SELECTION, onMarksSelection);
}

function onMarksSelection(marksEvent) {
  return marksEvent.getMarksAsync().then(reportSelectedMarks);
}

function reportSelectedMarks(marks) {
var html = ""; 
            
            for (var markIndex = 0; markIndex < marks.length; markIndex++) {
                var pairs = marks[markIndex].getPairs();
                html += "<b>Mark " + markIndex + ":</b><ul>";
                for (var pairIndex = 0; pairIndex < pairs.length; pairIndex++) {
                    var pair = pairs[pairIndex];
                    html += "<li><b>Field Name:</b> " + pair.fieldName;
                    html += "<br/><b>Value:</b> " + pair.formattedValue + "</li>";
                    
                    if (pair.fieldName ==="Value") {
                    ourInterval = pair.formattedValue*1000;
                    
                    //Change the refresh time for the viz
                    timeleft = 0;
                    clearInterval(refreshInterval);
                    refreshInterval =  setInterval(refreshView,ourInterval);}
                    
                }
                html += "</ul>";
            }
            var infoDiv = document.getElementById('markDetails');
            //infoDiv.innerHTML = html;
     
}         
    
    
    
    
    
</script>

<style>
    
.countdown {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  font-size: 50px;
  color: #fff;
  line-height: 500px;
  text-align: center;
  background: #ff00ff;
}
    
.circle {
    position: relative;
    top: 50%;
    left: 50%;
  width: 100px;
  height: 100px;
  border-radius: 50%;
  font-size: 20px;
  color: #fff;
  line-height: 100px;
  text-align: center;
  background: #ff00ff;
    
}
    

</style>
</html>